{"version":3,"file":"worker-thread-72faaf00.js","sources":["packages/php-wasm/node-polyfills/src/lib/current-js-runtime.ts","packages/php-wasm/node-polyfills/src/lib/blob.ts","packages/php-wasm/node-polyfills/src/lib/custom-event.ts","packages/php-wasm/node-polyfills/src/lib/url.ts","packages/php-wasm/universal/src/lib/rethrow-file-system-error.ts","packages/php-wasm/logger/src/lib/handlers/log-event.ts","packages/php-wasm/logger/src/lib/handlers/log-to-console.ts","packages/php-wasm/logger/src/lib/handlers/log-to-memory.ts","packages/php-wasm/logger/src/lib/logger.ts","packages/php-wasm/util/src/lib/sleep.ts","packages/php-wasm/util/src/lib/semaphore.ts","packages/php-wasm/util/src/lib/paths.ts","packages/php-wasm/util/src/lib/split-shell-command.ts","packages/php-wasm/util/src/lib/create-spawn-handler.ts","packages/php-wasm/util/src/lib/random-string.ts","packages/php-wasm/util/src/lib/php-vars.ts","packages/php-wasm/universal/src/lib/fs-helpers.ts","packages/php-wasm/universal/src/lib/php-worker.ts","packages/php-wasm/universal/src/lib/php-response.ts","packages/php-wasm/universal/src/lib/load-php-runtime.ts","packages/php-wasm/universal/src/lib/error-event-polyfill.ts","packages/php-wasm/universal/src/lib/is-exit-code-zero.ts","packages/php-wasm/universal/src/lib/wasm-error-reporting.ts","packages/php-wasm/universal/src/lib/php.ts","node_modules/ini/lib/ini.js","packages/php-wasm/universal/src/lib/ini.ts","packages/php-wasm/universal/src/lib/http-cookie-store.ts","packages/php-wasm/stream-compression/src/utils/iterable-stream-polyfill.ts","packages/php-wasm/universal/src/lib/php-process-manager.ts","packages/php-wasm/universal/src/lib/supported-php-versions.ts","packages/php-wasm/universal/src/lib/urls.ts","packages/php-wasm/universal/src/lib/encode-as-multipart.ts","packages/php-wasm/universal/src/lib/php-request-handler.ts","packages/php-wasm/universal/src/lib/rotate-php-runtime.ts","packages/php-wasm/universal/src/lib/write-files.ts","packages/php-wasm/universal/src/lib/proxy-file-system.ts","node_modules/comlink/dist/esm/comlink.mjs","packages/php-wasm/web/src/lib/api.ts","node_modules/wasm-feature-detect/dist/esm/index.js","packages/php-wasm/web/src/lib/get-php-loader-module.ts","packages/php-wasm/web/src/lib/tls/utils.ts","packages/php-wasm/web/src/lib/tls/extensions/types.ts","packages/php-wasm/web/src/lib/tls/extensions/0_server_name.ts","packages/php-wasm/web/src/lib/tls/cipher-suites.ts","packages/php-wasm/web/src/lib/tls/extensions/10_supported_groups.ts","packages/php-wasm/web/src/lib/tls/extensions/11_ec_point_formats.ts","packages/php-wasm/web/src/lib/tls/extensions/13_signature_algorithms.ts","packages/php-wasm/web/src/lib/tls/extensions/parse-extensions.ts","packages/php-wasm/web/src/lib/tls/1_2/prf.ts","packages/php-wasm/web/src/lib/tls/1_2/types.ts","packages/php-wasm/web/src/lib/tls/1_2/connection.ts","packages/php-wasm/web/src/lib/tls/certificates.ts","packages/php-wasm/scopes/src/index.ts","packages/php-wasm/web-service-worker/src/utils.ts","packages/php-wasm/web/src/lib/fetch-with-cors-proxy.ts","packages/php-wasm/web/src/lib/tcp-over-fetch-websocket.ts","packages/php-wasm/web/src/lib/load-runtime.ts","packages/php-wasm/fs-journal/src/lib/fs-journal.ts","packages/php-wasm/web/src/lib/directory-handle-mount.ts","packages/playground/remote/src/lib/config.ts","packages/playground/wordpress-builds/src/wordpress/wp-nightly.zip?url","packages/playground/wordpress-builds/src/wordpress/wp-beta.zip?url","packages/playground/wordpress-builds/src/wordpress/wp-6.7.zip?url","packages/playground/wordpress-builds/src/wordpress/wp-6.6.zip?url","packages/playground/wordpress-builds/src/wordpress/wp-6.5.zip?url","packages/playground/wordpress-builds/src/wordpress/wp-6.4.zip?url","packages/playground/wordpress-builds/src/wordpress/wp-6.3.zip?url","packages/playground/wordpress-builds/src/wordpress/get-wordpress-module-details.ts","packages/playground/wordpress-builds/src/sqlite-database-integration/sqlite-database-integration.zip?url","packages/playground/wordpress-builds/src/sqlite-database-integration/get-sqlite-database-plugin-details.ts","packages/playground/wordpress-builds/src/index.ts","packages/playground/storage/src/lib/browser-fs.ts","isomorphic-git/src/errors/BaseError.js","node_modules/crc-32/crc32.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/buffer/index.js","isomorphic-git/src/errors/ObjectTypeError.js","packages/playground/storage/src/lib/git-sparse-checkout.ts","packages/playground/common/src/create-memoized-fetch.ts","packages/playground/common/src/index.ts","packages/playground/remote/src/lib/offline-mode-cache.ts","packages/playground/wordpress/src/boot.ts","packages/playground/wordpress/src/version-detect.ts","packages/playground/wordpress/src/rewrite-rules.ts","packages/playground/wordpress/src/index.ts","packages/playground/remote/src/lib/worker-utils.ts","packages/php-wasm/progress/src/lib/emscripten-download-monitor.ts","packages/playground/remote/src/lib/playground-mu-plugin/playground-includes/wp_http_fetch.php?raw","packages/playground/remote/src/lib/playground-mu-plugin/playground-includes/wp_http_dummy.php?raw","packages/playground/remote/src/lib/playground-mu-plugin/0-playground.php?raw","packages/playground/remote/src/lib/worker-thread.ts"],"sourcesContent":["export const currentJsRuntime = (function () {\n\tif (typeof process !== 'undefined' && process.release?.name === 'node') {\n\t\treturn 'NODE';\n\t} else if (typeof window !== 'undefined') {\n\t\treturn 'WEB';\n\t} else if (\n\t\t// @ts-ignore\n\t\ttypeof WorkerGlobalScope !== 'undefined' &&\n\t\t// @ts-ignore\n\t\tself instanceof (WorkerGlobalScope as any)\n\t) {\n\t\treturn 'WORKER';\n\t} else {\n\t\treturn 'NODE';\n\t}\n})();\n","import { currentJsRuntime } from './current-js-runtime';\n\n// Without this check, the polyfills below would also be applied\n// in web browsers. Unfortunately, Safari doesn't sypport BYOB streams\n// and doesn't support the polyfill provided here. Let's only apply\n// those polyfills in Node.js environments.\nif (currentJsRuntime === 'NODE') {\n\t/**\n\t * WordPress Playground heavily realies on the File class. This module\n\t * polyfill the File class for the different environments where\n\t * WordPress Playground may run.\n\t */\n\tif (typeof File === 'undefined') {\n\t\t/**\n\t\t * Polyfill the File class that isn't shipped in Node.js version 18.\n\t\t *\n\t\t * Blob conveniently provides a lot of the same methods as File, we\n\t\t * just need to implement a few File-specific properties.\n\t\t */\n\t\tclass File extends Blob {\n\t\t\toverride readonly name;\n\t\t\treadonly lastModified: number;\n\t\t\treadonly lastModifiedDate: Date;\n\t\t\twebkitRelativePath: any;\n\t\t\tconstructor(\n\t\t\t\tsources: BlobPart[],\n\t\t\t\tfileName: string,\n\t\t\t\toptions?: FilePropertyBag\n\t\t\t) {\n\t\t\t\tsuper(sources);\n\t\t\t\t/*\n\t\t\t\t * Compute a valid last modified date as that's what the\n\t\t\t\t * browsers do:\n\t\t\t\t *\n\t\t\t\t * ```\n\t\t\t\t * > new File([], '').lastModifiedDate\n\t\t\t\t * Sat Dec 16 2023 10:07:53 GMT+0100 (czas środkowoeuropejski standardowy)\n\t\t\t\t *\n\t\t\t\t * > new File([], '', { lastModified: NaN }).lastModifiedDate\n\t\t\t\t * Thu Jan 01 1970 01:00:00 GMT+0100 (czas środkowoeuropejski standardowy)\n\t\t\t\t *\n\t\t\t\t * > new File([], '', { lastModified: 'string' }).lastModifiedDate\n\t\t\t\t * Thu Jan 01 1970 01:00:00 GMT+0100 (czas środkowoeuropejski standardowy)\n\t\t\t\t *\n\t\t\t\t * > new File([], '', { lastModified: {} }).lastModifiedDate\n\t\t\t\t * Thu Jan 01 1970 01:00:00 GMT+0100 (czas środkowoeuropejski standardowy)\n\t\t\t\t * ```\n\t\t\t\t */\n\t\t\t\tlet date;\n\t\t\t\tif (options?.lastModified) {\n\t\t\t\t\tdate = new Date();\n\t\t\t\t}\n\t\t\t\tif (!date || isNaN(date.getFullYear())) {\n\t\t\t\t\tdate = new Date();\n\t\t\t\t}\n\t\t\t\tthis.lastModifiedDate = date;\n\t\t\t\tthis.lastModified = date.getMilliseconds();\n\t\t\t\tthis.name = fileName || '';\n\t\t\t}\n\t\t}\n\t\tglobal.File = File;\n\t}\n\n\t// eslint-disable-next-line no-inner-declarations\n\tfunction asPromise<T>(obj: FileReader) {\n\t\treturn new Promise<T>(function (resolve, reject) {\n\t\t\tobj.onload = obj.onerror = function (event: Event) {\n\t\t\t\tobj.onload = obj.onerror = null;\n\n\t\t\t\tif (event.type === 'load') {\n\t\t\t\t\tresolve(obj.result as T);\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error('Failed to read the blob/file'));\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * File is a subclass of Blob. Let's polyfill the following Blob\n\t * methods that are missing in JSDOM:\n\t *\n\t * – Blob.text()\n\t * – Blob.stream()\n\t * – Blob.arrayBuffer()\n\t *\n\t * See the related JSDom issue:\n\t *\n\t * – [Implement Blob.stream, Blob.text and Blob.arrayBuffer](https://github.com/jsdom/jsdom/issues/2555).\n\t *\n\t * @source `blob-polyfill` npm package.\n\t * * By Eli Grey, https://eligrey.com\n\t * * By Jimmy Wärting, https://github.com/jimmywarting\n\t */\n\tif (typeof Blob.prototype.arrayBuffer === 'undefined') {\n\t\tBlob.prototype.arrayBuffer = function arrayBuffer() {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsArrayBuffer(this);\n\t\t\treturn asPromise<Uint8Array>(reader);\n\t\t};\n\t}\n\n\tif (typeof Blob.prototype.text === 'undefined') {\n\t\tBlob.prototype.text = function text() {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsText(this);\n\t\t\treturn asPromise<string>(reader);\n\t\t};\n\t}\n\n\t/**\n\t * Detects if BYOB (Bring Your Own Buffer) streams are supported\n\t * in the current environment.\n\t *\n\t * BYOB is a new feature in the Streams API that allows reading\n\t * an arbitrary number of bytes from a stream. It's not supported\n\t * in older versions of Node.js.\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader\n\t */\n\t// eslint-disable-next-line no-inner-declarations\n\tfunction isByobSupported() {\n\t\tconst inputBytes = new Uint8Array([1, 2, 3, 4]);\n\t\tconst file = new File([inputBytes], 'test');\n\t\tconst stream = file.stream();\n\t\ttry {\n\t\t\t// This throws on older versions of node:\n\t\t\tstream.getReader({ mode: 'byob' });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Polyfill the stream() method if it either doesn't exist,\n\t * or is an older version shipped with e.g. Node.js 18 where\n\t * BYOB streams seem to be unsupported.\n\t */\n\tif (typeof Blob.prototype.stream === 'undefined' || !isByobSupported()) {\n\t\tBlob.prototype.stream = function () {\n\t\t\tlet position = 0;\n\t\t\t// eslint-disable-next-line\n\t\t\tconst blob = this;\n\t\t\treturn new ReadableStream({\n\t\t\t\ttype: 'bytes',\n\t\t\t\t// 0.5 MB seems like a reasonable chunk size, let's adjust\n\t\t\t\t// this if needed.\n\t\t\t\tautoAllocateChunkSize: 512 * 1024,\n\n\t\t\t\tasync pull(controller) {\n\t\t\t\t\tconst view = controller.byobRequest!.view;\n\n\t\t\t\t\t// Read the next chunk of data:\n\t\t\t\t\tconst chunk = blob.slice(\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\tposition + view!.byteLength\n\t\t\t\t\t);\n\t\t\t\t\tconst buffer = await chunk.arrayBuffer();\n\t\t\t\t\tconst uint8array = new Uint8Array(buffer);\n\n\t\t\t\t\t// Emit that chunk:\n\t\t\t\t\tnew Uint8Array(view!.buffer).set(uint8array);\n\t\t\t\t\tconst bytesRead = uint8array.byteLength;\n\t\t\t\t\tcontroller.byobRequest!.respond(bytesRead);\n\n\t\t\t\t\t// Bump the position and close this stream once\n\t\t\t\t\t// we've read the entire blob.\n\t\t\t\t\tposition += bytesRead;\n\t\t\t\t\tif (position >= blob.size) {\n\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n}\n\nexport default {};\n","import { currentJsRuntime } from './current-js-runtime';\n\nif (currentJsRuntime === 'NODE' && typeof CustomEvent === 'undefined') {\n\tclass CustomEvent<T = any> extends Event {\n\t\treadonly detail: T;\n\t\tconstructor(\n\t\t\tname: string,\n\t\t\toptions: {\n\t\t\t\tdetail?: T;\n\t\t\t\tbubbles?: boolean;\n\t\t\t\tcancellable?: boolean;\n\t\t\t\tcomposed?: boolean;\n\t\t\t} = {}\n\t\t) {\n\t\t\tsuper(name, options);\n\t\t\t/*\n\t\t\t * The bang symbol (`!`) here is a lie to make TypeScript happy.\n\t\t\t *\n\t\t\t * Without the bang TS has the following complaint:\n\t\t\t *\n\t\t\t * > T | undefined is not assignable to type T\n\t\t\t *\n\t\t\t * In reality, it's absolutely fine for T (or `options.detail`)\n\t\t\t * to be undefined. However, the CustomEvent interface shipped\n\t\t\t * with TypeScript doesn't think so and marks `this.details` as\n\t\t\t * a required property.\n\t\t\t *\n\t\t\t * This little and harmless trick silences that error.\n\t\t\t */\n\t\t\tthis.detail = options.detail!;\n\t\t}\n\t\tinitCustomEvent(): void {}\n\t}\n\tglobalThis.CustomEvent = CustomEvent;\n}\n","import { currentJsRuntime } from './current-js-runtime';\n\nif (currentJsRuntime === 'NODE') {\n\t/**\n\t * Polyfill for URL.canParse if it's missing.\n\t *\n\t * URL.canParse is available since Node 19.9.0,\n\t * but Playground currently uses Node 18.18.0.\n\t *\n\t * This implementation is based on the one from `core-js`\n\t * by Denis Pushkarev, https://github.com/zloirock\n\t * https://github.com/zloirock/core-js/blob/master/packages/core-js/modules/web.url.can-parse.js\n\t */\n\tif (typeof URL.canParse !== 'function') {\n\t\tglobalThis.URL.canParse = function (url: string) {\n\t\t\ttry {\n\t\t\t\treturn !!new URL(url);\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}\n}\n","/**\n * Emscripten's filesystem-related Exception.\n *\n * @see https://emscripten.org/docs/api_reference/Filesystem-API.html\n * @see https://github.com/emscripten-core/emscripten/blob/main/system/lib/libc/musl/arch/emscripten/bits/errno.h\n * @see https://github.com/emscripten-core/emscripten/blob/38eedc630f17094b3202fd48ac0c2c585dbea31e/system/include/wasi/api.h#L336\n */\n\nexport interface ErrnoError extends Error {\n\tnode?: any;\n\terrno: number;\n\tmessage: string;\n}\n/**\n * @see https://github.com/emscripten-core/emscripten/blob/38eedc630f17094b3202fd48ac0c2c585dbea31e/system/include/wasi/api.h#L336\n */\nexport const FileErrorCodes = {\n\t0: 'No error occurred. System call completed successfully.',\n\t1: 'Argument list too long.',\n\t2: 'Permission denied.',\n\t3: 'Address in use.',\n\t4: 'Address not available.',\n\t5: 'Address family not supported.',\n\t6: 'Resource unavailable, or operation would block.',\n\t7: 'Connection already in progress.',\n\t8: 'Bad file descriptor.',\n\t9: 'Bad message.',\n\t10: 'Device or resource busy.',\n\t11: 'Operation canceled.',\n\t12: 'No child processes.',\n\t13: 'Connection aborted.',\n\t14: 'Connection refused.',\n\t15: 'Connection reset.',\n\t16: 'Resource deadlock would occur.',\n\t17: 'Destination address required.',\n\t18: 'Mathematics argument out of domain of function.',\n\t19: 'Reserved.',\n\t20: 'File exists.',\n\t21: 'Bad address.',\n\t22: 'File too large.',\n\t23: 'Host is unreachable.',\n\t24: 'Identifier removed.',\n\t25: 'Illegal byte sequence.',\n\t26: 'Operation in progress.',\n\t27: 'Interrupted function.',\n\t28: 'Invalid argument.',\n\t29: 'I/O error.',\n\t30: 'Socket is connected.',\n\t31: 'There is a directory under that path.',\n\t32: 'Too many levels of symbolic links.',\n\t33: 'File descriptor value too large.',\n\t34: 'Too many links.',\n\t35: 'Message too large.',\n\t36: 'Reserved.',\n\t37: 'Filename too long.',\n\t38: 'Network is down.',\n\t39: 'Connection aborted by network.',\n\t40: 'Network unreachable.',\n\t41: 'Too many files open in system.',\n\t42: 'No buffer space available.',\n\t43: 'No such device.',\n\t44: 'There is no such file or directory OR the parent directory does not exist.',\n\t45: 'Executable file format error.',\n\t46: 'No locks available.',\n\t47: 'Reserved.',\n\t48: 'Not enough space.',\n\t49: 'No message of the desired type.',\n\t50: 'Protocol not available.',\n\t51: 'No space left on device.',\n\t52: 'Function not supported.',\n\t53: 'The socket is not connected.',\n\t54: 'Not a directory or a symbolic link to a directory.',\n\t55: 'Directory not empty.',\n\t56: 'State not recoverable.',\n\t57: 'Not a socket.',\n\t58: 'Not supported, or operation not supported on socket.',\n\t59: 'Inappropriate I/O control operation.',\n\t60: 'No such device or address.',\n\t61: 'Value too large to be stored in data type.',\n\t62: 'Previous owner died.',\n\t63: 'Operation not permitted.',\n\t64: 'Broken pipe.',\n\t65: 'Protocol error.',\n\t66: 'Protocol not supported.',\n\t67: 'Protocol wrong type for socket.',\n\t68: 'Result too large.',\n\t69: 'Read-only file system.',\n\t70: 'Invalid seek.',\n\t71: 'No such process.',\n\t72: 'Reserved.',\n\t73: 'Connection timed out.',\n\t74: 'Text file busy.',\n\t75: 'Cross-device link.',\n\t76: 'Extension: Capabilities insufficient.',\n} as any;\n\nexport function getEmscriptenFsError(e: any) {\n\tconst errno = typeof e === 'object' ? ((e as any)?.errno as any) : null;\n\tif (errno in FileErrorCodes) {\n\t\treturn FileErrorCodes[errno];\n\t}\n}\n\nexport function rethrowFileSystemError(messagePrefix = '') {\n\treturn function catchFileSystemError(\n\t\ttarget: any,\n\t\tmethodName: string,\n\t\tdescriptor: PropertyDescriptor\n\t) {\n\t\tconst method = descriptor.value;\n\t\tdescriptor.value = function (...args: any[]) {\n\t\t\ttry {\n\t\t\t\treturn method.apply(this, args);\n\t\t\t} catch (e) {\n\t\t\t\tconst errno =\n\t\t\t\t\ttypeof e === 'object' ? ((e as any)?.errno as any) : null;\n\t\t\t\tif (errno in FileErrorCodes) {\n\t\t\t\t\tconst errmsg = FileErrorCodes[errno];\n\t\t\t\t\tconst path = typeof args[1] === 'string' ? args[1] : null;\n\t\t\t\t\tconst formattedPrefix =\n\t\t\t\t\t\tpath !== null\n\t\t\t\t\t\t\t? messagePrefix.replaceAll('{path}', path)\n\t\t\t\t\t\t\t: messagePrefix;\n\t\t\t\t\tthrow new Error(`${formattedPrefix}: ${errmsg}`, {\n\t\t\t\t\t\tcause: e,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t};\n\t};\n}\n","import { LogHandler } from '../log-handlers';\nimport { Log, logger } from '../logger';\n\nexport const logEventType = 'playground-log';\n\nexport const logEvent: LogHandler = (log: Log, ...args: any[]): void => {\n\tlogger.dispatchEvent(\n\t\tnew CustomEvent(logEventType, {\n\t\t\tdetail: {\n\t\t\t\tlog,\n\t\t\t\targs,\n\t\t\t},\n\t\t})\n\t);\n};\n","import { LogHandler } from '../log-handlers';\nimport { Log, prepareLogMessage } from '../logger';\n\n/**\n * Log message to the console.\n */\nexport const logToConsole: LogHandler = (log: Log, ...args: any[]): void => {\n\tif (typeof log.message === 'string') {\n\t\t// Some errors have a read-only message property where direct\n\t\t// assignment will throw an error. The assignment is merely for\n\t\t// formatting, so let's assign with Reflect.set and avoid the error.\n\t\tReflect.set(log, 'message', prepareLogMessage(log.message));\n\t} else if (log.message.message && typeof log.message.message === 'string') {\n\t\t// Some errors have a read-only message property where direct\n\t\t// assignment will throw an error. The assignment is merely for\n\t\t// formatting, so let's assign with Reflect.set and avoid the error.\n\t\tReflect.set(\n\t\t\tlog.message,\n\t\t\t'message',\n\t\t\tprepareLogMessage(log.message.message)\n\t\t);\n\t}\n\t/* eslint-disable no-console */\n\tswitch (log.severity) {\n\t\tcase 'Debug':\n\t\t\tconsole.debug(log.message, ...args);\n\t\t\tbreak;\n\t\tcase 'Info':\n\t\t\tconsole.info(log.message, ...args);\n\t\t\tbreak;\n\t\tcase 'Warn':\n\t\t\tconsole.warn(log.message, ...args);\n\t\t\tbreak;\n\t\tcase 'Error':\n\t\t\tconsole.error(log.message, ...args);\n\t\t\tbreak;\n\t\tcase 'Fatal':\n\t\t\tconsole.error(log.message, ...args);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log(log.message, ...args);\n\t}\n\t/* eslint-enable no-console */\n};\n","import { LogHandler } from '../log-handlers';\nimport { formatLogEntry, Log } from '../logger';\n\nconst prepareLogMessage = (logMessage: object): string => {\n\tif (logMessage instanceof Error) {\n\t\treturn [logMessage.message, logMessage.stack].join('\\n');\n\t}\n\treturn JSON.stringify(logMessage, null, 2);\n};\n\nexport const logs: string[] = [];\n\nconst addToLogArray = (message: string): void => {\n\tlogs.push(message);\n};\n\n/**\n * Log to memory\n */\nexport const logToMemory: LogHandler = (log: Log): void => {\n\tif (log.raw === true) {\n\t\taddToLogArray(log.message);\n\t} else {\n\t\tconst message = formatLogEntry(\n\t\t\ttypeof log.message === 'object'\n\t\t\t\t? prepareLogMessage(log.message)\n\t\t\t\t: log.message,\n\t\t\tlog.severity ?? 'Info',\n\t\t\tlog.prefix ?? 'JavaScript'\n\t\t);\n\t\taddToLogArray(message);\n\t}\n};\n\nexport const clearMemoryLogs = (): void => {\n\tlogs.length = 0;\n};\n","import { logEvent } from './handlers/log-event';\nimport { logToMemory, logToConsole, logs } from './log-handlers';\n\nexport { logEventType } from './handlers/log-event';\n\nexport { errorLogPath } from './collectors/collect-php-logs';\n\nexport type Log = {\n\tmessage: any;\n\tseverity?: LogSeverity;\n\tprefix?: LogPrefix;\n\traw?: boolean;\n};\n\n/**\n * Log severity levels.\n */\nexport type LogSeverity = 'Debug' | 'Info' | 'Warn' | 'Error' | 'Fatal';\n\n/**\n * Log prefix.\n */\nexport type LogPrefix = 'WASM Crash' | 'PHP' | 'JavaScript';\n\n/**\n * A logger for Playground.\n */\nexport class Logger extends EventTarget {\n\tpublic readonly fatalErrorEvent = 'playground-fatal-error';\n\n\t// constructor\n\tconstructor(\n\t\t// Log handlers\n\t\tprivate readonly handlers: Function[] = []\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Get all logs.\n\t * @returns string[]\n\t */\n\tpublic getLogs(): string[] {\n\t\tif (!this.handlers.includes(logToMemory)) {\n\t\t\tthis\n\t\t\t\t.error(`Logs aren't stored because the logToMemory handler isn't registered.\n\t\t\t\tIf you're using a custom logger instance, make sure to register logToMemory handler.\n\t\t\t`);\n\t\t\treturn [];\n\t\t}\n\t\treturn [...logs];\n\t}\n\n\t/**\n\t * Log message with severity.\n\t *\n\t * @param message any\n\t * @param severity LogSeverity\n\t * @param raw boolean\n\t * @param args any\n\t */\n\tpublic logMessage(log: Log, ...args: any[]): void {\n\t\tfor (const handler of this.handlers) {\n\t\t\thandler(log, ...args);\n\t\t}\n\t}\n\n\t/**\n\t * Log message\n\t *\n\t * @param message any\n\t * @param args any\n\t */\n\tpublic log(message: any, ...args: any[]): void {\n\t\tthis.logMessage(\n\t\t\t{\n\t\t\t\tmessage,\n\t\t\t\tseverity: undefined,\n\t\t\t\tprefix: 'JavaScript',\n\t\t\t\traw: false,\n\t\t\t},\n\t\t\t...args\n\t\t);\n\t}\n\n\t/**\n\t * Log debug message\n\t *\n\t * @param message any\n\t * @param args any\n\t */\n\tpublic debug(message: any, ...args: any[]): void {\n\t\tthis.logMessage(\n\t\t\t{\n\t\t\t\tmessage,\n\t\t\t\tseverity: 'Debug',\n\t\t\t\tprefix: 'JavaScript',\n\t\t\t\traw: false,\n\t\t\t},\n\t\t\t...args\n\t\t);\n\t}\n\n\t/**\n\t * Log info message\n\t *\n\t * @param message any\n\t * @param args any\n\t */\n\tpublic info(message: any, ...args: any[]): void {\n\t\tthis.logMessage(\n\t\t\t{\n\t\t\t\tmessage,\n\t\t\t\tseverity: 'Info',\n\t\t\t\tprefix: 'JavaScript',\n\t\t\t\traw: false,\n\t\t\t},\n\t\t\t...args\n\t\t);\n\t}\n\n\t/**\n\t * Log warning message\n\t *\n\t * @param message any\n\t * @param args any\n\t */\n\tpublic warn(message: any, ...args: any[]): void {\n\t\tthis.logMessage(\n\t\t\t{\n\t\t\t\tmessage,\n\t\t\t\tseverity: 'Warn',\n\t\t\t\tprefix: 'JavaScript',\n\t\t\t\traw: false,\n\t\t\t},\n\t\t\t...args\n\t\t);\n\t}\n\n\t/**\n\t * Log error message\n\t *\n\t * @param message any\n\t * @param args any\n\t */\n\tpublic error(message: any, ...args: any[]): void {\n\t\tthis.logMessage(\n\t\t\t{\n\t\t\t\tmessage,\n\t\t\t\tseverity: 'Error',\n\t\t\t\tprefix: 'JavaScript',\n\t\t\t\traw: false,\n\t\t\t},\n\t\t\t...args\n\t\t);\n\t}\n}\n\nconst getDefaultHandlers = () => {\n\ttry {\n\t\tif (process.env['NODE_ENV'] === 'test') {\n\t\t\treturn [logToMemory, logEvent];\n\t\t}\n\t} catch (e) {\n\t\t// Process.env is not available in the browser\n\t}\n\treturn [logToMemory, logToConsole, logEvent];\n};\n\n/**\n * The logger instance.\n */\nexport const logger: Logger = new Logger(getDefaultHandlers());\n\nexport const prepareLogMessage = (message: string) => {\n\treturn message.replace(/\\t/g, '');\n};\n\nexport const formatLogEntry = (\n\tmessage: string,\n\tseverity: LogSeverity,\n\tprefix: string\n): string => {\n\tconst date = new Date();\n\tconst formattedDate = new Intl.DateTimeFormat('en-GB', {\n\t\tyear: 'numeric',\n\t\tmonth: 'short',\n\t\tday: '2-digit',\n\t\ttimeZone: 'UTC',\n\t})\n\t\t.format(date)\n\t\t.replace(/ /g, '-');\n\n\tconst formattedTime = new Intl.DateTimeFormat('en-GB', {\n\t\thour: '2-digit',\n\t\tminute: '2-digit',\n\t\tsecond: '2-digit',\n\t\thour12: false,\n\t\ttimeZone: 'UTC',\n\t\ttimeZoneName: 'short',\n\t}).format(date);\n\tconst now = formattedDate + ' ' + formattedTime;\n\tmessage = prepareLogMessage(message);\n\treturn `[${now}] ${prefix} ${severity}: ${message}`;\n};\n\n/**\n * Add a listener for the Playground crashes.\n * These crashes include Playground errors like Asyncify errors.\n * The callback function will receive an Event object with logs in the detail\n * property.\n *\n * @param loggerInstance The logger instance\n * @param callback The callback function\n */\nexport const addCrashListener = (\n\tloggerInstance: Logger,\n\tcallback: EventListenerOrEventListenerObject\n) => {\n\tloggerInstance.addEventListener(loggerInstance.fatalErrorEvent, callback);\n};\n","export const SleepFinished = Symbol('SleepFinished');\n\nexport function sleep(ms: number): Promise<typeof SleepFinished> {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => resolve(SleepFinished), ms);\n\t});\n}\n","import { SleepFinished, sleep } from './sleep';\n\nexport interface SemaphoreOptions {\n\t/**\n\t * The maximum number of concurrent locks.\n\t */\n\tconcurrency: number;\n\t/**\n\t * The maximum time to wait for a lock to become available.\n\t */\n\ttimeout?: number;\n}\n\nexport class AcquireTimeoutError extends Error {\n\tconstructor() {\n\t\tsuper('Acquiring lock timed out');\n\t}\n}\n\nexport default class Semaphore {\n\tprivate _running = 0;\n\tprivate concurrency: number;\n\tprivate timeout?: number;\n\tprivate queue: (() => void)[];\n\n\tconstructor({ concurrency, timeout }: SemaphoreOptions) {\n\t\tthis.concurrency = concurrency;\n\t\tthis.timeout = timeout;\n\t\tthis.queue = [];\n\t}\n\n\tget remaining(): number {\n\t\treturn this.concurrency - this.running;\n\t}\n\n\tget running(): number {\n\t\treturn this._running;\n\t}\n\n\tasync acquire(): Promise<() => void> {\n\t\twhile (true) {\n\t\t\tif (this._running >= this.concurrency) {\n\t\t\t\t// Concurrency exhausted – wait until a lock is released:\n\t\t\t\tconst acquired = new Promise<void>((resolve) => {\n\t\t\t\t\tthis.queue.push(resolve);\n\t\t\t\t});\n\t\t\t\tif (this.timeout !== undefined) {\n\t\t\t\t\tawait Promise.race([acquired, sleep(this.timeout)]).then(\n\t\t\t\t\t\t(value) => {\n\t\t\t\t\t\t\tif (value === SleepFinished) {\n\t\t\t\t\t\t\t\tthrow new AcquireTimeoutError();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tawait acquired;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Acquire the lock:\n\t\t\t\tthis._running++;\n\t\t\t\tlet released = false;\n\t\t\t\treturn () => {\n\t\t\t\t\tif (released) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\treleased = true;\n\t\t\t\t\tthis._running--;\n\t\t\t\t\t// Release the lock:\n\t\t\t\t\tif (this.queue.length > 0) {\n\t\t\t\t\t\tthis.queue.shift()!();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tasync run<T>(fn: () => T | Promise<T>): Promise<T> {\n\t\tconst release = await this.acquire();\n\t\ttry {\n\t\t\treturn await fn();\n\t\t} finally {\n\t\t\trelease();\n\t\t}\n\t}\n}\n","/**\n * The functions in this module are mostly copied from the generated\n * Emscripten PHP module. This enables features like filesystem journaling,\n * which use some low-level Emscripten APIs and need access to the\n * same path helpers.\n */\n\n/**\n * Joins paths together.\n *\n * For example:\n *\n * > joinPaths('wordpress', 'wp-content')\n * 'wordpress/wp-content'\n *\n * Use this for all PHP paths and **do not** use path.join().\n * This is important because Emscripten paths are **always**\n * POSIX-style paths. Imagine joining paths on Windows:\n *\n * > path.join('wordpress', 'wp-content')\n * '\\\\wordpress\\\\wp-content'  // invalid in PHP.wasm\n *\n * See the path.join issue for more details:\n *\n * https://github.com/WordPress/playground-tools/issues/11#issuecomment-1579074763\n *\n * @param paths Paths segments to join\n * @returns A joined path\n */\nexport function joinPaths(...paths: string[]) {\n\tfunction hasTrailingSlash(p: string) {\n\t\treturn p.substring(p.length - 1) === '/';\n\t}\n\n\tlet path = paths.join('/');\n\tconst isAbsolute = path[0] === '/';\n\tconst trailingSlash = hasTrailingSlash(path);\n\tpath = normalizePath(path);\n\tif (!path && !isAbsolute) {\n\t\tpath = '.';\n\t}\n\tif (path && trailingSlash && !hasTrailingSlash(path)) {\n\t\tpath += '/';\n\t}\n\treturn path;\n}\n\n/**\n * Returns the directory name of a path.\n *\n * @param path\n * @returns\n */\nexport function dirname(path: string) {\n\tif (path === '/') {\n\t\treturn '/';\n\t}\n\n\tpath = normalizePath(path);\n\n\tconst lastSlash = path.lastIndexOf('/');\n\tif (lastSlash === -1) {\n\t\treturn '';\n\t} else if (lastSlash === 0) {\n\t\treturn '/';\n\t}\n\treturn path.substr(0, lastSlash);\n}\n\n/**\n * Returns the last portion of a path.\n *\n * @param path - The path to extract the basename from.\n * @returns The basename of the path.\n */\nexport function basename(path: string) {\n\tif (path === '/') {\n\t\treturn '/';\n\t}\n\n\tpath = normalizePath(path);\n\n\tconst lastSlash = path.lastIndexOf('/');\n\tif (lastSlash === -1) {\n\t\treturn path;\n\t}\n\treturn path.substr(lastSlash + 1);\n}\n\n/**\n * Normalizes a path.\n *\n * For example:\n *\n * > normalizePath('wordpress/wp-content/../')\n * 'wordpress'\n *\n * @param path\n * @returns\n */\nexport function normalizePath(path: string) {\n\tconst isAbsolute = path[0] === '/';\n\tpath = normalizePathsArray(\n\t\tpath.split('/').filter((p: any) => !!p),\n\t\t!isAbsolute\n\t).join('/');\n\treturn (isAbsolute ? '/' : '') + path.replace(/\\/$/, '');\n}\n\n/**\n * Normalizes paths.\n *\n * For example:\n *\n * > normalizePathsArray(['wordpress', 'wp-content', '..', '', '.',\n * 'wp-includes']) ['wordpress', 'wp-includes']\n *\n * @param parts parts of the path to normalize\n * @param allowAboveRoot allow paths above the root\n * @returns normalized paths\n */\nexport function normalizePathsArray(parts: string[], allowAboveRoot: boolean) {\n\tlet up = 0;\n\tfor (let i = parts.length - 1; i >= 0; i--) {\n\t\tconst last = parts[i];\n\t\tif (last === '.') {\n\t\t\tparts.splice(i, 1);\n\t\t} else if (last === '..') {\n\t\t\tparts.splice(i, 1);\n\t\t\tup++;\n\t\t} else if (up) {\n\t\t\tparts.splice(i, 1);\n\t\t\tup--;\n\t\t}\n\t}\n\tif (allowAboveRoot) {\n\t\tfor (; up; up--) {\n\t\t\tparts.unshift('..');\n\t\t}\n\t}\n\treturn parts;\n}\n\n/**\n * Checks if the given parent path is an ancestor of the given child path.\n *\n * @param parent The parent path to check.\n * @param child The child path to verify against the parent.\n * @returns Whether the `parent` path is an ancestor of the `child` path.\n */\nexport function isParentOf(parent: string, child: string) {\n\tif (parent === '/') {\n\t\treturn true;\n\t}\n\tparent = normalizePath(parent);\n\tchild = normalizePath(child);\n\treturn child.startsWith(parent + '/') || child === parent;\n}\n","/**\n * Naive shell command parser.\n * Ensures that commands like `wp option set blogname \"My blog name\"` are split\n * into `['wp', 'option', 'set', 'blogname', 'My blog name']` instead of\n * `['wp', 'option', 'set', 'blogname', 'My', 'blog', 'name']`.\n *\n * @param command\n * @returns\n */\nexport function splitShellCommand(command: string) {\n\tconst MODE_UNQUOTED = 0;\n\tconst MODE_IN_QUOTE = 1;\n\n\tlet mode = MODE_UNQUOTED;\n\tlet quote = '';\n\n\tconst parts: string[] = [];\n\tlet currentPart = '';\n\tfor (let i = 0; i < command.length; i++) {\n\t\tconst char = command[i];\n\t\tif (char === '\\\\') {\n\t\t\t// Escaped quotes are treated as normal characters\n\t\t\t// This is a very naive approach to escaping, but it's good enough for\n\t\t\t// now. @TODO: Iterate on this later, perhaps using bun shell. @see https://github.com/WordPress/wordpress-playground/issues/1062\n\t\t\tif (command[i + 1] === '\"' || command[i + 1] === \"'\") {\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcurrentPart += command[i];\n\t\t} else if (mode === MODE_UNQUOTED) {\n\t\t\tif (char === '\"' || char === \"'\") {\n\t\t\t\tmode = MODE_IN_QUOTE;\n\t\t\t\tquote = char;\n\t\t\t} else if (char.match(/\\s/)) {\n\t\t\t\tif (currentPart.trim().length) {\n\t\t\t\t\tparts.push(currentPart.trim());\n\t\t\t\t}\n\t\t\t\tcurrentPart = char;\n\t\t\t} else if (parts.length && !currentPart) {\n\t\t\t\t// We just closed a quote to continue the same\n\t\t\t\t// argument with different escaping style, e.g.:\n\t\t\t\t// php -r 'require '\\''vendor/autoload.php'\\''\n\t\t\t\tcurrentPart = parts.pop()! + char;\n\t\t\t} else {\n\t\t\t\tcurrentPart += char;\n\t\t\t}\n\t\t} else if (mode === MODE_IN_QUOTE) {\n\t\t\tif (char === quote) {\n\t\t\t\tmode = MODE_UNQUOTED;\n\t\t\t\tquote = '';\n\t\t\t} else {\n\t\t\t\tcurrentPart += char;\n\t\t\t}\n\t\t}\n\t}\n\tif (currentPart) {\n\t\tparts.push(currentPart.trim());\n\t}\n\treturn parts;\n}\n","import { splitShellCommand } from './split-shell-command';\n\ntype Listener = (...args: any[]) => any;\n\nexport interface ProcessOptions {\n\tcwd?: string;\n\tenv?: Record<string, string>;\n}\n\n/**\n * Usage:\n * ```ts\n * php.setSpawnHandler(\n *   createSpawnHandler(function (command, processApi) {\n *     console.log(processApi.flushStdin());\n *     processApi.stdout('/\\n/tmp\\n/home');\n *\t   processApi.exit(0);\n *   })\n * );\n * ```\n * @param program\n * @returns\n */\nexport function createSpawnHandler(\n\tprogram: (\n\t\tcommand: string[],\n\t\tprocessApi: ProcessApi,\n\t\toptions: ProcessOptions\n\t) => void | Promise<void>\n): any {\n\treturn function (\n\t\tcommand: string | string[],\n\t\targsArray: string[] = [],\n\t\toptions: ProcessOptions = {}\n\t) {\n\t\tconst childProcess = new ChildProcess();\n\t\tconst processApi = new ProcessApi(childProcess);\n\t\t// Give PHP a chance to register listeners\n\t\tsetTimeout(async () => {\n\t\t\tlet commandArray = [];\n\t\t\tif (argsArray.length) {\n\t\t\t\tcommandArray = [command as string, ...argsArray];\n\t\t\t} else if (typeof command === 'string') {\n\t\t\t\tcommandArray = splitShellCommand(command);\n\t\t\t} else if (Array.isArray(command)) {\n\t\t\t\tcommandArray = command;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid command ', command);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait program(commandArray, processApi, options);\n\t\t\t} catch (e) {\n\t\t\t\tchildProcess.emit('error', e);\n\t\t\t\tif (\n\t\t\t\t\ttypeof e === 'object' &&\n\t\t\t\t\te !== null &&\n\t\t\t\t\t'message' in e &&\n\t\t\t\t\ttypeof e.message === 'string'\n\t\t\t\t) {\n\t\t\t\t\tprocessApi.stderr(e.message);\n\t\t\t\t}\n\t\t\t\tprocessApi.exit(1);\n\t\t\t}\n\t\t\tchildProcess.emit('spawn', true);\n\t\t});\n\t\treturn childProcess;\n\t};\n}\n\nclass EventEmitter {\n\tlisteners: Record<string, Listener[]> = {};\n\temit(eventName: string, data: any) {\n\t\tif (this.listeners[eventName]) {\n\t\t\tthis.listeners[eventName].forEach(function (listener) {\n\t\t\t\tlistener(data);\n\t\t\t});\n\t\t}\n\t}\n\ton(eventName: string, listener: Listener) {\n\t\tif (!this.listeners[eventName]) {\n\t\t\tthis.listeners[eventName] = [];\n\t\t}\n\t\tthis.listeners[eventName].push(listener);\n\t}\n}\n\nexport class ProcessApi extends EventEmitter {\n\tprivate exited = false;\n\tprivate stdinData: Uint8Array[] | null = [];\n\tconstructor(private childProcess: ChildProcess) {\n\t\tsuper();\n\t\tchildProcess.on('stdin', (data: Uint8Array) => {\n\t\t\tif (this.stdinData) {\n\t\t\t\t// Need to clone the data buffer as it's reused by PHP\n\t\t\t\t// and the next data chunk will overwrite the previous one.\n\t\t\t\tthis.stdinData.push(data.slice());\n\t\t\t} else {\n\t\t\t\tthis.emit('stdin', data);\n\t\t\t}\n\t\t});\n\t}\n\tstdout(data: string | ArrayBuffer) {\n\t\tif (typeof data === 'string') {\n\t\t\tdata = new TextEncoder().encode(data);\n\t\t}\n\t\tthis.childProcess.stdout.emit('data', data);\n\t}\n\tstdoutEnd() {\n\t\tthis.childProcess.stdout.emit('end', {});\n\t}\n\tstderr(data: string | ArrayBuffer) {\n\t\tif (typeof data === 'string') {\n\t\t\tdata = new TextEncoder().encode(data);\n\t\t}\n\t\tthis.childProcess.stderr.emit('data', data);\n\t}\n\tstderrEnd() {\n\t\tthis.childProcess.stderr.emit('end', {});\n\t}\n\texit(code: number) {\n\t\tif (!this.exited) {\n\t\t\tthis.exited = true;\n\t\t\tthis.childProcess.emit('exit', code);\n\t\t}\n\t}\n\tflushStdin() {\n\t\tif (this.stdinData) {\n\t\t\tfor (let i = 0; i < this.stdinData.length; i++) {\n\t\t\t\tthis.emit('stdin', this.stdinData[i]);\n\t\t\t}\n\t\t}\n\t\tthis.stdinData = null;\n\t}\n}\n\nexport type StdIn = {\n\twrite: (data: string) => void;\n};\n\nlet lastPid = 9743;\nexport class ChildProcess extends EventEmitter {\n\tstdout: EventEmitter = new EventEmitter();\n\tstderr: EventEmitter = new EventEmitter();\n\tstdin: StdIn;\n\tconstructor(public pid = lastPid++) {\n\t\tsuper();\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\t\tthis.stdin = {\n\t\t\twrite: (data: string) => {\n\t\t\t\tself.emit('stdin', data);\n\t\t\t},\n\t\t};\n\t}\n}\n","export function randomString(\n\tlength = 36,\n\tspecialChars = '!@#$%^&*()_+=-[]/.,<>?'\n) {\n\tconst chars =\n\t\t'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n\t\tspecialChars;\n\tlet result = '';\n\tfor (let i = length; i > 0; --i)\n\t\tresult += chars[Math.floor(Math.random() * chars.length)];\n\treturn result;\n}\n","export function phpVar(value: unknown): string {\n\treturn `json_decode(base64_decode('${stringToBase64(\n\t\tJSON.stringify(value)\n\t)}'), true)`;\n}\n\nexport function phpVars<T extends Record<string, unknown>>(\n\tvars: T\n): Record<keyof T, string> {\n\tconst result: Record<string, string> = {};\n\tfor (const key in vars) {\n\t\tresult[key] = phpVar(vars[key]);\n\t}\n\treturn result as Record<keyof T, string>;\n}\n\nfunction stringToBase64(str: string) {\n\treturn bytesToBase64(new TextEncoder().encode(str));\n}\n\nfunction bytesToBase64(bytes: Uint8Array) {\n\tconst binString = String.fromCodePoint(...bytes);\n\treturn btoa(binString);\n}\n","import { Emscripten } from './emscripten-types';\nimport {\n\tgetEmscriptenFsError,\n\trethrowFileSystemError,\n} from './rethrow-file-system-error';\nimport { logger } from '@php-wasm/logger';\nimport { dirname, joinPaths } from '@php-wasm/util';\n\nexport interface RmDirOptions {\n\t/**\n\t * If true, recursively removes the directory and all its contents.\n\t * Default: true.\n\t */\n\trecursive?: boolean;\n}\n\nexport interface ListFilesOptions {\n\t/**\n\t * If true, prepend given folder path to all file names.\n\t * Default: false.\n\t */\n\tprependPath: boolean;\n}\n\nexport class FSHelpers {\n\t/**\n\t * Reads a file from the PHP filesystem and returns it as a string.\n\t *\n\t * @throws {@link @php-wasm/universal:ErrnoError} – If the file doesn't exist.\n\t * @param FS\n\t * @param  path - The file path to read.\n\t * @returns The file contents.\n\t */\n\t@rethrowFileSystemError('Could not read \"{path}\"')\n\tstatic readFileAsText(FS: Emscripten.RootFS, path: string) {\n\t\treturn new TextDecoder().decode(FSHelpers.readFileAsBuffer(FS, path));\n\t}\n\n\t/**\n\t * Reads a file from the PHP filesystem and returns it as an array buffer.\n\t *\n\t * @throws {@link @php-wasm/universal:ErrnoError} – If the file doesn't exist.\n\t * @param FS\n\t * @param  path - The file path to read.\n\t * @returns The file contents.\n\t */\n\t@rethrowFileSystemError('Could not read \"{path}\"')\n\tstatic readFileAsBuffer(FS: Emscripten.RootFS, path: string): Uint8Array {\n\t\treturn FS.readFile(path);\n\t}\n\n\t/**\n\t * Overwrites data in a file in the PHP filesystem.\n\t * Creates a new file if one doesn't exist yet.\n\t *\n\t * @param FS\n\t * @param  path - The file path to write to.\n\t * @param  data - The data to write to the file.\n\t */\n\t@rethrowFileSystemError('Could not write to \"{path}\"')\n\tstatic writeFile(\n\t\tFS: Emscripten.RootFS,\n\t\tpath: string,\n\t\tdata: string | Uint8Array\n\t) {\n\t\tFS.writeFile(path, data);\n\t}\n\n\t/**\n\t * Removes a file from the PHP filesystem.\n\t *\n\t * @throws {@link @php-wasm/universal:ErrnoError} – If the file doesn't exist.\n\t * @param FS\n\t * @param  path - The file path to remove.\n\t */\n\t@rethrowFileSystemError('Could not unlink \"{path}\"')\n\tstatic unlink(FS: Emscripten.RootFS, path: string) {\n\t\tFS.unlink(path);\n\t}\n\n\t/**\n\t * Moves a file or directory in the PHP filesystem to a\n\t * new location.\n\t *\n\t * @param FS\n\t * @param fromPath The path to rename.\n\t * @param toPath The new path.\n\t */\n\tstatic mv(FS: Emscripten.RootFS, fromPath: string, toPath: string) {\n\t\ttry {\n\t\t\t// FS.rename moves the inode within the same filesystem.\n\t\t\t// If fromPath and toPath are on different filesystems,\n\t\t\t// the operation will fail. In that case, we need to do\n\t\t\t// a recursive copy of all the files and remove the original.\n\t\t\t// Note this is also what happens in the linux `mv` command.\n\t\t\tconst fromMount = FS.lookupPath(fromPath).node.mount;\n\t\t\tconst toMount = FSHelpers.fileExists(FS, toPath)\n\t\t\t\t? FS.lookupPath(toPath).node.mount\n\t\t\t\t: FS.lookupPath(dirname(toPath)).node.mount;\n\t\t\tconst movingBetweenFilesystems =\n\t\t\t\tfromMount.mountpoint !== toMount.mountpoint;\n\n\t\t\tif (movingBetweenFilesystems) {\n\t\t\t\tFSHelpers.copyRecursive(FS, fromPath, toPath);\n\t\t\t\tif (FSHelpers.isDir(FS, fromPath)) {\n\t\t\t\t\tFSHelpers.rmdir(FS, fromPath, { recursive: true });\n\t\t\t\t} else {\n\t\t\t\t\tFS.unlink(fromPath);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tFS.rename(fromPath, toPath);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconst errmsg = getEmscriptenFsError(e);\n\t\t\tif (!errmsg) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Could not move ${fromPath} to ${toPath}: ${errmsg}`,\n\t\t\t\t{\n\t\t\t\t\tcause: e,\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a directory from the PHP filesystem.\n\t *\n\t * @param FS\n\t * @param path The directory path to remove.\n\t * @param options Options for the removal.\n\t */\n\t@rethrowFileSystemError('Could not remove directory \"{path}\"')\n\tstatic rmdir(\n\t\tFS: Emscripten.RootFS,\n\t\tpath: string,\n\t\toptions: RmDirOptions = { recursive: true }\n\t) {\n\t\tif (options?.recursive) {\n\t\t\tFSHelpers.listFiles(FS, path).forEach((file) => {\n\t\t\t\tconst filePath = `${path}/${file}`;\n\t\t\t\tif (FSHelpers.isDir(FS, filePath)) {\n\t\t\t\t\tFSHelpers.rmdir(FS, filePath, options);\n\t\t\t\t} else {\n\t\t\t\t\tFSHelpers.unlink(FS, filePath);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tFS.rmdir(path);\n\t}\n\n\t/**\n\t * Lists the files and directories in the given directory.\n\t *\n\t * @param FS\n\t * @param  path - The directory path to list.\n\t * @param  options - Options for the listing.\n\t * @returns The list of files and directories in the given directory.\n\t */\n\t@rethrowFileSystemError('Could not list files in \"{path}\"')\n\tstatic listFiles(\n\t\tFS: Emscripten.RootFS,\n\t\tpath: string,\n\t\toptions: ListFilesOptions = { prependPath: false }\n\t): string[] {\n\t\tif (!FSHelpers.fileExists(FS, path)) {\n\t\t\treturn [];\n\t\t}\n\t\ttry {\n\t\t\tconst files = FS.readdir(path).filter(\n\t\t\t\t(name: string) => name !== '.' && name !== '..'\n\t\t\t);\n\t\t\tif (options.prependPath) {\n\t\t\t\tconst prepend = path.replace(/\\/$/, '');\n\t\t\t\treturn files.map((name: string) => `${prepend}/${name}`);\n\t\t\t}\n\t\t\treturn files;\n\t\t} catch (e) {\n\t\t\tlogger.error(e, { path });\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a directory exists in the PHP filesystem.\n\t *\n\t * @param FS\n\t * @param  path – The path to check.\n\t * @returns True if the path is a directory, false otherwise.\n\t */\n\t@rethrowFileSystemError('Could not stat \"{path}\"')\n\tstatic isDir(FS: Emscripten.RootFS, path: string): boolean {\n\t\tif (!FSHelpers.fileExists(FS, path)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn FS.isDir(FS.lookupPath(path, { follow: true }).node.mode);\n\t}\n\n\t/**\n\t * Checks if a file exists in the PHP filesystem.\n\t *\n\t * @param FS\n\t * @param  path – The path to check.\n\t * @returns True if the path is a file, false otherwise.\n\t */\n\t@rethrowFileSystemError('Could not stat \"{path}\"')\n\tstatic isFile(FS: Emscripten.RootFS, path: string): boolean {\n\t\tif (!FSHelpers.fileExists(FS, path)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn FS.isFile(FS.lookupPath(path, { follow: true }).node.mode);\n\t}\n\n\t/**\n\t * Creates a symlink in the PHP filesystem.\n\t *\n\t * @param FS\n\t * @param target\n\t * @param link\n\t */\n\tstatic symlink(FS: Emscripten.RootFS, target: string, link: string): any {\n\t\treturn FS.symlink(target, link);\n\t}\n\n\t/**\n\t * Checks if a path is a symlink in the PHP filesystem.\n\t *\n\t * @param FS\n\t * @param path\n\t * @returns True if the path is a symlink, false otherwise.\n\t */\n\tstatic isSymlink(FS: Emscripten.RootFS, path: string): boolean {\n\t\tif (!FSHelpers.fileExists(FS, path)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn FS.isLink(FS.lookupPath(path).node.mode);\n\t}\n\n\t/**\n\t * Reads the target of a symlink in the PHP filesystem.\n\t * @param FS\n\t * @param path\n\t * @returns The target of the symlink.\n\t * @throws {@link @php-wasm/universal:ErrnoError} – If the path is not a symlink.\n\t */\n\tstatic readlink(FS: Emscripten.RootFS, path: string): string {\n\t\treturn FS.readlink(path);\n\t}\n\n\t/**\n\t * Gets the real path of a file in the PHP filesystem.\n\t * @param FS\n\t * @param path\n\t *\n\t * @returns The real path of the file.\n\t */\n\t@rethrowFileSystemError('Could not stat \"{path}\"')\n\tstatic realpath(FS: Emscripten.RootFS, path: string): string {\n\t\treturn FS.lookupPath(path, { follow: true }).path;\n\t}\n\n\t/**\n\t * Checks if a file (or a directory) exists in the PHP filesystem.\n\t *\n\t * @param FS\n\t * @param  path - The file path to check.\n\t * @returns True if the file exists, false otherwise.\n\t */\n\t@rethrowFileSystemError('Could not stat \"{path}\"')\n\tstatic fileExists(FS: Emscripten.RootFS, path: string): boolean {\n\t\ttry {\n\t\t\tFS.lookupPath(path);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Recursively creates a directory with the given path in the PHP filesystem.\n\t * For example, if the path is `/root/php/data`, and `/root` already exists,\n\t * it will create the directories `/root/php` and `/root/php/data`.\n\t *\n\t * @param FS\n\t * @param  path - The directory path to create.\n\t */\n\t@rethrowFileSystemError('Could not create directory \"{path}\"')\n\tstatic mkdir(FS: Emscripten.RootFS, path: string) {\n\t\tFS.mkdirTree(path);\n\t}\n\n\t@rethrowFileSystemError('Could not copy files from \"{path}\"')\n\tstatic copyRecursive(\n\t\tFS: Emscripten.FileSystemInstance,\n\t\tfromPath: string,\n\t\ttoPath: string\n\t) {\n\t\tconst fromNode = FS.lookupPath(fromPath).node;\n\t\tif (FS.isDir(fromNode.mode)) {\n\t\t\tFS.mkdirTree(toPath);\n\t\t\tconst filenames = FS.readdir(fromPath).filter(\n\t\t\t\t(name: string) => name !== '.' && name !== '..'\n\t\t\t);\n\t\t\tfor (const filename of filenames) {\n\t\t\t\tFSHelpers.copyRecursive(\n\t\t\t\t\tFS,\n\t\t\t\t\tjoinPaths(fromPath, filename),\n\t\t\t\t\tjoinPaths(toPath, filename)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tFS.writeFile(toPath, FS.readFile(fromPath));\n\t\t}\n\t}\n}\n","import { EmscriptenDownloadMonitor } from '@php-wasm/progress';\nimport { PHP } from './php';\nimport { PHPRequestHandler } from './php-request-handler';\nimport { PHPResponse } from './php-response';\nimport {\n\tPHPRequest,\n\tPHPRunOptions,\n\tMessageListener,\n\tPHPEvent,\n\tPHPEventListener,\n} from './universal-php';\nimport { RmDirOptions, ListFilesOptions } from './fs-helpers';\n\nconst _private = new WeakMap<\n\tPHPWorker,\n\t{\n\t\trequestHandler?: PHPRequestHandler;\n\t\tphp?: PHP;\n\t\tmonitor?: EmscriptenDownloadMonitor;\n\t}\n>();\n\nexport type LimitedPHPApi = Pick<\n\tPHP,\n\t| 'request'\n\t| 'defineConstant'\n\t| 'addEventListener'\n\t| 'removeEventListener'\n\t| 'mkdir'\n\t| 'mkdirTree'\n\t| 'readFileAsText'\n\t| 'readFileAsBuffer'\n\t| 'writeFile'\n\t| 'unlink'\n\t| 'mv'\n\t| 'rmdir'\n\t| 'listFiles'\n\t| 'isDir'\n\t| 'fileExists'\n\t| 'chdir'\n\t| 'run'\n\t| 'onMessage'\n> & {\n\tdocumentRoot: PHP['documentRoot'];\n\tabsoluteUrl: PHP['absoluteUrl'];\n};\n\n/**\n * A PHP client that can be used to run PHP code in the browser.\n */\nexport class PHPWorker implements LimitedPHPApi {\n\t/** @inheritDoc @php-wasm/universal!RequestHandler.absoluteUrl  */\n\tabsoluteUrl = '';\n\t/** @inheritDoc @php-wasm/universal!RequestHandler.documentRoot  */\n\tdocumentRoot = '';\n\n\t/** @inheritDoc */\n\tconstructor(\n\t\trequestHandler?: PHPRequestHandler,\n\t\tmonitor?: EmscriptenDownloadMonitor\n\t) {\n\t\t/**\n\t\t * Workaround for TypeScript limitation.\n\t\t * Declaring a private field using the EcmaScript syntax like this:\n\t\t *\n\t\t *     #php: PHP\n\t\t *\n\t\t * Makes that field a part of the public API of the class. This means\n\t\t * you can no longer assign seemingly compatible objects:\n\t\t *\n\t\t * ```ts\n\t\t *     class PrivateEcma {\n\t\t *       #privateProp: string = '';\n\t\t *       callback() { }\n\t\t *     }\n\t\t *     interface CompatibleInterface {\n\t\t *       callback(): void;\n\t\t *     }\n\t\t *     const compatObj: CompatibleInterface = {} as any;\n\t\t *     const tsObj: PrivateEcma = compatObj;\n\t\t *     // Property '#privateProp' is missing in type 'CompatibleInterface' but\n\t\t *     // required in type 'PrivateEcma'\n\t\t * ```\n\t\t */\n\t\t_private.set(this, {\n\t\t\tmonitor,\n\t\t});\n\t\tif (requestHandler) {\n\t\t\tthis.__internal_setRequestHandler(requestHandler);\n\t\t}\n\t}\n\n\tpublic __internal_setRequestHandler(requestHandler: PHPRequestHandler) {\n\t\tthis.absoluteUrl = requestHandler.absoluteUrl;\n\t\tthis.documentRoot = requestHandler.documentRoot;\n\t\t_private.set(this, {\n\t\t\t..._private.get(this),\n\t\t\trequestHandler,\n\t\t});\n\t}\n\n\t/**\n\t * @internal\n\t * @deprecated\n\t * Do not use this method directly in the code consuming\n\t * the web API. It will change or even be removed without\n\t * a warning.\n\t */\n\tprotected __internal_getPHP() {\n\t\treturn _private.get(this)!.php;\n\t}\n\n\tasync setPrimaryPHP(php: PHP) {\n\t\t_private.set(this, {\n\t\t\t..._private.get(this)!,\n\t\t\tphp,\n\t\t});\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!PHPRequestHandler.pathToInternalUrl  */\n\tpathToInternalUrl(path: string): string {\n\t\treturn _private.get(this)!.requestHandler!.pathToInternalUrl(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!PHPRequestHandler.internalUrlToPath  */\n\tinternalUrlToPath(internalUrl: string): string {\n\t\treturn _private\n\t\t\t.get(this)!\n\t\t\t.requestHandler!.internalUrlToPath(internalUrl);\n\t}\n\n\t/**\n\t * The onDownloadProgress event listener.\n\t */\n\tasync onDownloadProgress(\n\t\tcallback: (progress: CustomEvent<ProgressEvent>) => void\n\t): Promise<void> {\n\t\treturn _private\n\t\t\t.get(this)!\n\t\t\t.monitor?.addEventListener('progress', callback as any);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!PHP.mv  */\n\tasync mv(fromPath: string, toPath: string) {\n\t\treturn _private.get(this)!.php!.mv(fromPath, toPath);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!PHP.rmdir  */\n\tasync rmdir(path: string, options?: RmDirOptions) {\n\t\treturn _private.get(this)!.php!.rmdir(path, options);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!PHPRequestHandler.request */\n\tasync request(request: PHPRequest): Promise<PHPResponse> {\n\t\tconst requestHandler = _private.get(this)!.requestHandler!;\n\t\treturn await requestHandler.request(request);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.run */\n\tasync run(request: PHPRunOptions): Promise<PHPResponse> {\n\t\tconst { php, reap } = await _private\n\t\t\t.get(this)!\n\t\t\t.requestHandler!.processManager.acquirePHPInstance();\n\t\ttry {\n\t\t\treturn await php.run(request);\n\t\t} finally {\n\t\t\treap();\n\t\t}\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.chdir */\n\tchdir(path: string): void {\n\t\treturn _private.get(this)!.php!.chdir(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.setSapiName */\n\tsetSapiName(newName: string): void {\n\t\t_private.get(this)!.php!.setSapiName(newName);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.mkdir */\n\tmkdir(path: string): void {\n\t\treturn _private.get(this)!.php!.mkdir(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.mkdirTree */\n\tmkdirTree(path: string): void {\n\t\treturn _private.get(this)!.php!.mkdirTree(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.readFileAsText */\n\treadFileAsText(path: string): string {\n\t\treturn _private.get(this)!.php!.readFileAsText(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.readFileAsBuffer */\n\treadFileAsBuffer(path: string): Uint8Array {\n\t\treturn _private.get(this)!.php!.readFileAsBuffer(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.writeFile */\n\twriteFile(path: string, data: string | Uint8Array): void {\n\t\treturn _private.get(this)!.php!.writeFile(path, data);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.unlink */\n\tunlink(path: string): void {\n\t\treturn _private.get(this)!.php!.unlink(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.listFiles */\n\tlistFiles(path: string, options?: ListFilesOptions): string[] {\n\t\treturn _private.get(this)!.php!.listFiles(path, options);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.isDir */\n\tisDir(path: string): boolean {\n\t\treturn _private.get(this)!.php!.isDir(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.isFile */\n\tisFile(path: string): boolean {\n\t\treturn _private.get(this)!.php!.isFile(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.fileExists */\n\tfileExists(path: string): boolean {\n\t\treturn _private.get(this)!.php!.fileExists(path);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.onMessage */\n\tonMessage(listener: MessageListener) {\n\t\treturn _private.get(this)!.php!.onMessage(listener);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.defineConstant */\n\tdefineConstant(key: string, value: string | boolean | number | null): void {\n\t\t_private.get(this)!.php!.defineConstant(key, value);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.addEventListener */\n\taddEventListener(\n\t\teventType: PHPEvent['type'],\n\t\tlistener: PHPEventListener\n\t): void {\n\t\t_private.get(this)!.php!.addEventListener(eventType, listener);\n\t}\n\n\t/** @inheritDoc @php-wasm/universal!/PHP.removeEventListener */\n\tremoveEventListener(\n\t\teventType: PHPEvent['type'],\n\t\tlistener: PHPEventListener\n\t): void {\n\t\t_private.get(this)!.php!.removeEventListener(eventType, listener);\n\t}\n}\n","/*\n * This type is used in Comlink.transferHandlers.set('PHPResponse', { ... })\n * so be sure to update that if you change this type.\n */\nexport interface PHPResponseData {\n\t/**\n\t * Response headers.\n\t */\n\treadonly headers: Record<string, string[]>;\n\n\t/**\n\t * Response body. Contains the output from `echo`,\n\t * `print`, inline HTML etc.\n\t */\n\treadonly bytes: ArrayBuffer;\n\n\t/**\n\t * Stderr contents, if any.\n\t */\n\treadonly errors: string;\n\n\t/**\n\t * The exit code of the script. `0` is a success, while\n\t * `1` and `2` indicate an error.\n\t */\n\treadonly exitCode: number;\n\n\t/**\n\t * Response HTTP status code, e.g. 200.\n\t */\n\treadonly httpStatusCode: number;\n}\n\nconst responseTexts: Record<number, string> = {\n\t500: 'Internal Server Error',\n\t502: 'Bad Gateway',\n\t404: 'Not Found',\n\t403: 'Forbidden',\n\t401: 'Unauthorized',\n\t400: 'Bad Request',\n\t301: 'Moved Permanently',\n\t302: 'Found',\n\t307: 'Temporary Redirect',\n\t308: 'Permanent Redirect',\n\t204: 'No Content',\n\t201: 'Created',\n\t200: 'OK',\n};\n\n/**\n * PHP response. Body is an `ArrayBuffer` because it can\n * contain binary data.\n *\n * This type is used in Comlink.transferHandlers.set('PHPResponse', \\{ ... \\})\n * so be sure to update that if you change this type.\n */\nexport class PHPResponse implements PHPResponseData {\n\t/** @inheritDoc */\n\treadonly headers: Record<string, string[]>;\n\n\t/** @inheritDoc */\n\treadonly bytes: ArrayBuffer;\n\n\t/** @inheritDoc */\n\treadonly errors: string;\n\n\t/** @inheritDoc */\n\treadonly exitCode: number;\n\n\t/** @inheritDoc */\n\treadonly httpStatusCode: number;\n\n\tconstructor(\n\t\thttpStatusCode: number,\n\t\theaders: Record<string, string[]>,\n\t\tbody: ArrayBuffer,\n\t\terrors = '',\n\t\texitCode = 0\n\t) {\n\t\tthis.httpStatusCode = httpStatusCode;\n\t\tthis.headers = headers;\n\t\tthis.bytes = body;\n\t\tthis.exitCode = exitCode;\n\t\tthis.errors = errors;\n\t}\n\n\tstatic forHttpCode(httpStatusCode: number, text = '') {\n\t\treturn new PHPResponse(\n\t\t\thttpStatusCode,\n\t\t\t{},\n\t\t\tnew TextEncoder().encode(\n\t\t\t\ttext || responseTexts[httpStatusCode] || ''\n\t\t\t)\n\t\t);\n\t}\n\n\tstatic fromRawData(data: PHPResponseData): PHPResponse {\n\t\treturn new PHPResponse(\n\t\t\tdata.httpStatusCode,\n\t\t\tdata.headers,\n\t\t\tdata.bytes,\n\t\t\tdata.errors,\n\t\t\tdata.exitCode\n\t\t);\n\t}\n\n\ttoRawData(): PHPResponseData {\n\t\treturn {\n\t\t\theaders: this.headers,\n\t\t\tbytes: this.bytes,\n\t\t\terrors: this.errors,\n\t\t\texitCode: this.exitCode,\n\t\t\thttpStatusCode: this.httpStatusCode,\n\t\t};\n\t}\n\n\t/**\n\t * Response body as JSON.\n\t */\n\tget json() {\n\t\treturn JSON.parse(this.text);\n\t}\n\n\t/**\n\t * Response body as text.\n\t */\n\tget text() {\n\t\treturn new TextDecoder().decode(this.bytes);\n\t}\n}\n","import { logger } from '@php-wasm/logger';\nimport { IncomingMessage, Server, ServerResponse } from 'http';\n\nconst RuntimeId = Symbol('RuntimeId');\nconst loadedRuntimes: Map<number, PHPRuntime> = new Map();\nlet lastRuntimeId = 0;\n\n/**\n * Loads the PHP runtime with the given arguments and data dependencies.\n *\n * This function handles the entire PHP initialization pipeline. In particular,\n * it:\n *\n * * Instantiates the Emscripten PHP module\n * * Wires it together with the data dependencies and loads them\n * * Ensures is all happens in a correct order\n * * Waits until the entire loading sequence is finished\n *\n * Basic usage:\n *\n * ```js\n *  const phpLoaderModule = await getPHPLoaderModule(\"7.4\");\n *  const php = await loadPHPRuntime( phpLoaderModule );\n *  console.log(php.run(`<?php echo \"Hello, world!\"; `));\n *  // { stdout: ArrayBuffer containing the string \"Hello, world!\", stderr: [''], exitCode: 0 }\n * ```\n *\n * **The PHP loader module:**\n *\n * In the basic usage example, `phpLoaderModule` is **not** a vanilla\n * Emscripten module. Instead, it's an ESM module that wraps the regular\n * Emscripten output and adds some extra functionality. It's generated by the\n * Dockerfile shipped with this repo. Here's the API it provides:\n *\n * ```js\n * // php.wasm size in bytes:\n * export const dependenciesTotalSize = 5644199;\n *\n * // php.wasm filename:\n * export const dependencyFilename = 'php.wasm';\n *\n * // Run Emscripten's generated module:\n * export default function(jsEnv, emscriptenModuleArgs) {}\n * ```\n *\n * **PHP Filesystem:**\n *\n * Once initialized, the PHP has its own filesystem separate from the project\n * files. It's provided by [Emscripten and uses its FS library](https://emscripten.org/docs/api_reference/Filesystem-API.html).\n *\n * The API exposed to you via the PHP class is succinct and abstracts\n * certain unintuitive parts of low-level filesystem interactions.\n *\n * Here's how to use it:\n *\n * ```js\n * // Recursively create a /var/www directory\n * php.mkdirTree('/var/www');\n *\n * console.log(php.fileExists('/var/www/file.txt'));\n * // false\n *\n * php.writeFile('/var/www/file.txt', 'Hello from the filesystem!');\n *\n * console.log(php.fileExists('/var/www/file.txt'));\n * // true\n *\n * console.log(php.readFile('/var/www/file.txt'));\n * // \"Hello from the filesystem!\n *\n * // Delete the file:\n * php.unlink('/var/www/file.txt');\n * ```\n *\n * For more details consult the PHP class directly.\n *\n * **Data dependencies:**\n *\n * Using existing PHP packages by manually recreating them file-by-file would\n * be quite inconvenient. Fortunately, Emscripten provides a \"data dependencies\"\n * feature.\n *\n * Data dependencies consist of a `dependency.data` file and a `dependency.js`\n * loader and can be packaged with the [file_packager.py tool](\n * https://emscripten.org/docs/porting/files/packaging_files.html#packaging-using-the-file-packager-tool).\n * This project requires wrapping the Emscripten-generated `dependency.js` file\n * in an ES module as follows:\n *\n * 1. Prepend `export default function(emscriptenPHPModule) {'; `\n * 2. Prepend `export const dependencyFilename = '<DATA FILE NAME>'; `\n * 3. Prepend `export const dependenciesTotalSize = <DATA FILE SIZE>;`\n * 4. Append `}`\n *\n * Be sure to use the `--export-name=\"emscriptenPHPModule\"` file_packager.py\n * option.\n *\n * You want the final output to look as follows:\n *\n * ```js\n * export const dependenciesTotalSize = 5644199;\n * export const dependencyFilename = 'dependency.data';\n * export default function(emscriptenPHPModule) {\n *    // Emscripten-generated code:\n *    var Module = typeof emscriptenPHPModule !== 'undefined' ? emscriptenPHPModule : {};\n *    // ... the rest of it ...\n * }\n * ```\n *\n * Such a constructions enables loading the `dependency.js` as an ES Module\n * using `import(\"/dependency.js\")`.\n *\n * Once it's ready, you can load PHP and your data dependencies as follows:\n *\n * ```js\n *  const [phpLoaderModule, wordPressLoaderModule] = await Promise.all([\n *    getPHPLoaderModule(\"7.4\"),\n *    import(\"/wp.js\")\n *  ]);\n *  const php = await loadPHPRuntime(phpLoaderModule, {}, [wordPressLoaderModule]);\n * ```\n *\n * @public\n * @param  phpLoaderModule         - The ESM-wrapped Emscripten module. Consult the Dockerfile for the build process.\n * @param  phpModuleArgs           - The Emscripten module arguments, see https://emscripten.org/docs/api_reference/module.html#affecting-execution.\n * @returns Loaded runtime id.\n */\n\nexport async function loadPHPRuntime(\n\tphpLoaderModule: PHPLoaderModule,\n\tphpModuleArgs: EmscriptenOptions = {}\n): Promise<number> {\n\tconst [phpReady, resolvePHP, rejectPHP] = makePromise();\n\n\tconst PHPRuntime = phpLoaderModule.init(currentJsRuntime, {\n\t\tonAbort(reason) {\n\t\t\trejectPHP(reason);\n\t\t\t// This can happen after PHP has been initialized so\n\t\t\t// let's just log it.\n\t\t\tlogger.error(reason);\n\t\t},\n\t\tENV: {},\n\t\t// Emscripten sometimes prepends a '/' to the path, which\n\t\t// breaks vite dev mode. An identity `locateFile` function\n\t\t// fixes it.\n\t\tlocateFile: (path) => path,\n\t\t...phpModuleArgs,\n\t\tnoInitialRun: true,\n\t\tonRuntimeInitialized() {\n\t\t\tif (phpModuleArgs.onRuntimeInitialized) {\n\t\t\t\tphpModuleArgs.onRuntimeInitialized();\n\t\t\t}\n\t\t\tresolvePHP();\n\t\t},\n\t});\n\n\tawait phpReady;\n\n\tconst id = ++lastRuntimeId;\n\n\tPHPRuntime.FS;\n\tPHPRuntime.id = id;\n\tPHPRuntime.originalExit = PHPRuntime._exit;\n\n\tPHPRuntime._exit = function (code: number) {\n\t\tif (PHPRuntime.outboundNetworkProxyServer) {\n\t\t\tPHPRuntime.outboundNetworkProxyServer.close();\n\t\t\tPHPRuntime.outboundNetworkProxyServer.closeAllConnections();\n\t\t}\n\t\tloadedRuntimes.delete(id);\n\t\treturn PHPRuntime.originalExit(code);\n\t};\n\n\tPHPRuntime[RuntimeId] = id;\n\tloadedRuntimes.set(id, PHPRuntime);\n\treturn id;\n}\n\nexport type RuntimeType = 'NODE' | 'WEB' | 'WORKER';\n\ndeclare const self: WindowOrWorkerGlobalScope;\ndeclare const WorkerGlobalScope: object | undefined;\n\nexport type PHPRuntimeId = number;\n\nexport function getLoadedRuntime(id: PHPRuntimeId): PHPRuntime {\n\treturn loadedRuntimes.get(id);\n}\n\nexport const currentJsRuntime = (function () {\n\tif (typeof process !== 'undefined' && process.release?.name === 'node') {\n\t\treturn 'NODE';\n\t} else if (typeof window !== 'undefined') {\n\t\treturn 'WEB';\n\t} else if (\n\t\ttypeof WorkerGlobalScope !== 'undefined' &&\n\t\tself instanceof (WorkerGlobalScope as any)\n\t) {\n\t\treturn 'WORKER';\n\t} else {\n\t\treturn 'NODE';\n\t}\n})();\n\n/**\n * Creates and exposes Promise resolve/reject methods for later use.\n */\nconst makePromise = () => {\n\tconst methods: any = [];\n\n\tconst promise = new Promise((resolve, reject) => {\n\t\tmethods.push(resolve, reject);\n\t});\n\tmethods.unshift(promise);\n\n\treturn methods as [Promise<any>, (v?: any) => void, (e?: any) => void];\n};\n\nexport type PHPRuntime = any;\n\nexport type PHPLoaderModule = {\n\tdependencyFilename: string;\n\tdependenciesTotalSize: number;\n\tinit: (jsRuntime: string, options: EmscriptenOptions) => PHPRuntime;\n};\n\nexport type DataModule = {\n\tdependencyFilename: string;\n\tdependenciesTotalSize: number;\n\tdefault: (phpRuntime: PHPRuntime) => void;\n};\n\nexport type EmscriptenOptions = {\n\tonAbort?: (message: string) => void;\n\t/**\n\t * Set to true for debugging tricky WebAssembly errors.\n\t */\n\tdebug?: boolean;\n\tENV?: Record<string, string>;\n\tlocateFile?: (path: string) => string;\n\tnoInitialRun?: boolean;\n\tprint?: (message: string) => void;\n\tprintErr?: (message: string) => void;\n\tquit?: (status: number, toThrow: any) => void;\n\tonRuntimeInitialized?: () => void;\n\tmonitorRunDependencies?: (left: number) => void;\n\tonMessage?: (listener: EmscriptenMessageListener) => void;\n\toutboundNetworkProxyServer?: Server<\n\t\ttypeof IncomingMessage,\n\t\ttypeof ServerResponse\n\t>;\n\tinstantiateWasm?: (\n\t\tinfo: WebAssembly.Imports,\n\t\treceiveInstance: (\n\t\t\tinstance: WebAssembly.Instance,\n\t\t\tmodule: WebAssembly.Module\n\t\t) => void\n\t) => void;\n} & Record<string, any>;\n\nexport type EmscriptenMessageListener = (type: string, data: string) => void;\n","/*\n * Node.js Polyfill for ErrorEvent.\n */\n\nconst kError = Symbol('error');\nconst kMessage = Symbol('message');\n\ninterface ErrorEventOptions {\n\t/* The error that generated this event */\n\terror?: Error;\n\t/* The error message */\n\tmessage?: string;\n}\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent2 extends Event {\n\t[kError]: any;\n\t[kMessage]: any;\n\t/**\n\t * Create a new `ErrorEvent`.\n\t *\n\t * @param type The name of the event\n\t * @param options A dictionary object that allows for setting\n\t *                  attributes via object members of the same name.\n\t */\n\tconstructor(type: 'error', options: ErrorEventOptions = {}) {\n\t\tsuper(type);\n\n\t\tthis[kError] = options.error === undefined ? null : options.error;\n\t\tthis[kMessage] = options.message === undefined ? '' : options.message;\n\t}\n\n\tget error() {\n\t\treturn this[kError];\n\t}\n\n\tget message() {\n\t\treturn this[kMessage];\n\t}\n}\nObject.defineProperty(ErrorEvent2.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent2.prototype, 'message', { enumerable: true });\n\nexport const ErrorEvent =\n\ttypeof globalThis.ErrorEvent === 'function'\n\t\t? globalThis.ErrorEvent\n\t\t: ErrorEvent2;\n","/**\n * Check if the Emscripten-thrown error is an exit code 0 error.\n *\n * @param e The error to check\n * @returns True if the error is an exit code 0 error\n */\nexport function isExitCodeZero(e: any) {\n\tif (!(e instanceof Error)) {\n\t\treturn false;\n\t}\n\treturn (\n\t\t('exitCode' in e && e?.exitCode === 0) ||\n\t\t(e?.name === 'ExitStatus' && 'status' in e && e.status === 0)\n\t);\n}\n","import { ErrorEvent } from './error-event-polyfill';\nimport { isExitCodeZero } from './is-exit-code-zero';\nimport { logger } from '@php-wasm/logger';\n\ntype Runtime = {\n\twasmExports: Record<string, unknown>;\n\tlastAsyncifyStackSource?: Error;\n};\n\nexport class UnhandledRejectionsTarget extends EventTarget {\n\tlistenersCount = 0;\n\toverride addEventListener(type: unknown, callback: unknown): void {\n\t\t++this.listenersCount;\n\t\tsuper.addEventListener(type as string, callback as EventListener);\n\t}\n\toverride removeEventListener(type: unknown, callback: unknown): void {\n\t\t--this.listenersCount;\n\t\tsuper.removeEventListener(type as string, callback as EventListener);\n\t}\n\thasListeners() {\n\t\treturn this.listenersCount > 0;\n\t}\n}\n\n/**\n * Creates Asyncify errors listener.\n *\n * Emscripten turns Asyncify errors into unhandled rejections by\n * throwing them outside of the context of the original function call.\n *\n * With this listener, we can catch and rethrow them in a proper context,\n * or at least log them in a more readable way.\n *\n * @param runtime\n */\nexport function improveWASMErrorReporting(runtime: Runtime) {\n\tconst target = new UnhandledRejectionsTarget();\n\tfor (const key in runtime.wasmExports) {\n\t\tif (typeof runtime.wasmExports[key] == 'function') {\n\t\t\tconst original = runtime.wasmExports[key] as any;\n\t\t\truntime.wasmExports[key] = function (...args: any[]) {\n\t\t\t\ttry {\n\t\t\t\t\treturn original(...args);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (!(e instanceof Error)) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t\tconst clearMessage = clarifyErrorMessage(\n\t\t\t\t\t\te,\n\t\t\t\t\t\truntime.lastAsyncifyStackSource?.stack\n\t\t\t\t\t);\n\n\t\t\t\t\tif (runtime.lastAsyncifyStackSource) {\n\t\t\t\t\t\te.cause = runtime.lastAsyncifyStackSource;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target.hasListeners()) {\n\t\t\t\t\t\ttarget.dispatchEvent(\n\t\t\t\t\t\t\tnew ErrorEvent('error', {\n\t\t\t\t\t\t\t\terror: e,\n\t\t\t\t\t\t\t\tmessage: clearMessage,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isExitCodeZero(e)) {\n\t\t\t\t\t\tshowCriticalErrorBox(clearMessage);\n\t\t\t\t\t}\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\treturn target;\n}\n\nlet functionsMaybeMissingFromAsyncify: string[] = [];\nexport function getFunctionsMaybeMissingFromAsyncify() {\n\treturn functionsMaybeMissingFromAsyncify;\n}\n\nexport function clarifyErrorMessage(\n\tcrypticError: Error,\n\tasyncifyStack?: string\n) {\n\tif (crypticError.message === 'unreachable') {\n\t\tlet betterMessage = UNREACHABLE_ERROR;\n\t\tif (!asyncifyStack) {\n\t\t\tbetterMessage +=\n\t\t\t\t`\\n\\nThis stack trace is lacking. For a better one initialize \\n` +\n\t\t\t\t`the PHP runtime with { debug: true }, e.g. PHPNode.load('8.1', { debug: true }).\\n\\n`;\n\t\t}\n\t\tfunctionsMaybeMissingFromAsyncify = extractPHPFunctionsFromStack(\n\t\t\tasyncifyStack || crypticError.stack || ''\n\t\t);\n\t\tfor (const fn of functionsMaybeMissingFromAsyncify) {\n\t\t\tbetterMessage += `    * ${fn}\\n`;\n\t\t}\n\t\treturn betterMessage;\n\t}\n\treturn crypticError.message;\n}\n\nconst UNREACHABLE_ERROR = `\n\"unreachable\" WASM instruction executed.\n\nThe typical reason is a PHP function missing from the ASYNCIFY_ONLY\nlist when building PHP.wasm.\n\nYou will need to file a new issue in the WordPress Playground repository\nand paste this error message there:\n\nhttps://github.com/WordPress/wordpress-playground/issues/new\n\nIf you're a core developer, the typical fix is to:\n\n* Isolate a minimal reproduction of the error\n* Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n* Run 'npm run fix-asyncify'\n* Commit the changes, push to the repo, release updated NPM packages\n\nBelow is a list of all the PHP functions found in the stack trace to\nhelp with the minimal reproduction. If they're all already listed in\nthe Dockerfile, you'll need to trigger this error again with long stack\ntraces enabled. In node.js, you can do it using the --stack-trace-limit=100\nCLI option: \\n\\n`;\n\n// ANSI escape codes for CLI colors and formats\nconst redBg = '\\x1b[41m';\nconst bold = '\\x1b[1m';\nconst reset = '\\x1b[0m';\nconst eol = '\\x1B[K';\n\nlet logged = false;\nexport function showCriticalErrorBox(message: string) {\n\tif (logged) {\n\t\treturn;\n\t}\n\tlogged = true;\n\tif (message?.trim().startsWith('Program terminated with exit')) {\n\t\treturn;\n\t}\n\tlogger.log(`${redBg}\\n${eol}\\n${bold}  WASM ERROR${reset}${redBg}`);\n\tfor (const line of message.split('\\n')) {\n\t\tlogger.log(`${eol}  ${line} `);\n\t}\n\tlogger.log(`${reset}`);\n}\n\nfunction extractPHPFunctionsFromStack(stack: string) {\n\ttry {\n\t\tconst names = stack\n\t\t\t.split('\\n')\n\t\t\t.slice(1)\n\t\t\t.map((line) => {\n\t\t\t\tconst parts = line.trim().substring('at '.length).split(' ');\n\t\t\t\treturn {\n\t\t\t\t\tfn: parts.length >= 2 ? parts[0] : '<unknown>',\n\t\t\t\t\tisWasm: line.includes('wasm://'),\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter(\n\t\t\t\t({ fn, isWasm }) =>\n\t\t\t\t\tisWasm &&\n\t\t\t\t\t!fn.startsWith('dynCall_') &&\n\t\t\t\t\t!fn.startsWith('invoke_')\n\t\t\t)\n\t\t\t.map(({ fn }) => fn);\n\t\treturn Array.from(new Set(names));\n\t} catch (err) {\n\t\treturn [];\n\t}\n}\n","import { PHPResponse } from './php-response';\nimport { getLoadedRuntime } from './load-php-runtime';\nimport type { PHPRuntimeId } from './load-php-runtime';\nimport {\n\tMessageListener,\n\tPHPRequest,\n\tPHPRequestHeaders,\n\tPHPRunOptions,\n\tSpawnHandler,\n\tPHPEventListener,\n\tPHPEvent,\n} from './universal-php';\nimport { RmDirOptions, ListFilesOptions, FSHelpers } from './fs-helpers';\nimport {\n\tgetFunctionsMaybeMissingFromAsyncify,\n\timproveWASMErrorReporting,\n\tUnhandledRejectionsTarget,\n} from './wasm-error-reporting';\nimport { Semaphore, createSpawnHandler, joinPaths } from '@php-wasm/util';\nimport { PHPRequestHandler } from './php-request-handler';\nimport { logger } from '@php-wasm/logger';\nimport { isExitCodeZero } from './is-exit-code-zero';\nimport { Emscripten } from './emscripten-types';\n\nconst STRING = 'string';\nconst NUMBER = 'number';\n\nexport const __private__dont__use = Symbol('__private__dont__use');\n\nexport class PHPExecutionFailureError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\tpublic response: PHPResponse,\n\t\tpublic source: 'request' | 'php-wasm'\n\t) {\n\t\tsuper(message);\n\t}\n}\n\nexport type UnmountFunction = (() => Promise<any>) | (() => any);\nexport type MountHandler = (\n\tphp: PHP,\n\tFS: Emscripten.RootFS,\n\tvfsMountPoint: string\n) => UnmountFunction | Promise<UnmountFunction>;\n\nexport const PHP_INI_PATH = '/internal/shared/php.ini';\nconst AUTO_PREPEND_SCRIPT = '/internal/shared/auto_prepend_file.php';\n\n/**\n * An environment-agnostic wrapper around the Emscripten PHP runtime\n * that universals the super low-level API and provides a more convenient\n * higher-level API.\n *\n * It exposes a minimal set of methods to run PHP scripts and to\n * interact with the PHP filesystem.\n */\nexport class PHP implements Disposable {\n\tprotected [__private__dont__use]: any;\n\t#sapiName?: string;\n\t#webSapiInitialized = false;\n\t#wasmErrorsTarget: UnhandledRejectionsTarget | null = null;\n\t#eventListeners: Map<string, Set<PHPEventListener>> = new Map();\n\t#messageListeners: MessageListener[] = [];\n\trequestHandler?: PHPRequestHandler;\n\n\t/**\n\t * An exclusive lock that prevent multiple requests from running at\n\t * the same time.\n\t */\n\tsemaphore: Semaphore;\n\n\t/**\n\t * Initializes a PHP runtime.\n\t *\n\t * @internal\n\t * @param  PHPRuntime - Optional. PHP Runtime ID as initialized by loadPHPRuntime.\n\t * @param  requestHandlerOptions - Optional. Options for the PHPRequestHandler. If undefined, no request handler will be initialized.\n\t */\n\tconstructor(PHPRuntimeId?: PHPRuntimeId) {\n\t\tthis.semaphore = new Semaphore({ concurrency: 1 });\n\t\tif (PHPRuntimeId !== undefined) {\n\t\t\tthis.initializeRuntime(PHPRuntimeId);\n\t\t}\n\t}\n\n\t/**\n\t * Adds an event listener for a PHP event.\n\t * @param eventType - The type of event to listen for.\n\t * @param listener - The listener function to be called when the event is triggered.\n\t */\n\taddEventListener(eventType: PHPEvent['type'], listener: PHPEventListener) {\n\t\tif (!this.#eventListeners.has(eventType)) {\n\t\t\tthis.#eventListeners.set(eventType, new Set());\n\t\t}\n\t\tthis.#eventListeners.get(eventType)!.add(listener);\n\t}\n\n\t/**\n\t * Removes an event listener for a PHP event.\n\t * @param eventType - The type of event to remove the listener from.\n\t * @param listener - The listener function to be removed.\n\t */\n\tremoveEventListener(\n\t\teventType: PHPEvent['type'],\n\t\tlistener: PHPEventListener\n\t) {\n\t\tthis.#eventListeners.get(eventType)?.delete(listener);\n\t}\n\n\tdispatchEvent<Event extends PHPEvent>(event: Event) {\n\t\tconst listeners = this.#eventListeners.get(event.type);\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const listener of listeners) {\n\t\t\tlistener(event);\n\t\t}\n\t}\n\n\t/**\n\t * Listens to message sent by the PHP code.\n\t *\n\t * To dispatch messages, call:\n\t *\n\t *     post_message_to_js(string $data)\n\t *\n\t *     Arguments:\n\t *         $data (string) – Data to pass to JavaScript.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const php = await PHP.load('8.0');\n\t *\n\t * php.onMessage(\n\t *     // The data is always passed as a string\n\t *     function (data: string) {\n\t *         // Let's decode and log the data:\n\t *         console.log(JSON.parse(data));\n\t *     }\n\t * );\n\t *\n\t * // Now that we have a listener in place, let's\n\t * // dispatch a message:\n\t * await php.run({\n\t *     code: `<?php\n\t *         post_message_to_js(\n\t *             json_encode([\n\t *                 'post_id' => '15',\n\t *                 'post_title' => 'This is a blog post!'\n\t *             ])\n\t *         ));\n\t *     `,\n\t * });\n\t * ```\n\t *\n\t * @param listener Callback function to handle the message.\n\t */\n\tonMessage(listener: MessageListener) {\n\t\tthis.#messageListeners.push(listener);\n\t\treturn async () => {\n\t\t\tthis.#messageListeners = this.#messageListeners.filter(\n\t\t\t\t(l) => l !== listener\n\t\t\t);\n\t\t};\n\t}\n\n\tasync setSpawnHandler(handler: SpawnHandler | string) {\n\t\tif (typeof handler === 'string') {\n\t\t\t// This workaround is needed because the\n\t\t\t// Comlink messaging library used by Playground\n\t\t\t// has a hard time serializing a composite\n\t\t\t// handler object.\n\t\t\t// @TODO: Don't eval text-based functions here. Instead\n\t\t\t//        use a MessagePort to communicate with the\n\t\t\t//\t\t  parent context.\n\t\t\t// Perhaps this library would be useful:\n\t\t\t// https://github.com/WebReflection/coincident/\n\t\t\thandler = createSpawnHandler(eval(handler));\n\t\t}\n\t\tthis[__private__dont__use].spawnProcess = handler;\n\t}\n\n\t/** @deprecated Use PHPRequestHandler instead. */\n\tget absoluteUrl() {\n\t\treturn this.requestHandler!.absoluteUrl;\n\t}\n\n\t/** @deprecated Use PHPRequestHandler instead. */\n\tget documentRoot() {\n\t\treturn this.requestHandler!.documentRoot;\n\t}\n\n\t/** @deprecated Use PHPRequestHandler instead. */\n\tpathToInternalUrl(path: string): string {\n\t\treturn this.requestHandler!.pathToInternalUrl(path);\n\t}\n\n\t/** @deprecated Use PHPRequestHandler instead. */\n\tinternalUrlToPath(internalUrl: string): string {\n\t\treturn this.requestHandler!.internalUrlToPath(internalUrl);\n\t}\n\n\tinitializeRuntime(runtimeId: PHPRuntimeId) {\n\t\tif (this[__private__dont__use]) {\n\t\t\tthrow new Error('PHP runtime already initialized.');\n\t\t}\n\t\tconst runtime = getLoadedRuntime(runtimeId);\n\t\tif (!runtime) {\n\t\t\tthrow new Error('Invalid PHP runtime id.');\n\t\t}\n\t\tthis[__private__dont__use] = runtime;\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_phpini_path',\n\t\t\tnull,\n\t\t\t['string'],\n\t\t\t[PHP_INI_PATH]\n\t\t);\n\n\t\tif (!this.fileExists(PHP_INI_PATH)) {\n\t\t\tthis.writeFile(\n\t\t\t\tPHP_INI_PATH,\n\t\t\t\t[\n\t\t\t\t\t'auto_prepend_file=' + AUTO_PREPEND_SCRIPT,\n\t\t\t\t\t'memory_limit=256M',\n\t\t\t\t\t'ignore_repeated_errors = 1',\n\t\t\t\t\t'error_reporting = E_ALL',\n\t\t\t\t\t'display_errors = 1',\n\t\t\t\t\t'html_errors = 1',\n\t\t\t\t\t'display_startup_errors = On',\n\t\t\t\t\t'log_errors = 1',\n\t\t\t\t\t'always_populate_raw_post_data = -1',\n\t\t\t\t\t'upload_max_filesize = 2000M',\n\t\t\t\t\t'post_max_size = 2000M',\n\t\t\t\t\t'allow_url_fopen = On',\n\t\t\t\t\t'allow_url_include = Off',\n\t\t\t\t\t'session.save_path = /home/web_user',\n\t\t\t\t\t'implicit_flush = 1',\n\t\t\t\t\t'output_buffering = 0',\n\t\t\t\t\t'max_execution_time = 0',\n\t\t\t\t\t'max_input_time = -1',\n\t\t\t\t].join('\\n')\n\t\t\t);\n\t\t}\n\t\tif (!this.fileExists(AUTO_PREPEND_SCRIPT)) {\n\t\t\tthis.writeFile(\n\t\t\t\tAUTO_PREPEND_SCRIPT,\n\t\t\t\t`<?php\n\t\t\t\t// Define constants set via defineConstant() calls\n\t\t\t\tif(file_exists('/internal/shared/consts.json')) {\n\t\t\t\t\t$consts = json_decode(file_get_contents('/internal/shared/consts.json'), true);\n\t\t\t\t\tforeach ($consts as $const => $value) {\n\t\t\t\t\t\tif (!defined($const) && is_scalar($value)) {\n\t\t\t\t\t\t\tdefine($const, $value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Preload all the files from /internal/shared/preload\n\t\t\t\tforeach (glob('/internal/shared/preload/*.php') as $file) {\n\t\t\t\t\trequire_once $file;\n\t\t\t\t}\n\t\t\t\t`\n\t\t\t);\n\t\t}\n\n\t\truntime['onMessage'] = async (\n\t\t\tdata: string\n\t\t): Promise<string | Uint8Array> => {\n\t\t\tfor (const listener of this.#messageListeners) {\n\t\t\t\tconst returnData = await listener(data);\n\n\t\t\t\tif (returnData) {\n\t\t\t\t\treturn returnData;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t};\n\n\t\tthis.#wasmErrorsTarget = improveWASMErrorReporting(runtime);\n\t\tthis.dispatchEvent({\n\t\t\ttype: 'runtime.initialized',\n\t\t});\n\t}\n\n\t/** @inheritDoc */\n\tasync setSapiName(newName: string) {\n\t\tconst result = this[__private__dont__use].ccall(\n\t\t\t'wasm_set_sapi_name',\n\t\t\tNUMBER,\n\t\t\t[STRING],\n\t\t\t[newName]\n\t\t);\n\t\tif (result !== 0) {\n\t\t\tthrow new Error(\n\t\t\t\t'Could not set SAPI name. This can only be done before the PHP WASM module is initialized.' +\n\t\t\t\t\t'Did you already dispatch any requests?'\n\t\t\t);\n\t\t}\n\t\tthis.#sapiName = newName;\n\t}\n\n\t/**\n\t * Changes the current working directory in the PHP filesystem.\n\t * This is the directory that will be used as the base for relative paths.\n\t * For example, if the current working directory is `/root/php`, and the\n\t * path is `data`, the absolute path will be `/root/php/data`.\n\t *\n\t * @param  path - The new working directory.\n\t */\n\tchdir(path: string) {\n\t\tthis[__private__dont__use].FS.chdir(path);\n\t}\n\n\t/**\n\t * Do not use. Use new PHPRequestHandler() instead.\n\t * @deprecated\n\t */\n\tasync request(request: PHPRequest): Promise<PHPResponse> {\n\t\tlogger.warn(\n\t\t\t'PHP.request() is deprecated. Please use new PHPRequestHandler() instead.'\n\t\t);\n\t\tif (!this.requestHandler) {\n\t\t\tthrow new Error('No request handler available.');\n\t\t}\n\t\treturn this.requestHandler.request(request);\n\t}\n\n\t/**\n\t * Runs PHP code.\n\t *\n\t * This low-level method directly interacts with the WebAssembly\n\t * PHP interpreter.\n\t *\n\t * Every time you call run(), it prepares the PHP\n\t * environment and:\n\t *\n\t * * Resets the internal PHP state\n\t * * Populates superglobals ($_SERVER, $_GET, etc.)\n\t * * Handles file uploads\n\t * * Populates input streams (stdin, argv, etc.)\n\t * * Sets the current working directory\n\t *\n\t * You can use run() in two primary modes:\n\t *\n\t * ### Code snippet mode\n\t *\n\t * In this mode, you pass a string containing PHP code to run.\n\t *\n\t * ```ts\n\t * const result = await php.run({\n\t * \tcode: `<?php echo \"Hello world!\";`\n\t * });\n\t * // result.text === \"Hello world!\"\n\t * ```\n\t *\n\t * In this mode, information like __DIR__ or __FILE__ isn't very\n\t * useful because the code is not associated with any file.\n\t *\n\t * Under the hood, the PHP snippet is passed to the `zend_eval_string`\n\t * C function.\n\t *\n\t * ### File mode\n\t *\n\t * In the file mode, you pass a scriptPath and PHP executes a file\n\t * found at a that path:\n\t *\n\t * ```ts\n\t * php.writeFile(\n\t * \t\"/www/index.php\",\n\t * \t`<?php echo \"Hello world!\";\"`\n\t * );\n\t * const result = await php.run({\n\t * \tscriptPath: \"/www/index.php\"\n\t * });\n\t * // result.text === \"Hello world!\"\n\t * ```\n\t *\n\t * In this mode, you can rely on path-related information like __DIR__\n\t * or __FILE__.\n\t *\n\t * Under the hood, the PHP file is executed with the `php_execute_script`\n\t * C function.\n\t *\n\t * The `run()` method cannot be used in conjunction with `cli()`.\n\t *\n\t * @example\n\t * ```js\n\t * const result = await php.run(`<?php\n\t *  $fp = fopen('php://stderr', 'w');\n\t *  fwrite($fp, \"Hello, world!\");\n\t * `);\n\t * // result.errors === \"Hello, world!\"\n\t * ```\n\t *\n\t * @param  options - PHP runtime options.\n\t */\n\tasync run(request: PHPRunOptions): Promise<PHPResponse> {\n\t\t/*\n\t\t * Prevent multiple requests from running at the same time.\n\t\t * For example, if a request is made to a PHP file that\n\t\t * requests another PHP file, the second request may\n\t\t * be dispatched before the first one is finished.\n\t\t */\n\t\tconst release = await this.semaphore.acquire();\n\t\tlet heapBodyPointer;\n\t\ttry {\n\t\t\tif (!this.#webSapiInitialized) {\n\t\t\t\tthis.#initWebRuntime();\n\t\t\t\tthis.#webSapiInitialized = true;\n\t\t\t}\n\t\t\tif (request.scriptPath && !this.fileExists(request.scriptPath)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`The script path \"${request.scriptPath}\" does not exist.`\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.#setRelativeRequestUri(request.relativeUri || '');\n\t\t\tthis.#setRequestMethod(request.method || 'GET');\n\t\t\tconst headers = normalizeHeaders(request.headers || {});\n\t\t\tconst host = headers['host'] || 'example.com:443';\n\n\t\t\tconst port = this.#inferPortFromHostAndProtocol(\n\t\t\t\thost,\n\t\t\t\trequest.protocol || 'http'\n\t\t\t);\n\t\t\tthis.#setRequestHost(host);\n\t\t\tthis.#setRequestPort(port);\n\t\t\tthis.#setRequestHeaders(headers);\n\t\t\tif (request.body) {\n\t\t\t\theapBodyPointer = this.#setRequestBody(request.body);\n\t\t\t}\n\t\t\tif (typeof request.code === 'string') {\n\t\t\t\tthis.writeFile('/internal/eval.php', request.code);\n\t\t\t\tthis.#setScriptPath('/internal/eval.php');\n\t\t\t} else if (typeof request.scriptPath === 'string') {\n\t\t\t\tthis.#setScriptPath(request.scriptPath || '');\n\t\t\t} else {\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t'The request object must have either a `code` or a ' +\n\t\t\t\t\t\t'`scriptPath` property.'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst $_SERVER = this.#prepareServerEntries(\n\t\t\t\trequest.$_SERVER,\n\t\t\t\theaders,\n\t\t\t\tport\n\t\t\t);\n\t\t\tfor (const key in $_SERVER) {\n\t\t\t\tthis.#setServerGlobalEntry(key, $_SERVER[key]);\n\t\t\t}\n\n\t\t\tconst env = request.env || {};\n\t\t\tfor (const key in env) {\n\t\t\t\tthis.#setEnv(key, env[key]);\n\t\t\t}\n\n\t\t\tconst response = await this.#handleRequest();\n\t\t\tif (response.exitCode !== 0) {\n\t\t\t\tlogger.warn(`PHP.run() output was:`, response.text);\n\t\t\t\tconst error = new PHPExecutionFailureError(\n\t\t\t\t\t`PHP.run() failed with exit code ${response.exitCode} and the following output: ` +\n\t\t\t\t\t\tresponse.errors,\n\t\t\t\t\tresponse,\n\t\t\t\t\t'request'\n\t\t\t\t) as PHPExecutionFailureError;\n\t\t\t\tlogger.error(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\treturn response;\n\t\t} catch (e) {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'request.error',\n\t\t\t\terror: e as Error,\n\t\t\t\t// Distinguish between PHP request and PHP-wasm errors\n\t\t\t\tsource: (e as any).source ?? 'php-wasm',\n\t\t\t});\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (heapBodyPointer) {\n\t\t\t\t\tthis[__private__dont__use].free(heapBodyPointer);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\trelease();\n\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\ttype: 'request.end',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the $_SERVER entries for the PHP runtime.\n\t *\n\t * @param defaults Default entries to include in $_SERVER.\n\t * @param headers HTTP headers to include in $_SERVER (as HTTP_ prefixed entries).\n\t * @param port HTTP port, used to determine infer $_SERVER['HTTPS'] value if none\n\t *             was provided.\n\t * @returns Computed $_SERVER entries.\n\t */\n\t#prepareServerEntries(\n\t\tdefaults: Record<string, string> | undefined,\n\t\theaders: PHPRequestHeaders,\n\t\tport: number\n\t): Record<string, string> {\n\t\tconst $_SERVER = {\n\t\t\t...(defaults || {}),\n\t\t};\n\t\t$_SERVER['HTTPS'] = $_SERVER['HTTPS'] || port === 443 ? 'on' : 'off';\n\t\tfor (const name in headers) {\n\t\t\tlet HTTP_prefix = 'HTTP_';\n\t\t\t/**\n\t\t\t * Some headers are special and don't have the HTTP_ prefix.\n\t\t\t */\n\t\t\tif (\n\t\t\t\t['content-type', 'content-length'].includes(name.toLowerCase())\n\t\t\t) {\n\t\t\t\tHTTP_prefix = '';\n\t\t\t}\n\t\t\t$_SERVER[`${HTTP_prefix}${name.toUpperCase().replace(/-/g, '_')}`] =\n\t\t\t\theaders[name];\n\t\t}\n\t\treturn $_SERVER;\n\t}\n\n\t#initWebRuntime() {\n\t\tthis[__private__dont__use].ccall('php_wasm_init', null, [], []);\n\t}\n\n\t#getResponseHeaders(): {\n\t\theaders: PHPResponse['headers'];\n\t\thttpStatusCode: number;\n\t} {\n\t\tconst headersFilePath = '/internal/headers.json';\n\t\tif (!this.fileExists(headersFilePath)) {\n\t\t\tthrow new Error(\n\t\t\t\t'SAPI Error: Could not find response headers file.'\n\t\t\t);\n\t\t}\n\n\t\tconst headersData = JSON.parse(this.readFileAsText(headersFilePath));\n\t\tconst headers: PHPResponse['headers'] = {};\n\t\tfor (const line of headersData.headers) {\n\t\t\tif (!line.includes(': ')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst colonIndex = line.indexOf(': ');\n\t\t\tconst headerName = line.substring(0, colonIndex).toLowerCase();\n\t\t\tconst headerValue = line.substring(colonIndex + 2);\n\t\t\tif (!(headerName in headers)) {\n\t\t\t\theaders[headerName] = [] as string[];\n\t\t\t}\n\t\t\theaders[headerName].push(headerValue);\n\t\t}\n\t\treturn {\n\t\t\theaders,\n\t\t\thttpStatusCode: headersData.status,\n\t\t};\n\t}\n\n\t#setRelativeRequestUri(uri: string) {\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_request_uri',\n\t\t\tnull,\n\t\t\t[STRING],\n\t\t\t[uri]\n\t\t);\n\t\tif (uri.includes('?')) {\n\t\t\tconst queryString = uri.substring(uri.indexOf('?') + 1);\n\t\t\tthis[__private__dont__use].ccall(\n\t\t\t\t'wasm_set_query_string',\n\t\t\t\tnull,\n\t\t\t\t[STRING],\n\t\t\t\t[queryString]\n\t\t\t);\n\t\t}\n\t}\n\n\t#setRequestHost(host: string) {\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_request_host',\n\t\t\tnull,\n\t\t\t[STRING],\n\t\t\t[host]\n\t\t);\n\t}\n\n\t#setRequestPort(port: number) {\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_request_port',\n\t\t\tnull,\n\t\t\t[NUMBER],\n\t\t\t[port]\n\t\t);\n\t}\n\n\t#inferPortFromHostAndProtocol(host: string, protocol: string) {\n\t\tlet port;\n\t\ttry {\n\t\t\tport = parseInt(new URL(host).port, 10);\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\n\t\tif (!port || isNaN(port) || port === 80) {\n\t\t\tport = protocol === 'https' ? 443 : 80;\n\t\t}\n\t\treturn port;\n\t}\n\n\t#setRequestMethod(method: string) {\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_request_method',\n\t\t\tnull,\n\t\t\t[STRING],\n\t\t\t[method]\n\t\t);\n\t}\n\n\t#setRequestHeaders(headers: PHPRequestHeaders) {\n\t\tif (headers['cookie']) {\n\t\t\tthis[__private__dont__use].ccall(\n\t\t\t\t'wasm_set_cookies',\n\t\t\t\tnull,\n\t\t\t\t[STRING],\n\t\t\t\t[headers['cookie']]\n\t\t\t);\n\t\t}\n\t\tif (headers['content-type']) {\n\t\t\tthis[__private__dont__use].ccall(\n\t\t\t\t'wasm_set_content_type',\n\t\t\t\tnull,\n\t\t\t\t[STRING],\n\t\t\t\t[headers['content-type']]\n\t\t\t);\n\t\t}\n\t\tif (headers['content-length']) {\n\t\t\tthis[__private__dont__use].ccall(\n\t\t\t\t'wasm_set_content_length',\n\t\t\t\tnull,\n\t\t\t\t[NUMBER],\n\t\t\t\t[parseInt(headers['content-length'], 10)]\n\t\t\t);\n\t\t}\n\t}\n\n\t#setRequestBody(body: string | Uint8Array) {\n\t\tlet size, contentLength;\n\t\tif (typeof body === 'string') {\n\t\t\tlogger.warn(\n\t\t\t\t'Passing a string as the request body is deprecated. Please use a Uint8Array instead. See ' +\n\t\t\t\t\t'https://github.com/WordPress/wordpress-playground/issues/997 for more details'\n\t\t\t);\n\t\t\tcontentLength = this[__private__dont__use].lengthBytesUTF8(body);\n\t\t\tsize = contentLength + 1;\n\t\t} else {\n\t\t\tcontentLength = body.byteLength;\n\t\t\tsize = body.byteLength;\n\t\t}\n\n\t\tconst heapBodyPointer = this[__private__dont__use].malloc(size);\n\t\tif (!heapBodyPointer) {\n\t\t\tthrow new Error('Could not allocate memory for the request body.');\n\t\t}\n\n\t\t// Write the string to the WASM memory\n\t\tif (typeof body === 'string') {\n\t\t\tthis[__private__dont__use].stringToUTF8(\n\t\t\t\tbody,\n\t\t\t\theapBodyPointer,\n\t\t\t\tsize + 1\n\t\t\t);\n\t\t} else {\n\t\t\tthis[__private__dont__use].HEAPU8.set(body, heapBodyPointer);\n\t\t}\n\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_request_body',\n\t\t\tnull,\n\t\t\t[NUMBER],\n\t\t\t[heapBodyPointer]\n\t\t);\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_content_length',\n\t\t\tnull,\n\t\t\t[NUMBER],\n\t\t\t[contentLength]\n\t\t);\n\t\treturn heapBodyPointer;\n\t}\n\n\t#setScriptPath(path: string) {\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_path_translated',\n\t\t\tnull,\n\t\t\t[STRING],\n\t\t\t[path]\n\t\t);\n\t}\n\n\t#setServerGlobalEntry(key: string, value: string) {\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_add_SERVER_entry',\n\t\t\tnull,\n\t\t\t[STRING, STRING],\n\t\t\t[key, value]\n\t\t);\n\t}\n\n\t#setEnv(name: string, value: string) {\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_add_ENV_entry',\n\t\t\tnull,\n\t\t\t[STRING, STRING],\n\t\t\t[name, value]\n\t\t);\n\t}\n\n\t/**\n\t * Defines a constant in the PHP runtime.\n\t * @param key - The name of the constant.\n\t * @param value - The value of the constant.\n\t */\n\tdefineConstant(key: string, value: string | boolean | number | null) {\n\t\tlet consts = {};\n\t\ttry {\n\t\t\tconsts = JSON.parse(\n\t\t\t\tthis.fileExists('/internal/shared/consts.json')\n\t\t\t\t\t? this.readFileAsText('/internal/shared/consts.json') ||\n\t\t\t\t\t\t\t'{}'\n\t\t\t\t\t: '{}'\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tthis.writeFile(\n\t\t\t'/internal/shared/consts.json',\n\t\t\tJSON.stringify({\n\t\t\t\t...consts,\n\t\t\t\t[key]: value,\n\t\t\t})\n\t\t);\n\t}\n\n\tasync #handleRequest(): Promise<PHPResponse> {\n\t\tlet exitCode: number;\n\n\t\t/*\n\t\t * Emscripten throws WASM failures outside of the promise chain so we need\n\t\t * to listen for them here and rethrow in the correct context. Otherwise we\n\t\t * get crashes and unhandled promise rejections without any useful error\n\t\t * messages or stack traces.\n\t\t */\n\t\tlet errorListener: any;\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-async-promise-executor\n\t\t\texitCode = await new Promise<number>((resolve, reject) => {\n\t\t\t\terrorListener = (e: ErrorEvent) => {\n\t\t\t\t\tlogger.error(e);\n\t\t\t\t\tlogger.error(e.error);\n\t\t\t\t\tconst rethrown = new Error('Rethrown');\n\t\t\t\t\trethrown.cause = e.error;\n\t\t\t\t\t(rethrown as any).betterMessage = e.message;\n\t\t\t\t\treject(rethrown);\n\t\t\t\t};\n\t\t\t\tthis.#wasmErrorsTarget?.addEventListener(\n\t\t\t\t\t'error',\n\t\t\t\t\terrorListener\n\t\t\t\t);\n\t\t\t\tconst response = this[__private__dont__use].ccall(\n\t\t\t\t\t'wasm_sapi_handle_request',\n\t\t\t\t\tNUMBER,\n\t\t\t\t\t[],\n\t\t\t\t\t[],\n\t\t\t\t\t{ async: true }\n\t\t\t\t);\n\t\t\t\tif (response instanceof Promise) {\n\t\t\t\t\treturn response.then(resolve, reject);\n\t\t\t\t}\n\t\t\t\treturn resolve(response);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\t/**\n\t\t\t * An exception here means an irrecoverable crash. Let's make\n\t\t\t * it very clear to the consumers of this API – every method\n\t\t\t * call on this PHP instance will throw an error from now on.\n\t\t\t */\n\t\t\tfor (const name in this) {\n\t\t\t\tif (typeof this[name] === 'function') {\n\t\t\t\t\t(this as any)[name] = () => {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`PHP runtime has crashed – see the earlier error for details.`\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\t(this as any).functionsMaybeMissingFromAsyncify =\n\t\t\t\tgetFunctionsMaybeMissingFromAsyncify();\n\n\t\t\tconst err = e as Error;\n\t\t\tconst message = (\n\t\t\t\t'betterMessage' in err ? err.betterMessage : err.message\n\t\t\t) as string;\n\t\t\tconst rethrown = new Error(message);\n\t\t\trethrown.cause = err;\n\t\t\tlogger.error(rethrown);\n\t\t\tthrow rethrown;\n\t\t} finally {\n\t\t\tthis.#wasmErrorsTarget?.removeEventListener('error', errorListener);\n\t\t}\n\n\t\tconst { headers, httpStatusCode } = this.#getResponseHeaders();\n\t\treturn new PHPResponse(\n\t\t\texitCode === 0 ? httpStatusCode : 500,\n\t\t\theaders,\n\t\t\tthis.readFileAsBuffer('/internal/stdout'),\n\t\t\tthis.readFileAsText('/internal/stderr'),\n\t\t\texitCode\n\t\t);\n\t}\n\n\t/**\n\t * Recursively creates a directory with the given path in the PHP filesystem.\n\t * For example, if the path is `/root/php/data`, and `/root` already exists,\n\t * it will create the directories `/root/php` and `/root/php/data`.\n\t *\n\t * @param  path - The directory path to create.\n\t */\n\tmkdir(path: string) {\n\t\treturn FSHelpers.mkdir(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * @deprecated Use mkdir instead.\n\t */\n\tmkdirTree(path: string) {\n\t\treturn FSHelpers.mkdir(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Reads a file from the PHP filesystem and returns it as a string.\n\t *\n\t * @throws {@link @php-wasm/universal:ErrnoError} – If the file doesn't exist.\n\t * @param  path - The file path to read.\n\t * @returns The file contents.\n\t */\n\treadFileAsText(path: string) {\n\t\treturn FSHelpers.readFileAsText(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Reads a file from the PHP filesystem and returns it as an array buffer.\n\t *\n\t * @throws {@link @php-wasm/universal:ErrnoError} – If the file doesn't exist.\n\t * @param  path - The file path to read.\n\t * @returns The file contents.\n\t */\n\treadFileAsBuffer(path: string): Uint8Array {\n\t\treturn FSHelpers.readFileAsBuffer(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Overwrites data in a file in the PHP filesystem.\n\t * Creates a new file if one doesn't exist yet.\n\t *\n\t * @param  path - The file path to write to.\n\t * @param  data - The data to write to the file.\n\t */\n\twriteFile(path: string, data: string | Uint8Array) {\n\t\treturn FSHelpers.writeFile(this[__private__dont__use].FS, path, data);\n\t}\n\n\t/**\n\t * Removes a file from the PHP filesystem.\n\t *\n\t * @throws {@link @php-wasm/universal:ErrnoError} – If the file doesn't exist.\n\t * @param  path - The file path to remove.\n\t */\n\tunlink(path: string) {\n\t\treturn FSHelpers.unlink(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Moves a file or directory in the PHP filesystem to a\n\t * new location.\n\t *\n\t * @param oldPath The path to rename.\n\t * @param newPath The new path.\n\t */\n\tmv(fromPath: string, toPath: string) {\n\t\treturn FSHelpers.mv(this[__private__dont__use].FS, fromPath, toPath);\n\t}\n\n\t/**\n\t * Removes a directory from the PHP filesystem.\n\t *\n\t * @param path The directory path to remove.\n\t * @param options Options for the removal.\n\t */\n\trmdir(path: string, options: RmDirOptions = { recursive: true }) {\n\t\treturn FSHelpers.rmdir(this[__private__dont__use].FS, path, options);\n\t}\n\n\t/**\n\t * Lists the files and directories in the given directory.\n\t *\n\t * @param  path - The directory path to list.\n\t * @param  options - Options for the listing.\n\t * @returns The list of files and directories in the given directory.\n\t */\n\tlistFiles(\n\t\tpath: string,\n\t\toptions: ListFilesOptions = { prependPath: false }\n\t) {\n\t\treturn FSHelpers.listFiles(\n\t\t\tthis[__private__dont__use].FS,\n\t\t\tpath,\n\t\t\toptions\n\t\t);\n\t}\n\n\t/**\n\t * Checks if a directory exists in the PHP filesystem.\n\t *\n\t * @param  path – The path to check.\n\t * @returns True if the path is a directory, false otherwise.\n\t */\n\tisDir(path: string) {\n\t\treturn FSHelpers.isDir(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Checks if a file exists in the PHP filesystem.\n\t *\n\t * @param  path – The path to check.\n\t * @returns True if the path is a file, false otherwise.\n\t */\n\tisFile(path: string) {\n\t\treturn FSHelpers.isFile(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Creates a symlink in the PHP filesystem.\n\t * @param target\n\t * @param path\n\t */\n\tsymlink(target: string, path: string) {\n\t\treturn FSHelpers.symlink(this[__private__dont__use].FS, target, path);\n\t}\n\n\t/**\n\t * Checks if a path is a symlink in the PHP filesystem.\n\t *\n\t * @param path\n\t * @returns True if the path is a symlink, false otherwise.\n\t */\n\tisSymlink(path: string) {\n\t\treturn FSHelpers.isSymlink(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Reads the target of a symlink in the PHP filesystem.\n\t *\n\t * @param path\n\t * @returns The target of the symlink.\n\t */\n\treadlink(path: string) {\n\t\treturn FSHelpers.readlink(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Resolves the real path of a file in the PHP filesystem.\n\t * @param path\n\t * @returns The real path of the file.\n\t */\n\trealpath(path: string) {\n\t\treturn FSHelpers.realpath(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Checks if a file (or a directory) exists in the PHP filesystem.\n\t *\n\t * @param  path - The file path to check.\n\t * @returns True if the file exists, false otherwise.\n\t */\n\tfileExists(path: string) {\n\t\treturn FSHelpers.fileExists(this[__private__dont__use].FS, path);\n\t}\n\n\t/**\n\t * Hot-swaps the PHP runtime for a new one without\n\t * interrupting the operations of this PHP instance.\n\t *\n\t * @param runtime\n\t * @param cwd. Internal, the VFS path to recreate in the new runtime.\n\t *             This arg is temporary and will be removed once BasePHP\n\t *             is fully decoupled from the request handler and\n\t *             accepts a constructor-level cwd argument.\n\t */\n\thotSwapPHPRuntime(runtime: number, cwd?: string) {\n\t\t// Once we secure the lock and have the new runtime ready,\n\t\t// the rest of the swap handler is synchronous to make sure\n\t\t// no other operations acts on the old runtime or FS.\n\t\t// If there was await anywhere here, we'd risk applyng\n\t\t// asynchronous changes to either the filesystem or the\n\t\t// old PHP runtime without propagating them to the new\n\t\t// runtime.\n\t\tconst oldFS = this[__private__dont__use].FS;\n\n\t\t// Kill the current runtime\n\t\ttry {\n\t\t\tthis.exit();\n\t\t} catch (e) {\n\t\t\t// Ignore the exit-related exception\n\t\t}\n\n\t\t// Initialize the new runtime\n\t\tthis.initializeRuntime(runtime);\n\n\t\tif (this.#sapiName) {\n\t\t\tthis.setSapiName(this.#sapiName);\n\t\t}\n\n\t\t// Copy the MEMFS directory structure from the old FS to the new one\n\t\tif (cwd) {\n\t\t\tcopyFS(oldFS, this[__private__dont__use].FS, cwd);\n\t\t}\n\t}\n\n\t/**\n\t * Mounts a filesystem to a given path in the PHP filesystem.\n\t *\n\t * @param  virtualFSPath - Where to mount it in the PHP virtual filesystem.\n\t * @param  mountHandler - The mount handler to use.\n\t * @return Unmount function to unmount the filesystem.\n\t */\n\tasync mount(\n\t\tvirtualFSPath: string,\n\t\tmountHandler: MountHandler\n\t): Promise<UnmountFunction> {\n\t\treturn await mountHandler(\n\t\t\tthis,\n\t\t\tthis[__private__dont__use].FS,\n\t\t\tvirtualFSPath\n\t\t);\n\t}\n\n\t/**\n\t * Starts a PHP CLI session with given arguments.\n\t *\n\t * This method can only be used when PHP was compiled with the CLI SAPI\n\t * and it cannot be used in conjunction with `run()`.\n\t *\n\t * Once this method finishes running, the PHP instance is no\n\t * longer usable and should be discarded. This is because PHP\n\t * internally cleans up all the resources and calls exit().\n\t *\n\t * @param  argv - The arguments to pass to the CLI.\n\t * @returns The exit code of the CLI session.\n\t */\n\tasync cli(argv: string[]): Promise<number> {\n\t\tfor (const arg of argv) {\n\t\t\tthis[__private__dont__use].ccall(\n\t\t\t\t'wasm_add_cli_arg',\n\t\t\t\tnull,\n\t\t\t\t[STRING],\n\t\t\t\t[arg]\n\t\t\t);\n\t\t}\n\t\ttry {\n\t\t\treturn await this[__private__dont__use].ccall(\n\t\t\t\t'run_cli',\n\t\t\t\tnull,\n\t\t\t\t[],\n\t\t\t\t[],\n\t\t\t\t{\n\t\t\t\t\tasync: true,\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tif (isExitCodeZero(error)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tsetSkipShebang(shouldSkip: boolean) {\n\t\tthis[__private__dont__use].ccall(\n\t\t\t'wasm_set_skip_shebang',\n\t\t\tnull,\n\t\t\t[NUMBER],\n\t\t\t[shouldSkip ? 1 : 0]\n\t\t);\n\t}\n\n\texit(code = 0) {\n\t\tthis.dispatchEvent({\n\t\t\ttype: 'runtime.beforedestroy',\n\t\t});\n\t\ttry {\n\t\t\tthis[__private__dont__use]._exit(code);\n\t\t} catch (e) {\n\t\t\t// ignore the exit error\n\t\t}\n\n\t\t// Clean up any initialized state\n\t\tthis.#webSapiInitialized = false;\n\n\t\t// Delete any links between this PHP instance and the runtime\n\t\tthis.#wasmErrorsTarget = null;\n\t\tdelete this[__private__dont__use]['onMessage'];\n\t\tdelete this[__private__dont__use];\n\t}\n\n\t[Symbol.dispose]() {\n\t\tif (this.#webSapiInitialized) {\n\t\t\tthis.exit(0);\n\t\t}\n\t}\n}\n\nexport function normalizeHeaders(\n\theaders: PHPRequestHeaders\n): PHPRequestHeaders {\n\tconst normalized: PHPRequestHeaders = {};\n\tfor (const key in headers) {\n\t\tnormalized[key.toLowerCase()] = headers[key];\n\t}\n\treturn normalized;\n}\n\n/**\n * Copies the MEMFS directory structure from one FS in another FS.\n * Non-MEMFS nodes are ignored.\n */\nfunction copyFS(\n\tsource: Emscripten.FileSystemInstance,\n\ttarget: Emscripten.FileSystemInstance,\n\tpath: string\n) {\n\tlet oldNode;\n\ttry {\n\t\toldNode = source.lookupPath(path);\n\t} catch (e) {\n\t\treturn;\n\t}\n\t// MEMFS nodes have a `contents` property. NODEFS nodes don't.\n\t// We only want to copy MEMFS nodes here.\n\tif (!('contents' in oldNode.node)) {\n\t\treturn;\n\t}\n\n\t// Let's be extra careful and only proceed if newFs doesn't\n\t// already have a node at the given path.\n\ttry {\n\t\t// @TODO: Figure out the right thing to do. In Parent -> child PHP case,\n\t\t//        we indeed want to synchronize the entire filesystem. However,\n\t\t//        this approach seems slow and inefficient. Instead of exhaustively\n\t\t//        iterating, could we just mark directories as dirty on write? And\n\t\t//        how do we sync in both directions?\n\t\t// target = target.lookupPath(path);\n\t\t// return;\n\t} catch (e) {\n\t\t// There's no such node in the new FS. Good,\n\t\t// we may proceed.\n\t}\n\n\tif (!source.isDir(oldNode.node.mode)) {\n\t\ttarget.writeFile(path, source.readFile(path));\n\t\treturn;\n\t}\n\n\ttarget.mkdirTree(path);\n\tconst filenames = source\n\t\t.readdir(path)\n\t\t.filter((name: string) => name !== '.' && name !== '..');\n\tfor (const filename of filenames) {\n\t\tcopyFS(source, target, joinPaths(path, filename));\n\t}\n}\n","const { hasOwnProperty } = Object.prototype\n\nconst encode = (obj, opt = {}) => {\n  if (typeof opt === 'string') {\n    opt = { section: opt }\n  }\n  opt.align = opt.align === true\n  opt.newline = opt.newline === true\n  opt.sort = opt.sort === true\n  opt.whitespace = opt.whitespace === true || opt.align === true\n  // The `typeof` check is required because accessing the `process` directly fails on browsers.\n  /* istanbul ignore next */\n  opt.platform = opt.platform || (typeof process !== 'undefined' && process.platform)\n  opt.bracketedArray = opt.bracketedArray !== false\n\n  /* istanbul ignore next */\n  const eol = opt.platform === 'win32' ? '\\r\\n' : '\\n'\n  const separator = opt.whitespace ? ' = ' : '='\n  const children = []\n\n  const keys = opt.sort ? Object.keys(obj).sort() : Object.keys(obj)\n\n  let padToChars = 0\n  // If aligning on the separator, then padToChars is determined as follows:\n  // 1. Get the keys\n  // 2. Exclude keys pointing to objects unless the value is null or an array\n  // 3. Add `[]` to array keys\n  // 4. Ensure non empty set of keys\n  // 5. Reduce the set to the longest `safe` key\n  // 6. Get the `safe` length\n  if (opt.align) {\n    padToChars = safe(\n      (\n        keys\n          .filter(k => obj[k] === null || Array.isArray(obj[k]) || typeof obj[k] !== 'object')\n          .map(k => Array.isArray(obj[k]) ? `${k}[]` : k)\n      )\n        .concat([''])\n        .reduce((a, b) => safe(a).length >= safe(b).length ? a : b)\n    ).length\n  }\n\n  let out = ''\n  const arraySuffix = opt.bracketedArray ? '[]' : ''\n\n  for (const k of keys) {\n    const val = obj[k]\n    if (val && Array.isArray(val)) {\n      for (const item of val) {\n        out += safe(`${k}${arraySuffix}`).padEnd(padToChars, ' ') + separator + safe(item) + eol\n      }\n    } else if (val && typeof val === 'object') {\n      children.push(k)\n    } else {\n      out += safe(k).padEnd(padToChars, ' ') + separator + safe(val) + eol\n    }\n  }\n\n  if (opt.section && out.length) {\n    out = '[' + safe(opt.section) + ']' + (opt.newline ? eol + eol : eol) + out\n  }\n\n  for (const k of children) {\n    const nk = splitSections(k, '.').join('\\\\.')\n    const section = (opt.section ? opt.section + '.' : '') + nk\n    const child = encode(obj[k], {\n      ...opt,\n      section,\n    })\n    if (out.length && child.length) {\n      out += eol\n    }\n\n    out += child\n  }\n\n  return out\n}\n\nfunction splitSections (str, separator) {\n  var lastMatchIndex = 0\n  var lastSeparatorIndex = 0\n  var nextIndex = 0\n  var sections = []\n\n  do {\n    nextIndex = str.indexOf(separator, lastMatchIndex)\n\n    if (nextIndex !== -1) {\n      lastMatchIndex = nextIndex + separator.length\n\n      if (nextIndex > 0 && str[nextIndex - 1] === '\\\\') {\n        continue\n      }\n\n      sections.push(str.slice(lastSeparatorIndex, nextIndex))\n      lastSeparatorIndex = nextIndex + separator.length\n    }\n  } while (nextIndex !== -1)\n\n  sections.push(str.slice(lastSeparatorIndex))\n\n  return sections\n}\n\nconst decode = (str, opt = {}) => {\n  opt.bracketedArray = opt.bracketedArray !== false\n  const out = Object.create(null)\n  let p = out\n  let section = null\n  //          section          |key      = value\n  const re = /^\\[([^\\]]*)\\]\\s*$|^([^=]+)(=(.*))?$/i\n  const lines = str.split(/[\\r\\n]+/g)\n  const duplicates = {}\n\n  for (const line of lines) {\n    if (!line || line.match(/^\\s*[;#]/) || line.match(/^\\s*$/)) {\n      continue\n    }\n    const match = line.match(re)\n    if (!match) {\n      continue\n    }\n    if (match[1] !== undefined) {\n      section = unsafe(match[1])\n      if (section === '__proto__') {\n        // not allowed\n        // keep parsing the section, but don't attach it.\n        p = Object.create(null)\n        continue\n      }\n      p = out[section] = out[section] || Object.create(null)\n      continue\n    }\n    const keyRaw = unsafe(match[2])\n    let isArray\n    if (opt.bracketedArray) {\n      isArray = keyRaw.length > 2 && keyRaw.slice(-2) === '[]'\n    } else {\n      duplicates[keyRaw] = (duplicates?.[keyRaw] || 0) + 1\n      isArray = duplicates[keyRaw] > 1\n    }\n    const key = isArray ? keyRaw.slice(0, -2) : keyRaw\n    if (key === '__proto__') {\n      continue\n    }\n    const valueRaw = match[3] ? unsafe(match[4]) : true\n    const value = valueRaw === 'true' ||\n      valueRaw === 'false' ||\n      valueRaw === 'null' ? JSON.parse(valueRaw)\n      : valueRaw\n\n    // Convert keys with '[]' suffix to an array\n    if (isArray) {\n      if (!hasOwnProperty.call(p, key)) {\n        p[key] = []\n      } else if (!Array.isArray(p[key])) {\n        p[key] = [p[key]]\n      }\n    }\n\n    // safeguard against resetting a previously defined\n    // array by accidentally forgetting the brackets\n    if (Array.isArray(p[key])) {\n      p[key].push(value)\n    } else {\n      p[key] = value\n    }\n  }\n\n  // {a:{y:1},\"a.b\":{x:2}} --> {a:{y:1,b:{x:2}}}\n  // use a filter to return the keys that have to be deleted.\n  const remove = []\n  for (const k of Object.keys(out)) {\n    if (!hasOwnProperty.call(out, k) ||\n      typeof out[k] !== 'object' ||\n      Array.isArray(out[k])) {\n      continue\n    }\n\n    // see if the parent section is also an object.\n    // if so, add it to that, and mark this one for deletion\n    const parts = splitSections(k, '.')\n    p = out\n    const l = parts.pop()\n    const nl = l.replace(/\\\\\\./g, '.')\n    for (const part of parts) {\n      if (part === '__proto__') {\n        continue\n      }\n      if (!hasOwnProperty.call(p, part) || typeof p[part] !== 'object') {\n        p[part] = Object.create(null)\n      }\n      p = p[part]\n    }\n    if (p === out && nl === l) {\n      continue\n    }\n\n    p[nl] = out[k]\n    remove.push(k)\n  }\n  for (const del of remove) {\n    delete out[del]\n  }\n\n  return out\n}\n\nconst isQuoted = val => {\n  return (val.startsWith('\"') && val.endsWith('\"')) ||\n    (val.startsWith(\"'\") && val.endsWith(\"'\"))\n}\n\nconst safe = val => {\n  if (\n    typeof val !== 'string' ||\n    val.match(/[=\\r\\n]/) ||\n    val.match(/^\\[/) ||\n    (val.length > 1 && isQuoted(val)) ||\n    val !== val.trim()\n  ) {\n    return JSON.stringify(val)\n  }\n  return val.split(';').join('\\\\;').split('#').join('\\\\#')\n}\n\nconst unsafe = val => {\n  val = (val || '').trim()\n  if (isQuoted(val)) {\n    // remove the single quotes before calling JSON.parse\n    if (val.charAt(0) === \"'\") {\n      val = val.slice(1, -1)\n    }\n    try {\n      val = JSON.parse(val)\n    } catch {\n      // ignore errors\n    }\n  } else {\n    // walk the val to find the first not-escaped ; character\n    let esc = false\n    let unesc = ''\n    for (let i = 0, l = val.length; i < l; i++) {\n      const c = val.charAt(i)\n      if (esc) {\n        if ('\\\\;#'.indexOf(c) !== -1) {\n          unesc += c\n        } else {\n          unesc += '\\\\' + c\n        }\n\n        esc = false\n      } else if (';#'.indexOf(c) !== -1) {\n        break\n      } else if (c === '\\\\') {\n        esc = true\n      } else {\n        unesc += c\n      }\n    }\n    if (esc) {\n      unesc += '\\\\'\n    }\n\n    return unesc.trim()\n  }\n  return val\n}\n\nmodule.exports = {\n  parse: decode,\n  decode,\n  stringify: encode,\n  encode,\n  safe,\n  unsafe,\n}\n","import { PHP_INI_PATH } from './php';\nimport { UniversalPHP } from './universal-php';\nimport { stringify, parse } from 'ini';\n\n/**\n * Reads the php.ini file and returns its entries.\n *\n * @param php The PHP instance.\n * @param entries Optional. If provided, only the specified entries will be returned.\n * @returns The php.ini entries.\n */\nexport async function getPhpIniEntries(php: UniversalPHP, entries?: string[]) {\n\tconst ini = parse(await php.readFileAsText(PHP_INI_PATH));\n\tif (entries === undefined) {\n\t\treturn ini;\n\t}\n\tconst result: Record<string, unknown> = {};\n\tfor (const key of entries) {\n\t\tresult[key] = ini[key];\n\t}\n\treturn result;\n}\n\n/**\n * Rewrites the php.ini file with the given entries.\n *\n * @param php The PHP instance.\n * @param entries The entries to write to the php.ini file.\n */\nexport async function setPhpIniEntries(\n\tphp: UniversalPHP,\n\tentries: Record<string, unknown>\n) {\n\tconst ini = parse(await php.readFileAsText(PHP_INI_PATH));\n\tfor (const [key, value] of Object.entries(entries)) {\n\t\tif (value === undefined || value === null) {\n\t\t\tdelete ini[key];\n\t\t} else {\n\t\t\tini[key] = value;\n\t\t}\n\t}\n\tawait php.writeFile(PHP_INI_PATH, stringify(ini));\n}\n\n/**\n * Sets php.ini values to the given values, executes a callback,\n * and restores the original php.ini values. This is useful for\n * running code with temporary php.ini values, such as when\n * disabling network-related PHP functions just to run WordPress\n * installer.\n *\n * @example\n * ```ts\n *\tawait withPHPIniValues(\n *\t\tphp,\n *\t\t{\n *\t\t\tdisable_functions: 'fsockopen',\n *\t\t\tallow_url_fopen: '0',\n *\t\t},\n *\t\tasync () => await runWpInstallationWizard(php, {\n *\t\t\toptions: {},\n *\t\t})\n *\t);\n *\t```\n *\n * @param php The PHP instance.\n * @param phpIniValues The php.ini values to set.\n * @param callback The callback to execute.\n * @returns The result of the callback.\n */\nexport async function withPHPIniValues(\n\tphp: UniversalPHP,\n\tphpIniValues: Record<string, string>,\n\tcallback: () => Promise<any>\n) {\n\tconst iniBefore = await php.readFileAsText(PHP_INI_PATH);\n\ttry {\n\t\tawait setPhpIniEntries(php, phpIniValues);\n\t\treturn await callback();\n\t} finally {\n\t\tawait php.writeFile(PHP_INI_PATH, iniBefore);\n\t}\n}\n","import { logger } from '@php-wasm/logger';\n\n/**\n * @public\n */\nexport class HttpCookieStore {\n\tcookies: Record<string, string> = {};\n\n\trememberCookiesFromResponseHeaders(headers: Record<string, string[]>) {\n\t\tif (!headers?.['set-cookie']) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const setCookie of headers['set-cookie']) {\n\t\t\ttry {\n\t\t\t\tif (!setCookie.includes('=')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst equalsIndex = setCookie.indexOf('=');\n\t\t\t\tconst name = setCookie.substring(0, equalsIndex);\n\t\t\t\tconst value = setCookie\n\t\t\t\t\t.substring(equalsIndex + 1)\n\t\t\t\t\t.split(';')[0];\n\t\t\t\tthis.cookies[name] = value;\n\t\t\t} catch (e) {\n\t\t\t\tlogger.error(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCookieRequestHeader() {\n\t\tconst cookiesArray: string[] = [];\n\t\tfor (const name in this.cookies) {\n\t\t\tcookiesArray.push(`${name}=${this.cookies[name]}`);\n\t\t}\n\t\treturn cookiesArray.join('; ');\n\t}\n}\n","/**\n * Polyfill for ReadableStream[Symbol.asyncIterator]\n * This enables the use of for-await-of loops with ReadableStreams\n *\n * @example\n * ```ts\n * for await (const entry of stream) {\n * \t   // ...\n * }\n * ```\n */\n// @ts-ignore\nif (!ReadableStream.prototype[Symbol.asyncIterator]) {\n\t// @ts-ignore\n\tReadableStream.prototype[Symbol.asyncIterator] = async function* () {\n\t\tconst reader = this.getReader();\n\t\ttry {\n\t\t\twhile (true) {\n\t\t\t\tconst { done, value } = await reader.read();\n\t\t\t\tif (done) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tyield value;\n\t\t\t}\n\t\t} finally {\n\t\t\treader.releaseLock();\n\t\t}\n\t};\n\t// @ts-ignore\n\tReadableStream.prototype.iterate =\n\t\t// @ts-ignore\n\t\tReadableStream.prototype[Symbol.asyncIterator];\n}\n\nexport type IterableReadableStream<R> = ReadableStream<R> & AsyncIterable<R>;\n","import { AcquireTimeoutError, Semaphore } from '@php-wasm/util';\nimport { PHP } from './php';\n\nexport type PHPFactoryOptions = {\n\tisPrimary: boolean;\n};\n\nexport type PHPFactory = (options: PHPFactoryOptions) => Promise<PHP>;\n\nexport interface ProcessManagerOptions {\n\t/**\n\t * The maximum number of PHP instances that can exist at\n\t * the same time.\n\t */\n\tmaxPhpInstances?: number;\n\t/**\n\t * The number of milliseconds to wait for a PHP instance when\n\t * we have reached the maximum number of PHP instances and\n\t * cannot spawn a new one. If the timeout is reached, we assume\n\t * all the PHP instances are deadlocked and a throw MaxPhpInstancesError.\n\t *\n\t * Default: 5000\n\t */\n\ttimeout?: number;\n\t/**\n\t * The primary PHP instance that's never killed. This instance\n\t * contains the reference filesystem used by all other PHP instances.\n\t */\n\tprimaryPhp?: PHP;\n\t/**\n\t * A factory function used for spawning new PHP instances.\n\t */\n\tphpFactory?: PHPFactory;\n}\n\nexport interface SpawnedPHP {\n\tphp: PHP;\n\treap: () => void;\n}\n\nexport class MaxPhpInstancesError extends Error {\n\tconstructor(limit: number) {\n\t\tsuper(\n\t\t\t`Requested more concurrent PHP instances than the limit (${limit}).`\n\t\t);\n\t\tthis.name = this.constructor.name;\n\t}\n}\n\n/**\n * A PHP Process manager.\n *\n * Maintains:\n * * A single \"primary\" PHP instance that's never killed – it contains the\n *   reference filesystem used by all other PHP instances.\n * * A pool of disposable PHP instances that are spawned to handle a single\n *   request and reaped immediately after.\n *\n * When a new request comes in, PHPProcessManager yields the idle instance to\n * handle it, and immediately starts initializing a new idle instance. In other\n * words, for n concurrent requests, there are at most n+1 PHP instances\n * running at the same time.\n *\n * A slight nuance is that the first idle instance is not initialized until the\n * first concurrent request comes in. This is because many use-cases won't\n * involve parallel requests and, for those, we can avoid eagerly spinning up a\n * second PHP instance.\n *\n * This strategy is inspired by Cowboy, an Erlang HTTP server. Handling a\n * single extra request can happen immediately, while handling multiple extra\n * requests requires extra time to spin up a few PHP instances. This is a more\n * resource-friendly tradeoff than keeping 5 idle instances at all times.\n */\nexport class PHPProcessManager implements AsyncDisposable {\n\tprivate primaryPhp?: PHP;\n\tprivate primaryIdle = true;\n\tprivate nextInstance: Promise<SpawnedPHP> | null = null;\n\t/**\n\t * All spawned PHP instances, including the primary PHP instance.\n\t * Used for bookkeeping and reaping all instances on dispose.\n\t */\n\tprivate allInstances: Promise<SpawnedPHP>[] = [];\n\tprivate phpFactory?: PHPFactory;\n\tprivate maxPhpInstances: number;\n\tprivate semaphore: Semaphore;\n\n\tconstructor(options?: ProcessManagerOptions) {\n\t\tthis.maxPhpInstances = options?.maxPhpInstances ?? 5;\n\t\tthis.phpFactory = options?.phpFactory;\n\t\tthis.primaryPhp = options?.primaryPhp;\n\t\tthis.semaphore = new Semaphore({\n\t\t\tconcurrency: this.maxPhpInstances,\n\t\t\t/**\n\t\t\t * Wait up to 5 seconds for resources to become available\n\t\t\t * before assuming that all the PHP instances are deadlocked.\n\t\t\t */\n\t\t\ttimeout: options?.timeout || 5000,\n\t\t});\n\t}\n\n\t/**\n\t * Get the primary PHP instance.\n\t *\n\t * If the primary PHP instance is not set, it will be spawned\n\t * using the provided phpFactory.\n\t *\n\t * @throws {Error} when called twice before the first call is resolved.\n\t */\n\tasync getPrimaryPhp() {\n\t\tif (!this.phpFactory && !this.primaryPhp) {\n\t\t\tthrow new Error(\n\t\t\t\t'phpFactory or primaryPhp must be set before calling getPrimaryPhp().'\n\t\t\t);\n\t\t} else if (!this.primaryPhp) {\n\t\t\tconst spawned = await this.spawn!({ isPrimary: true });\n\t\t\tthis.primaryPhp = spawned.php;\n\t\t}\n\t\treturn this.primaryPhp!;\n\t}\n\n\t/**\n\t * Get a PHP instance.\n\t *\n\t * It could be either the primary PHP instance, an idle disposable PHP\n\t * instance, or a newly spawned PHP instance – depending on the resource\n\t * availability.\n\t *\n\t * @throws {MaxPhpInstancesError} when the maximum number of PHP instances is reached\n\t *                                and the waiting timeout is exceeded.\n\t */\n\tasync acquirePHPInstance(): Promise<SpawnedPHP> {\n\t\tif (this.primaryIdle) {\n\t\t\tthis.primaryIdle = false;\n\t\t\treturn {\n\t\t\t\tphp: await this.getPrimaryPhp(),\n\t\t\t\treap: () => (this.primaryIdle = true),\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * nextInstance is null:\n\t\t *\n\t\t * * Before the first concurrent getInstance() call\n\t\t * * When the last getInstance() call did not have enough\n\t\t *   budget left to optimistically start spawning the next\n\t\t *   instance.\n\t\t */\n\t\tconst spawnedPhp =\n\t\t\tthis.nextInstance || this.spawn({ isPrimary: false });\n\n\t\t/**\n\t\t * Start spawning the next instance if there's still room. We can't\n\t\t * just always spawn the next instance because spawn() can fail\n\t\t * asynchronously and then we'll get an unhandled promise rejection.\n\t\t */\n\t\tif (this.semaphore.remaining > 0) {\n\t\t\tthis.nextInstance = this.spawn({ isPrimary: false });\n\t\t} else {\n\t\t\tthis.nextInstance = null;\n\t\t}\n\t\treturn await spawnedPhp;\n\t}\n\n\t/**\n\t * Initiated spawning of a new PHP instance.\n\t * This function is synchronous on purpose – it needs to synchronously\n\t * add the spawn promise to the allInstances array without waiting\n\t * for PHP to spawn.\n\t */\n\tprivate spawn(factoryArgs: PHPFactoryOptions): Promise<SpawnedPHP> {\n\t\tif (factoryArgs.isPrimary && this.allInstances.length > 0) {\n\t\t\tthrow new Error(\n\t\t\t\t'Requested spawning a primary PHP instance when another primary instance already started spawning.'\n\t\t\t);\n\t\t}\n\t\tconst spawned = this.doSpawn(factoryArgs);\n\t\tthis.allInstances.push(spawned);\n\t\tconst pop = () => {\n\t\t\tthis.allInstances = this.allInstances.filter(\n\t\t\t\t(instance) => instance !== spawned\n\t\t\t);\n\t\t};\n\t\treturn spawned\n\t\t\t.catch((rejection) => {\n\t\t\t\tpop();\n\t\t\t\tthrow rejection;\n\t\t\t})\n\t\t\t.then((result) => ({\n\t\t\t\t...result,\n\t\t\t\treap: () => {\n\t\t\t\t\tpop();\n\t\t\t\t\tresult.reap();\n\t\t\t\t},\n\t\t\t}));\n\t}\n\n\t/**\n\t * Actually acquires the lock and spawns a new PHP instance.\n\t */\n\tprivate async doSpawn(factoryArgs: PHPFactoryOptions): Promise<SpawnedPHP> {\n\t\tlet release: () => void;\n\t\ttry {\n\t\t\trelease = await this.semaphore.acquire();\n\t\t} catch (error) {\n\t\t\tif (error instanceof AcquireTimeoutError) {\n\t\t\t\tthrow new MaxPhpInstancesError(this.maxPhpInstances);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t\ttry {\n\t\t\tconst php = await this.phpFactory!(factoryArgs);\n\t\t\treturn {\n\t\t\t\tphp,\n\t\t\t\treap() {\n\t\t\t\t\tphp.exit();\n\t\t\t\t\trelease();\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\trelease();\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync [Symbol.asyncDispose]() {\n\t\tif (this.primaryPhp) {\n\t\t\tthis.primaryPhp.exit();\n\t\t}\n\t\tawait Promise.all(\n\t\t\tthis.allInstances.map((instance) =>\n\t\t\t\tinstance.then(({ reap }) => reap())\n\t\t\t)\n\t\t);\n\t}\n}\n","export const SupportedPHPVersions = [\n\t'8.3',\n\t'8.2',\n\t'8.1',\n\t'8.0',\n\t'7.4',\n\t'7.3',\n\t'7.2',\n\t'7.1',\n\t'7.0',\n] as const;\nexport const LatestSupportedPHPVersion = SupportedPHPVersions[0];\nexport const SupportedPHPVersionsList = SupportedPHPVersions as any as string[];\nexport type SupportedPHPVersion = (typeof SupportedPHPVersions)[number];\n","/**\n * The default base used to convert a path into the URL object.\n */\nexport const DEFAULT_BASE_URL = 'http://example.com';\n\n/**\n * Returns a string representing the path, query, and\n * fragment of the given URL.\n *\n * @example\n * ```js\n * const url = new URL('http://example.com/foo/bar?baz=qux#quux');\n * toRelativeUrl(url); // '/foo/bar?baz=qux#quux'\n * ```\n *\n * @param  url The URL.\n * @returns The path, query, and fragment.\n */\nexport function toRelativeUrl(url: URL): string {\n\treturn url.toString().substring(url.origin.length);\n}\n\n/**\n * Removes the given prefix from the given path.\n *\n * @example\n * ```js\n * removePathPrefix('/foo/bar', '/foo'); // '/bar'\n * removePathPrefix('/bar', '/foo'); // '/bar'\n * ```\n *\n * @param  path   The path to remove the prefix from.\n * @param  prefix The prefix to remove.\n * @returns Path with the prefix removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n\tif (!prefix || !path.startsWith(prefix)) {\n\t\treturn path;\n\t}\n\treturn path.substring(prefix.length);\n}\n\n/**\n * Ensures the given path has the given prefix.\n *\n * @example\n * ```js\n * ensurePathPrefix('/bar', '/foo'); // '/foo/bar'\n * ensurePathPrefix('/foo/bar', '/foo'); // '/foo/bar'\n * ```\n *\n * @param  path\n * @param  prefix\n * @returns Path with the prefix added.\n */\nexport function ensurePathPrefix(path: string, prefix: string): string {\n\tif (!prefix || path.startsWith(prefix)) {\n\t\treturn path;\n\t}\n\treturn prefix + path;\n}\n","/**\n * Encodes a multipart/form-data request body.\n *\n * @param   data - The form data to encode.\n * @returns The encoded body and a correctly formatted content type header.\n */\nexport async function encodeAsMultipart(\n\tdata: Record<string, string | Uint8Array | File>\n) {\n\tconst boundary = `----${Math.random().toString(36).slice(2)}`;\n\tconst contentType = `multipart/form-data; boundary=${boundary}`;\n\n\tconst textEncoder = new TextEncoder();\n\tconst parts: (string | Uint8Array)[] = [];\n\tfor (const [name, value] of Object.entries(data)) {\n\t\tparts.push(`--${boundary}\\r\\n`);\n\t\tparts.push(`Content-Disposition: form-data; name=\"${name}\"`);\n\t\tif (value instanceof File) {\n\t\t\tparts.push(`; filename=\"${value.name}\"`);\n\t\t}\n\t\tparts.push(`\\r\\n`);\n\t\tif (value instanceof File) {\n\t\t\tparts.push(`Content-Type: application/octet-stream`);\n\t\t\tparts.push(`\\r\\n`);\n\t\t}\n\t\tparts.push(`\\r\\n`);\n\t\tif (value instanceof File) {\n\t\t\tparts.push(await fileToUint8Array(value));\n\t\t} else {\n\t\t\tparts.push(value);\n\t\t}\n\t\tparts.push(`\\r\\n`);\n\t}\n\tparts.push(`--${boundary}--\\r\\n`);\n\n\tconst length = parts.reduce((acc, part) => acc + part.length, 0);\n\tconst bytes = new Uint8Array(length);\n\tlet offset = 0;\n\tfor (const part of parts) {\n\t\tbytes.set(\n\t\t\ttypeof part === 'string' ? textEncoder.encode(part) : part,\n\t\t\toffset\n\t\t);\n\t\toffset += part.length;\n\t}\n\treturn { bytes, contentType };\n}\n\nfunction fileToUint8Array(file: File): Promise<Uint8Array> {\n\treturn new Promise((resolve) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = () => {\n\t\t\tresolve(new Uint8Array(reader.result as ArrayBuffer));\n\t\t};\n\t\treader.readAsArrayBuffer(file);\n\t});\n}\n","import { joinPaths } from '@php-wasm/util';\nimport {\n\tensurePathPrefix,\n\ttoRelativeUrl,\n\tremovePathPrefix,\n\tDEFAULT_BASE_URL,\n} from './urls';\nimport { PHP, PHPExecutionFailureError, normalizeHeaders } from './php';\nimport { PHPResponse } from './php-response';\nimport { PHPRequest, PHPRunOptions } from './universal-php';\nimport { encodeAsMultipart } from './encode-as-multipart';\nimport {\n\tMaxPhpInstancesError,\n\tPHPFactoryOptions,\n\tPHPProcessManager,\n\tSpawnedPHP,\n} from './php-process-manager';\nimport { HttpCookieStore } from './http-cookie-store';\nimport mimeTypes from './mime-types.json';\n\nexport type RewriteRule = {\n\tmatch: RegExp;\n\treplacement: string;\n};\n\nexport type FileNotFoundToResponse = {\n\ttype: 'response';\n\tresponse: PHPResponse;\n};\nexport type FileNotFoundToInternalRedirect = {\n\ttype: 'internal-redirect';\n\turi: string;\n};\nexport type FileNotFoundTo404 = { type: '404' };\n\nexport type FileNotFoundAction =\n\t| FileNotFoundToResponse\n\t| FileNotFoundToInternalRedirect\n\t| FileNotFoundTo404;\n\nexport type FileNotFoundGetActionCallback = (\n\trelativePath: string\n) => FileNotFoundAction;\n\ninterface BaseConfiguration {\n\t/**\n\t * The directory in the PHP filesystem where the server will look\n\t * for the files to serve. Default: `/var/www`.\n\t */\n\tdocumentRoot?: string;\n\t/**\n\t * Request Handler URL. Used to populate $_SERVER details like HTTP_HOST.\n\t */\n\tabsoluteUrl?: string;\n\n\t/**\n\t * Rewrite rules\n\t */\n\trewriteRules?: RewriteRule[];\n\n\t/**\n\t * A callback that decides how to handle a file-not-found condition for a\n\t * given request URI.\n\t */\n\tgetFileNotFoundAction?: FileNotFoundGetActionCallback;\n}\n\nexport type PHPRequestHandlerFactoryArgs = PHPFactoryOptions & {\n\trequestHandler: PHPRequestHandler;\n};\n\nexport type PHPRequestHandlerConfiguration = BaseConfiguration &\n\t(\n\t\t| {\n\t\t\t\t/**\n\t\t\t\t * PHPProcessManager is required because the request handler needs\n\t\t\t\t * to make a decision for each request.\n\t\t\t\t *\n\t\t\t\t * Static assets are served using the primary PHP's filesystem, even\n\t\t\t\t * when serving 100 static files concurrently. No new PHP interpreter\n\t\t\t\t * is ever created as there's no need for it.\n\t\t\t\t *\n\t\t\t\t * Dynamic PHP requests, however, require grabbing an available PHP\n\t\t\t\t * interpreter, and that's where the PHPProcessManager comes in.\n\t\t\t\t */\n\t\t\t\tprocessManager: PHPProcessManager;\n\t\t  }\n\t\t| {\n\t\t\t\tphpFactory: (\n\t\t\t\t\trequestHandler: PHPRequestHandlerFactoryArgs\n\t\t\t\t) => Promise<PHP>;\n\t\t\t\t/**\n\t\t\t\t * The maximum number of PHP instances that can exist at\n\t\t\t\t * the same time.\n\t\t\t\t */\n\t\t\t\tmaxPhpInstances?: number;\n\t\t  }\n\t);\n\n/**\n * Handles HTTP requests using PHP runtime as a backend.\n *\n * @public\n * @example Use PHPRequestHandler implicitly with a new PHP instance:\n * ```js\n * import { PHP } from '@php-wasm/web';\n *\n * const php = await PHP.load( '7.4', {\n *     requestHandler: {\n *         // PHP FS path to serve the files from:\n *         documentRoot: '/www',\n *\n *         // Used to populate $_SERVER['SERVER_NAME'] etc.:\n *         absoluteUrl: 'http://127.0.0.1'\n *     }\n * } );\n *\n * php.mkdirTree('/www');\n * php.writeFile('/www/index.php', '<?php echo \"Hi from PHP!\"; ');\n *\n * const response = await php.request({ path: '/index.php' });\n * console.log(response.text);\n * // \"Hi from PHP!\"\n * ```\n *\n * @example Explicitly create a PHPRequestHandler instance and run a PHP script:\n * ```js\n * import {\n *   loadPHPRuntime,\n *   PHP,\n *   PHPRequestHandler,\n *   getPHPLoaderModule,\n * } from '@php-wasm/web';\n *\n * const runtime = await loadPHPRuntime( await getPHPLoaderModule('7.4') );\n * const php = new PHP( runtime );\n *\n * php.mkdirTree('/www');\n * php.writeFile('/www/index.php', '<?php echo \"Hi from PHP!\"; ');\n *\n * const server = new PHPRequestHandler(php, {\n *     // PHP FS path to serve the files from:\n *     documentRoot: '/www',\n *\n *     // Used to populate $_SERVER['SERVER_NAME'] etc.:\n *     absoluteUrl: 'http://127.0.0.1'\n * });\n *\n * const response = server.request({ path: '/index.php' });\n * console.log(response.text);\n * // \"Hi from PHP!\"\n * ```\n */\nexport class PHPRequestHandler {\n\t#DOCROOT: string;\n\t#PROTOCOL: string;\n\t#HOSTNAME: string;\n\t#PORT: number;\n\t#HOST: string;\n\t#PATHNAME: string;\n\t#ABSOLUTE_URL: string;\n\t#cookieStore: HttpCookieStore;\n\trewriteRules: RewriteRule[];\n\tprocessManager: PHPProcessManager;\n\tgetFileNotFoundAction: FileNotFoundGetActionCallback;\n\n\t/**\n\t * The request handler needs to decide whether to serve a static asset or\n\t * run the PHP interpreter. For static assets it should just reuse the primary\n\t * PHP even if there's 50 concurrent requests to serve. However, for\n\t * dynamic PHP requests, it needs to grab an available interpreter.\n\t * Therefore, it cannot just accept PHP as an argument as serving requests\n\t * requires access to ProcessManager.\n\t *\n\t * @param  php    - The PHP instance.\n\t * @param  config - Request Handler configuration.\n\t */\n\tconstructor(config: PHPRequestHandlerConfiguration) {\n\t\tconst {\n\t\t\tdocumentRoot = '/www/',\n\t\t\tabsoluteUrl = typeof location === 'object' ? location?.href : '',\n\t\t\trewriteRules = [],\n\t\t\tgetFileNotFoundAction = () => ({ type: '404' }),\n\t\t} = config;\n\t\tif ('processManager' in config) {\n\t\t\tthis.processManager = config.processManager;\n\t\t} else {\n\t\t\tthis.processManager = new PHPProcessManager({\n\t\t\t\tphpFactory: async (info) => {\n\t\t\t\t\tconst php = await config.phpFactory!({\n\t\t\t\t\t\t...info,\n\t\t\t\t\t\trequestHandler: this,\n\t\t\t\t\t});\n\t\t\t\t\t// @TODO: Decouple PHP and request handler\n\t\t\t\t\t(php as any).requestHandler = this;\n\t\t\t\t\treturn php;\n\t\t\t\t},\n\t\t\t\tmaxPhpInstances: config.maxPhpInstances,\n\t\t\t});\n\t\t}\n\t\tthis.#cookieStore = new HttpCookieStore();\n\t\tthis.#DOCROOT = documentRoot;\n\n\t\tconst url = new URL(absoluteUrl);\n\t\tthis.#HOSTNAME = url.hostname;\n\t\tthis.#PORT = url.port\n\t\t\t? Number(url.port)\n\t\t\t: url.protocol === 'https:'\n\t\t\t? 443\n\t\t\t: 80;\n\t\tthis.#PROTOCOL = (url.protocol || '').replace(':', '');\n\t\tconst isNonStandardPort = this.#PORT !== 443 && this.#PORT !== 80;\n\t\tthis.#HOST = [\n\t\t\tthis.#HOSTNAME,\n\t\t\tisNonStandardPort ? `:${this.#PORT}` : '',\n\t\t].join('');\n\t\tthis.#PATHNAME = url.pathname.replace(/\\/+$/, '');\n\t\tthis.#ABSOLUTE_URL = [\n\t\t\t`${this.#PROTOCOL}://`,\n\t\t\tthis.#HOST,\n\t\t\tthis.#PATHNAME,\n\t\t].join('');\n\t\tthis.rewriteRules = rewriteRules;\n\t\tthis.getFileNotFoundAction = getFileNotFoundAction;\n\t}\n\n\tasync getPrimaryPhp() {\n\t\treturn await this.processManager.getPrimaryPhp();\n\t}\n\n\t/**\n\t * Converts a path to an absolute URL based at the PHPRequestHandler\n\t * root.\n\t *\n\t * @param  path The server path to convert to an absolute URL.\n\t * @returns The absolute URL.\n\t */\n\tpathToInternalUrl(path: string): string {\n\t\treturn `${this.absoluteUrl}${path}`;\n\t}\n\n\t/**\n\t * Converts an absolute URL based at the PHPRequestHandler to a relative path\n\t * without the server pathname and scope.\n\t *\n\t * @param  internalUrl An absolute URL based at the PHPRequestHandler root.\n\t * @returns The relative path.\n\t */\n\tinternalUrlToPath(internalUrl: string): string {\n\t\tconst url = new URL(internalUrl);\n\t\tif (url.pathname.startsWith(this.#PATHNAME)) {\n\t\t\turl.pathname = url.pathname.slice(this.#PATHNAME.length);\n\t\t}\n\t\treturn toRelativeUrl(url);\n\t}\n\n\t/**\n\t * The absolute URL of this PHPRequestHandler instance.\n\t */\n\tget absoluteUrl() {\n\t\treturn this.#ABSOLUTE_URL;\n\t}\n\n\t/**\n\t * The directory in the PHP filesystem where the server will look\n\t * for the files to serve. Default: `/var/www`.\n\t */\n\tget documentRoot() {\n\t\treturn this.#DOCROOT;\n\t}\n\n\t/**\n\t * Serves the request – either by serving a static file, or by\n\t * dispatching it to the PHP runtime.\n\t *\n\t * The request() method mode behaves like a web server and only works if\n\t * the PHP was initialized with a `requestHandler` option (which the online\n\t * version of WordPress Playground does by default).\n\t *\n\t * In the request mode, you pass an object containing the request information\n\t * (method, headers, body, etc.) and the path to the PHP file to run:\n\t *\n\t * ```ts\n\t * const php = PHP.load('7.4', {\n\t * \trequestHandler: {\n\t * \t\tdocumentRoot: \"/www\"\n\t * \t}\n\t * })\n\t * php.writeFile(\"/www/index.php\", `<?php echo file_get_contents(\"php://input\");`);\n\t * const result = await php.request({\n\t * \tmethod: \"GET\",\n\t * \theaders: {\n\t * \t\t\"Content-Type\": \"text/plain\"\n\t * \t},\n\t * \tbody: \"Hello world!\",\n\t * \tpath: \"/www/index.php\"\n\t * });\n\t * // result.text === \"Hello world!\"\n\t * ```\n\t *\n\t * The `request()` method cannot be used in conjunction with `cli()`.\n\t *\n\t * @example\n\t * ```js\n\t * const output = await php.request({\n\t * \tmethod: 'GET',\n\t * \turl: '/index.php',\n\t * \theaders: {\n\t * \t\t'X-foo': 'bar',\n\t * \t},\n\t * \tbody: {\n\t * \t\tfoo: 'bar',\n\t * \t},\n\t * });\n\t * console.log(output.stdout); // \"Hello world!\"\n\t * ```\n\t *\n\t * @param  request - PHP Request data.\n\t */\n\tasync request(request: PHPRequest): Promise<PHPResponse> {\n\t\tconst isAbsolute = URL.canParse(request.url);\n\t\tconst requestedUrl = new URL(\n\t\t\t// Remove the hash part of the URL as it's not meant for the server.\n\t\t\trequest.url.split('#')[0],\n\t\t\tisAbsolute ? undefined : DEFAULT_BASE_URL\n\t\t);\n\n\t\tconst normalizedRequestedPath = applyRewriteRules(\n\t\t\tremovePathPrefix(\n\t\t\t\tdecodeURIComponent(requestedUrl.pathname),\n\t\t\t\tthis.#PATHNAME\n\t\t\t),\n\t\t\tthis.rewriteRules\n\t\t);\n\n\t\tconst primaryPhp = await this.getPrimaryPhp();\n\n\t\tlet fsPath = joinPaths(this.#DOCROOT, normalizedRequestedPath);\n\n\t\tif (primaryPhp.isDir(fsPath)) {\n\t\t\t// Ensure directory URIs have a trailing slash. Otherwise,\n\t\t\t// relative URIs in index.php or index.html files are relative\n\t\t\t// to the next directory up.\n\t\t\t//\n\t\t\t// Example:\n\t\t\t// For an index page served for URI \"/settings\", we naturally expect\n\t\t\t// links to be relative to \"/settings\", but without the trailing\n\t\t\t// slash, a relative link \"edit.php\" resolves to \"/edit.php\"\n\t\t\t// rather than \"/settings/edit.php\".\n\t\t\t//\n\t\t\t// This treatment of relative links is correct behavior for the browser:\n\t\t\t// https://www.rfc-editor.org/rfc/rfc3986#section-5.2.3\n\t\t\t//\n\t\t\t// But user intent for `/settings/index.php` is that its relative\n\t\t\t// URIs are relative to `/settings/`. So we redirect to add a\n\t\t\t// trailing slash to directory URIs to meet this expecatation.\n\t\t\t//\n\t\t\t// This behavior is also necessary for WordPress to function properly.\n\t\t\t// Otherwise, when viewing the WP admin dashboard at `/wp-admin`,\n\t\t\t// links to other admin pages like `edit.php` will incorrectly\n\t\t\t// resolve to `/edit.php` rather than `/wp-admin/edit.php`.\n\t\t\tif (!fsPath.endsWith('/')) {\n\t\t\t\treturn new PHPResponse(\n\t\t\t\t\t301,\n\t\t\t\t\t{ Location: [`${requestedUrl.pathname}/`] },\n\t\t\t\t\tnew Uint8Array(0)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// We can only satisfy requests for directories with a default file\n\t\t\t// so let's first resolve to a default path when available.\n\t\t\tfor (const possibleIndexFile of ['index.php', 'index.html']) {\n\t\t\t\tconst possibleIndexPath = joinPaths(fsPath, possibleIndexFile);\n\t\t\t\tif (primaryPhp.isFile(possibleIndexPath)) {\n\t\t\t\t\tfsPath = possibleIndexPath;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!primaryPhp.isFile(fsPath)) {\n\t\t\tconst fileNotFoundAction = this.getFileNotFoundAction(\n\t\t\t\tnormalizedRequestedPath\n\t\t\t);\n\t\t\tswitch (fileNotFoundAction.type) {\n\t\t\t\tcase 'response':\n\t\t\t\t\treturn fileNotFoundAction.response;\n\t\t\t\tcase 'internal-redirect':\n\t\t\t\t\tfsPath = joinPaths(this.#DOCROOT, fileNotFoundAction.uri);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '404':\n\t\t\t\t\treturn PHPResponse.forHttpCode(404);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Unsupported file-not-found action type: ' +\n\t\t\t\t\t\t\t// Cast because TS asserts the remaining possibility is `never`\n\t\t\t\t\t\t\t`'${\n\t\t\t\t\t\t\t\t(fileNotFoundAction as FileNotFoundAction).type\n\t\t\t\t\t\t\t}'`\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// We need to confirm that the current target file exists because\n\t\t// file-not-found fallback actions may redirect to non-existent files.\n\t\tif (primaryPhp.isFile(fsPath)) {\n\t\t\tif (fsPath.endsWith('.php')) {\n\t\t\t\tconst effectiveRequest: PHPRequest = {\n\t\t\t\t\t...request,\n\t\t\t\t\t// Pass along URL with the #fragment filtered out\n\t\t\t\t\turl: requestedUrl.toString(),\n\t\t\t\t};\n\t\t\t\treturn this.#spawnPHPAndDispatchRequest(\n\t\t\t\t\teffectiveRequest,\n\t\t\t\t\tfsPath\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn this.#serveStaticFile(primaryPhp, fsPath);\n\t\t\t}\n\t\t} else {\n\t\t\treturn PHPResponse.forHttpCode(404);\n\t\t}\n\t}\n\n\t/**\n\t * Serves a static file from the PHP filesystem.\n\t *\n\t * @param  fsPath - Absolute path of the static file to serve.\n\t * @returns The response.\n\t */\n\t#serveStaticFile(php: PHP, fsPath: string): PHPResponse {\n\t\tconst arrayBuffer = php.readFileAsBuffer(fsPath);\n\t\treturn new PHPResponse(\n\t\t\t200,\n\t\t\t{\n\t\t\t\t'content-length': [`${arrayBuffer.byteLength}`],\n\t\t\t\t// @TODO: Infer the content-type from the arrayBuffer instead of the\n\t\t\t\t// file path. The code below won't return the correct mime-type if the\n\t\t\t\t// extension was tampered with.\n\t\t\t\t'content-type': [inferMimeType(fsPath)],\n\t\t\t\t'accept-ranges': ['bytes'],\n\t\t\t\t'cache-control': ['public, max-age=0'],\n\t\t\t},\n\t\t\tarrayBuffer\n\t\t);\n\t}\n\n\t/**\n\t * Spawns a new PHP instance and dispatches a request to it.\n\t */\n\tasync #spawnPHPAndDispatchRequest(\n\t\trequest: PHPRequest,\n\t\tscriptPath: string\n\t): Promise<PHPResponse> {\n\t\tlet spawnedPHP: SpawnedPHP | undefined = undefined;\n\t\ttry {\n\t\t\tspawnedPHP = await this.processManager!.acquirePHPInstance();\n\t\t} catch (e) {\n\t\t\tif (e instanceof MaxPhpInstancesError) {\n\t\t\t\treturn PHPResponse.forHttpCode(502);\n\t\t\t} else {\n\t\t\t\treturn PHPResponse.forHttpCode(500);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\treturn await this.#dispatchToPHP(\n\t\t\t\tspawnedPHP.php,\n\t\t\t\trequest,\n\t\t\t\tscriptPath\n\t\t\t);\n\t\t} finally {\n\t\t\tspawnedPHP.reap();\n\t\t}\n\t}\n\n\t/**\n\t * Runs the requested PHP file with all the request and $_SERVER\n\t * superglobals populated.\n\t *\n\t * @param  request - The request.\n\t * @returns The response.\n\t */\n\tasync #dispatchToPHP(\n\t\tphp: PHP,\n\t\trequest: PHPRequest,\n\t\tscriptPath: string\n\t): Promise<PHPResponse> {\n\t\tlet preferredMethod: PHPRunOptions['method'] = 'GET';\n\n\t\tconst headers: Record<string, string> = {\n\t\t\thost: this.#HOST,\n\t\t\t...normalizeHeaders(request.headers || {}),\n\t\t\tcookie: this.#cookieStore.getCookieRequestHeader(),\n\t\t};\n\n\t\tlet body = request.body;\n\t\tif (typeof body === 'object' && !(body instanceof Uint8Array)) {\n\t\t\tpreferredMethod = 'POST';\n\t\t\tconst { bytes, contentType } = await encodeAsMultipart(body);\n\t\t\tbody = bytes;\n\t\t\theaders['content-type'] = contentType;\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await php.run({\n\t\t\t\trelativeUri: ensurePathPrefix(\n\t\t\t\t\ttoRelativeUrl(new URL(request.url)),\n\t\t\t\t\tthis.#PATHNAME\n\t\t\t\t),\n\t\t\t\tprotocol: this.#PROTOCOL,\n\t\t\t\tmethod: request.method || preferredMethod,\n\t\t\t\t$_SERVER: {\n\t\t\t\t\tREMOTE_ADDR: '127.0.0.1',\n\t\t\t\t\tDOCUMENT_ROOT: this.#DOCROOT,\n\t\t\t\t\tHTTPS: this.#ABSOLUTE_URL.startsWith('https://')\n\t\t\t\t\t\t? 'on'\n\t\t\t\t\t\t: '',\n\t\t\t\t},\n\t\t\t\tbody,\n\t\t\t\tscriptPath,\n\t\t\t\theaders,\n\t\t\t});\n\t\t\tthis.#cookieStore.rememberCookiesFromResponseHeaders(\n\t\t\t\tresponse.headers\n\t\t\t);\n\t\t\treturn response;\n\t\t} catch (error) {\n\t\t\tconst executionError = error as PHPExecutionFailureError;\n\t\t\tif (executionError?.response) {\n\t\t\t\treturn executionError.response;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\n/**\n * Naively infer a file mime type from its path.\n *\n * @todo Infer the mime type based on the file contents.\n *       A naive function like this one can be inaccurate\n *       and potentially have negative security consequences.\n *\n * @param  path - The file path\n * @returns The inferred mime type.\n */\nfunction inferMimeType(path: string): string {\n\tconst extension = path.split('.').pop() as keyof typeof mimeTypes;\n\t// @TODO: Consider not sending a default mime type to let the browser guess\n\treturn mimeTypes[extension] || mimeTypes['_default'];\n}\n\n/**\n * Applies the given rewrite rules to the given path.\n *\n * @param  path  The path to apply the rules to.\n * @param  rules The rules to apply.\n * @returns The path with the rules applied.\n */\nexport function applyRewriteRules(path: string, rules: RewriteRule[]): string {\n\tfor (const rule of rules) {\n\t\tif (new RegExp(rule.match).test(path)) {\n\t\t\treturn path.replace(rule.match, rule.replacement);\n\t\t}\n\t}\n\treturn path;\n}\n","import { PHP } from './php';\nimport { PHPEvent } from './universal-php';\n\nexport interface RotateOptions {\n\tphp: PHP;\n\tcwd: string;\n\trecreateRuntime: () => Promise<number> | number;\n\tmaxRequests: number;\n}\n\n/**\n * Listens to PHP events and swaps the internal PHP Runtime for a fresh one\n * after a certain number of run() calls (which are responsible for handling\n * HTTP requests).\n *\n * Why? Because PHP and PHP extension have a memory leak. Each request leaves\n * the memory a bit more fragmented and with a bit less available space than\n * before. Eventually, new allocations start failing.\n *\n * Rotating the PHP instance may seem like a workaround, but it's actually\n * what PHP-FPM does natively:\n *\n * https://www.php.net/manual/en/install.fpm.configuration.php#pm.max-tasks\n *\n * @return cleanup function to restore\n */\nexport function rotatePHPRuntime({\n\tphp,\n\tcwd,\n\trecreateRuntime,\n\t/*\n\t * 400 is an arbitrary number that should trigger a rotation\n\t * way before the memory gets too fragmented. If it doesn't,\n\t * let's explore:\n\t * * Rotating based on an actual memory usage and\n\t *   fragmentation.\n\t * * Resetting HEAP to its initial value.\n\t */\n\tmaxRequests = 400,\n}: RotateOptions) {\n\tlet runtimeRequestCount = 0;\n\tasync function rotateRuntime() {\n\t\tconst release = await php.semaphore.acquire();\n\t\ttry {\n\t\t\tphp.hotSwapPHPRuntime(await recreateRuntime(), cwd);\n\n\t\t\t// A new runtime has handled zero requests.\n\t\t\truntimeRequestCount = 0;\n\t\t} finally {\n\t\t\trelease();\n\t\t}\n\t}\n\n\tasync function rotateRuntimeAfterMaxRequests() {\n\t\tif (++runtimeRequestCount < maxRequests) {\n\t\t\treturn;\n\t\t}\n\t\tawait rotateRuntime();\n\t}\n\n\tasync function rotateRuntimeForPhpWasmError(event: PHPEvent) {\n\t\tif (event.type === 'request.error' && event.source === 'php-wasm') {\n\t\t\tawait rotateRuntime();\n\t\t}\n\t}\n\n\tphp.addEventListener('request.error', rotateRuntimeForPhpWasmError);\n\tphp.addEventListener('request.end', rotateRuntimeAfterMaxRequests);\n\n\treturn function () {\n\t\tphp.removeEventListener('request.error', rotateRuntimeForPhpWasmError);\n\t\tphp.removeEventListener('request.end', rotateRuntimeAfterMaxRequests);\n\t};\n}\n","import { dirname, joinPaths } from '@php-wasm/util';\nimport { UniversalPHP } from './universal-php';\n\nexport interface WriteFilesOptions {\n\t/**\n\t * Whether to wipe out the contents of the\n\t * root directory before writing the new files.\n\t */\n\trmRoot?: boolean;\n}\n\nexport interface FileTree\n\textends Record<string, Uint8Array | string | FileTree> {}\n\n/**\n * Writes multiple files to a specified directory in the Playground\n * filesystem.\n *\n * @example ```ts\n * await writeFiles(php, '/test', {\n * \t'file.txt': 'file',\n * \t'sub/file.txt': 'file',\n * \t'sub1/sub2/file.txt': 'file',\n * });\n * ```\n *\n * @param php\n * @param root\n * @param newFiles\n * @param options\n */\nexport async function writeFiles(\n\tphp: UniversalPHP,\n\troot: string,\n\tnewFiles: FileTree,\n\t{ rmRoot = false }: WriteFilesOptions = {}\n) {\n\tif (rmRoot) {\n\t\tif (await php.isDir(root)) {\n\t\t\tawait php.rmdir(root, { recursive: true });\n\t\t}\n\t}\n\tfor (const [relativePath, content] of Object.entries(newFiles)) {\n\t\tconst filePath = joinPaths(root, relativePath);\n\t\tif (!(await php.fileExists(dirname(filePath)))) {\n\t\t\tawait php.mkdir(dirname(filePath));\n\t\t}\n\t\tif (content instanceof Uint8Array || typeof content === 'string') {\n\t\t\tawait php.writeFile(filePath, content);\n\t\t} else {\n\t\t\tawait writeFiles(php, filePath, content);\n\t\t}\n\t}\n}\n","import { PHP } from './php';\n\n/**\n * Proxy specific paths to the parent's MEMFS instance.\n * This is useful for sharing the WordPress installation\n * between the parent and child processes.\n */\nexport function proxyFileSystem(\n\tsourceOfTruth: PHP,\n\treplica: PHP,\n\tpaths: string[]\n) {\n\t// We can't just import the symbol from the library because\n\t// Playground CLI is built as ESM and php-wasm-node is built as\n\t// CJS and the imported symbols will different in the production build.\n\tconst __private__symbol = Object.getOwnPropertySymbols(sourceOfTruth)[0];\n\tfor (const path of paths) {\n\t\tif (!replica.fileExists(path)) {\n\t\t\treplica.mkdir(path);\n\t\t}\n\t\tif (!sourceOfTruth.fileExists(path)) {\n\t\t\tsourceOfTruth.mkdir(path);\n\t\t}\n\t\t// @ts-ignore\n\t\treplica[__private__symbol].FS.mount(\n\t\t\t// @ts-ignore\n\t\t\treplica[__private__symbol].PROXYFS,\n\t\t\t{\n\t\t\t\troot: path,\n\t\t\t\t// @ts-ignore\n\t\t\t\tfs: sourceOfTruth[__private__symbol].FS,\n\t\t\t},\n\t\t\tpath\n\t\t);\n\t}\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { PHPResponse, PHPResponseData } from '@php-wasm/universal';\nimport * as Comlink from 'comlink';\n\nexport type WithAPIState = {\n\t/**\n\t * Resolves to true when the remote API is ready for\n\t * Comlink communication, but not necessarily fully initialized yet.\n\t */\n\tisConnected: () => Promise<void>;\n\t/**\n\t * Resolves to true when the remote API is declares it's\n\t * fully loaded and ready to be used.\n\t */\n\tisReady: () => Promise<void>;\n};\nexport type RemoteAPI<T> = Comlink.Remote<T> & WithAPIState;\n\nexport function consumeAPI<APIType>(\n\tremote: Worker | Window,\n\tcontext: undefined | EventTarget = undefined\n): RemoteAPI<APIType> {\n\tsetupTransferHandlers();\n\n\tconst endpoint =\n\t\tremote instanceof Worker\n\t\t\t? remote\n\t\t\t: Comlink.windowEndpoint(remote, context);\n\n\t/**\n\t * This shouldn't be necessary, but Comlink doesn't seem to\n\t * handle the initial isConnected() call correctly unless it's\n\t * explicitly provided here. This is especially weird\n\t * since the only thing this proxy does is to call the\n\t * isConnected() method on the remote API.\n\t *\n\t * @TODO: Remove this workaround.\n\t */\n\tconst api = Comlink.wrap<APIType & WithAPIState>(endpoint);\n\tconst methods = proxyClone(api);\n\treturn new Proxy(methods, {\n\t\tget: (target, prop) => {\n\t\t\tif (prop === 'isConnected') {\n\t\t\t\treturn async () => {\n\t\t\t\t\t// Keep retrying until the remote API confirms it's connected.\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait runWithTimeout(api.isConnected(), 200);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// Timeout exceeded, try again. We can't just use a single\n\t\t\t\t\t\t\t// `runWithTimeout` call because it won't reach the remote API\n\t\t\t\t\t\t\t// if it's not connected yet. Instead, we need to keep retrying\n\t\t\t\t\t\t\t// until the remote API is connected and registers a handler\n\t\t\t\t\t\t\t// for the `isConnected` method.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn (api as any)[prop];\n\t\t},\n\t}) as unknown as RemoteAPI<APIType>;\n}\n\nasync function runWithTimeout<T>(\n\tpromise: Promise<T>,\n\ttimeout: number\n): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tsetTimeout(reject, timeout);\n\t\tpromise.then(resolve);\n\t});\n}\n\nexport type PublicAPI<Methods, PipedAPI = unknown> = RemoteAPI<\n\tMethods & PipedAPI\n>;\nexport function exposeAPI<Methods, PipedAPI>(\n\tapiMethods?: Methods,\n\tpipedApi?: PipedAPI\n): [() => void, (e: Error) => void, PublicAPI<Methods, PipedAPI>] {\n\tsetupTransferHandlers();\n\n\tconst connected = Promise.resolve();\n\n\tlet setReady: any;\n\tlet setFailed: any;\n\tconst ready = new Promise((resolve, reject) => {\n\t\tsetReady = resolve;\n\t\tsetFailed = reject;\n\t});\n\n\tconst methods = proxyClone(apiMethods);\n\tconst exposedApi = new Proxy(methods, {\n\t\tget: (target, prop) => {\n\t\t\tif (prop === 'isConnected') {\n\t\t\t\treturn () => connected;\n\t\t\t} else if (prop === 'isReady') {\n\t\t\t\treturn () => ready;\n\t\t\t} else if (prop in target) {\n\t\t\t\treturn target[prop];\n\t\t\t}\n\t\t\treturn (pipedApi as any)?.[prop];\n\t\t},\n\t}) as unknown as PublicAPI<Methods, PipedAPI>;\n\n\tComlink.expose(\n\t\texposedApi,\n\t\ttypeof window !== 'undefined'\n\t\t\t? Comlink.windowEndpoint(self.parent)\n\t\t\t: undefined\n\t);\n\treturn [setReady, setFailed, exposedApi];\n}\n\nlet isTransferHandlersSetup = false;\nfunction setupTransferHandlers() {\n\tif (isTransferHandlersSetup) {\n\t\treturn;\n\t}\n\tisTransferHandlersSetup = true;\n\tComlink.transferHandlers.set('EVENT', {\n\t\tcanHandle: (obj): obj is CustomEvent => obj instanceof CustomEvent,\n\t\tserialize: (ev: CustomEvent) => {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tdetail: ev.detail,\n\t\t\t\t},\n\t\t\t\t[],\n\t\t\t];\n\t\t},\n\t\tdeserialize: (obj) => obj,\n\t});\n\tComlink.transferHandlers.set('FUNCTION', {\n\t\tcanHandle: (obj: unknown): obj is Function => typeof obj === 'function',\n\t\tserialize(obj: Function) {\n\t\t\tconst { port1, port2 } = new MessageChannel();\n\t\t\tComlink.expose(obj, port1);\n\t\t\treturn [port2, [port2]];\n\t\t},\n\t\tdeserialize(port: any) {\n\t\t\tport.start();\n\t\t\treturn Comlink.wrap(port);\n\t\t},\n\t});\n\tComlink.transferHandlers.set('PHPResponse', {\n\t\tcanHandle: (obj: unknown): obj is PHPResponseData =>\n\t\t\ttypeof obj === 'object' &&\n\t\t\tobj !== null &&\n\t\t\t'headers' in obj &&\n\t\t\t'bytes' in obj &&\n\t\t\t'errors' in obj &&\n\t\t\t'exitCode' in obj &&\n\t\t\t'httpStatusCode' in obj,\n\t\tserialize(obj: PHPResponse): [PHPResponseData, Transferable[]] {\n\t\t\treturn [obj.toRawData(), []];\n\t\t},\n\t\tdeserialize(responseData: PHPResponseData): PHPResponse {\n\t\t\treturn PHPResponse.fromRawData(responseData);\n\t\t},\n\t});\n\t// Augment Comlink's throw handler to include Error the response and source\n\t// information in the serialized error object. BasePHP may throw\n\t// PHPExecutionFailureError which includes those information and we'll want to\n\t// display them for the user.\n\tconst throwHandler = Comlink.transferHandlers.get('throw')!;\n\tconst originalSerialize = throwHandler?.serialize;\n\tthrowHandler.serialize = ({ value }: any) => {\n\t\tconst serialized = originalSerialize({ value }) as any;\n\t\tif (value.response) {\n\t\t\tserialized[0].value.response = value.response;\n\t\t}\n\t\tif (value.source) {\n\t\t\tserialized[0].value.source = value.source;\n\t\t}\n\t\treturn serialized;\n\t};\n}\n\nfunction proxyClone(object: any): any {\n\treturn new Proxy(object, {\n\t\tget(target, prop) {\n\t\t\tswitch (typeof target[prop]) {\n\t\t\t\tcase 'function':\n\t\t\t\t\treturn (...args: any[]) => target[prop](...args);\n\t\t\t\tcase 'object':\n\t\t\t\t\tif (target[prop] === null) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\treturn proxyClone(target[prop]);\n\t\t\t\tcase 'undefined':\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'string':\n\t\t\t\t\treturn target[prop];\n\t\t\t\tdefault:\n\t\t\t\t\treturn Comlink.proxy(target[prop]);\n\t\t\t}\n\t\t},\n\t});\n}\n","export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),exceptionsFinal=()=>(async()=>{try{return new WebAssembly.Module(Uint8Array.from(atob(\"AGFzbQEAAAABBAFgAAADAgEAChABDgACaR9AAQMAAAsACxoL\"),(e=>e.codePointAt(0)))),!0}catch(e){return!1}})(),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=()=>(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,95,1,120,0])))(),jsStringBuiltins=()=>(async()=>{try{return await WebAssembly.instantiate(Uint8Array.from(atob(\"AGFzbQEAAAABBgFgAW8BfwIXAQ53YXNtOmpzLXN0cmluZwR0ZXN0AAA=\"),(e=>e.codePointAt(0))),{},{builtins:[\"js-string\"]}),!0}catch(e){return!1}})(),jspi=()=>(async()=>\"Suspending\"in WebAssembly)(),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiMemory=()=>(async()=>{try{return new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,5,5,2,0,0,0,0])),!0}catch(e){return!1}})(),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),typeReflection=()=>(async()=>\"Function\"in WebAssembly)(),typedFunctionReferences=()=>(async()=>{try{return new WebAssembly.Module(Uint8Array.from(atob(\"AGFzbQEAAAABEANgAX8Bf2ABZAABf2AAAX8DBAMBAAIJBQEDAAEBChwDCwBBCkEqIAAUAGoLBwAgAEEBagsGANIBEAAL\"),(e=>e.codePointAt(0)))),!0}catch(e){return!1}})();\n","import {\n\tLatestSupportedPHPVersion,\n\tPHPLoaderModule,\n\tSupportedPHPVersion,\n} from '@php-wasm/universal';\nimport { jspi } from 'wasm-feature-detect';\n\n/**\n * Loads the PHP loader module for the given PHP version.\n *\n * @param version The PHP version to load.\n * @param variant Internal. Do not use.\n * @returns The PHP loader module.\n */\nexport async function getPHPLoaderModule(\n\tversion: SupportedPHPVersion = LatestSupportedPHPVersion\n): Promise<PHPLoaderModule> {\n\tif (await jspi()) {\n\t\tswitch (version) {\n\t\t\tcase '8.3':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_8_3.js');\n\t\t\tcase '8.2':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_8_2.js');\n\t\t\tcase '8.1':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_8_1.js');\n\t\t\tcase '8.0':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_8_0.js');\n\t\t\tcase '7.4':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_7_4.js');\n\t\t\tcase '7.3':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_7_3.js');\n\t\t\tcase '7.2':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_7_2.js');\n\t\t\tcase '7.1':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_7_1.js');\n\t\t\tcase '7.0':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/jspi/php_7_0.js');\n\t\t}\n\t} else {\n\t\tswitch (version) {\n\t\t\tcase '8.3':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_8_3.js');\n\t\t\tcase '8.2':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_8_2.js');\n\t\t\tcase '8.1':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_8_1.js');\n\t\t\tcase '8.0':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_8_0.js');\n\t\t\tcase '7.4':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_7_4.js');\n\t\t\tcase '7.3':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_7_3.js');\n\t\t\tcase '7.2':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_7_2.js');\n\t\t\tcase '7.1':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_7_1.js');\n\t\t\tcase '7.0':\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn await import('../../public/php/asyncify/php_7_0.js');\n\t\t}\n\t}\n\tthrow new Error(`Unsupported PHP version ${version}`);\n}\n","export function flipObject(obj: Record<any, any>) {\n\treturn Object.fromEntries(Object.entries(obj).map(([k, v]) => [v, k]));\n}\n\nexport function concatUint8Arrays(arrays: Uint8Array[]): Uint8Array {\n\tlet totalLength = 0;\n\tarrays.forEach((a) => (totalLength += a.length));\n\tconst result = new Uint8Array(totalLength);\n\tlet offset = 0;\n\tarrays.forEach((a) => {\n\t\tresult.set(a, offset);\n\t\toffset += a.length;\n\t});\n\treturn result;\n}\n\nexport function concatArrayBuffers(buffers: ArrayBuffer[]): ArrayBuffer {\n\treturn concatUint8Arrays(buffers.map((b) => new Uint8Array(b))).buffer;\n}\n\nexport function as2Bytes(value: number): Uint8Array {\n\treturn new Uint8Array([(value >> 8) & 0xff, value & 0xff]);\n}\n\nexport function as3Bytes(value: number): Uint8Array {\n\treturn new Uint8Array([\n\t\t(value >> 16) & 0xff,\n\t\t(value >> 8) & 0xff,\n\t\tvalue & 0xff,\n\t]);\n}\n\nexport function as8Bytes(value: number): Uint8Array {\n\tconst buffer = new ArrayBuffer(8);\n\tconst view = new DataView(buffer);\n\tview.setBigUint64(0, BigInt(value), false); // false for big-endian\n\treturn new Uint8Array(buffer);\n}\nexport class ArrayBufferReader {\n\tprivate view: DataView;\n\toffset = 0;\n\tconstructor(private buffer: ArrayBuffer) {\n\t\tthis.view = new DataView(buffer);\n\t}\n\n\treadUint8(): number {\n\t\tconst value = this.view.getUint8(this.offset);\n\t\tthis.offset += 1;\n\t\treturn value;\n\t}\n\treadUint16(): number {\n\t\tconst value = this.view.getUint16(this.offset);\n\t\tthis.offset += 2;\n\t\treturn value;\n\t}\n\treadUint32(): number {\n\t\tconst value = this.view.getUint32(this.offset);\n\t\tthis.offset += 4;\n\t\treturn value;\n\t}\n\treadUint8Array(length: number): Uint8Array {\n\t\tconst value = this.buffer.slice(this.offset, this.offset + length);\n\t\tthis.offset += length;\n\t\treturn new Uint8Array(value);\n\t}\n\n\tisFinished() {\n\t\treturn this.offset >= this.buffer.byteLength;\n\t}\n}\n\nexport class ArrayBufferWriter {\n\tbuffer: ArrayBuffer;\n\tview: DataView;\n\tuint8Array: Uint8Array;\n\n\tprivate offset = 0;\n\n\tconstructor(length: number) {\n\t\tthis.buffer = new ArrayBuffer(length);\n\t\tthis.uint8Array = new Uint8Array(this.buffer);\n\t\tthis.view = new DataView(this.buffer);\n\t}\n\n\twriteUint8(value: number) {\n\t\tthis.view.setUint8(this.offset, value);\n\t\tthis.offset += 1;\n\t}\n\n\twriteUint16(value: number) {\n\t\tthis.view.setUint16(this.offset, value);\n\t\tthis.offset += 2;\n\t}\n\n\twriteUint32(value: number) {\n\t\tthis.view.setUint32(this.offset, value);\n\t\tthis.offset += 4;\n\t}\n\n\twriteUint8Array(value: Uint8Array) {\n\t\tthis.uint8Array.set(value, this.offset);\n\t\tthis.offset += value.length;\n\t}\n}\n","/**\n * IANA maintains a list of TLS extensions here:\n * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml\n */\nexport const ExtensionTypes = {\n\tserver_name: 0,\n\tmax_fragment_length: 1,\n\tclient_certificate_url: 2,\n\ttrusted_ca_keys: 3,\n\ttruncated_hmac: 4,\n\tstatus_request: 5,\n\tuser_mapping: 6,\n\tclient_authz: 7,\n\tserver_authz: 8,\n\tcert_type: 9,\n\tsupported_groups: 10,\n\tec_point_formats: 11,\n\tsrp: 12,\n\tsignature_algorithms: 13,\n\tuse_srtp: 14,\n\theartbeat: 15,\n\tapplication_layer_protocol_negotiation: 16,\n\tstatus_request_v2: 17,\n\tsigned_certificate_timestamp: 18,\n\tclient_certificate_type: 19,\n\tserver_certificate_type: 20,\n\tpadding: 21,\n\tencrypt_then_mac: 22,\n\textended_master_secret: 23,\n\ttoken_binding: 24,\n\tcached_info: 25,\n\ttls_its: 26,\n\tcompress_certificate: 27,\n\trecord_size_limit: 28,\n\tpwd_protect: 29,\n\tpwo_clear: 30,\n\tpassword_salt: 31,\n\tticket_pinning: 32,\n\ttls_cert_with_extern_psk: 33,\n\tdelegated_credential: 34,\n\tsession_ticket: 35,\n\tTLMSP: 36,\n\tTLMSP_proxying: 37,\n\tTLMSP_delegate: 38,\n\tsupported_ekt_ciphers: 39,\n\tpre_shared_key: 41,\n\tearly_data: 42,\n\tsupported_versions: 43,\n\tcookie: 44,\n\tpsk_key_exchange_modes: 45,\n\treserved: 46,\n\tcertificate_authorities: 47,\n\toid_filters: 48,\n\tpost_handshake_auth: 49,\n\tsignature_algorithms_cert: 50,\n\tkey_share: 51,\n\ttransparency_info: 52,\n\tconnection_id: 54,\n} as const;\n\nimport { flipObject } from '../utils';\n\nexport type ExtensionType = keyof typeof ExtensionTypes;\n\nexport const ExtensionNames = flipObject(ExtensionTypes);\nexport type ExtensionName = keyof typeof ExtensionNames;\n","/**\n * TLS server_name extension\n * https://www.rfc-editor.org/rfc/rfc6066.html\n */\n\nimport { ArrayBufferWriter } from '../utils';\nimport { ExtensionTypes } from './types';\nimport { flipObject } from '../utils';\n\nexport interface ServerNameList {\n\tserver_name_list: ServerName[];\n}\n\nexport interface ServerName {\n\tname_type: typeof ServerNameTypes;\n\tname: {\n\t\thost_name: string;\n\t};\n}\n\nexport const ServerNameTypes = {\n\thost_name: 0,\n} as const;\nexport type ServerNameType =\n\t(typeof ServerNameTypes)[keyof typeof ServerNameTypes];\nexport const ServerNameNames = flipObject(ServerNameTypes);\n\nexport class ServerNameExtension {\n\tstatic decodeFromClient(data: Uint8Array): ServerNameList {\n\t\tconst view = new DataView(data.buffer);\n\t\tlet offset = 0;\n\n\t\tconst listLength = view.getUint16(offset);\n\t\toffset += 2;\n\n\t\tconst serverNameList: ServerName[] = [];\n\n\t\twhile (offset < listLength + 2) {\n\t\t\tconst nameType = data[offset] as ServerNameType;\n\t\t\toffset += 1;\n\n\t\t\tconst valueLength = view.getUint16(offset);\n\t\t\toffset += 2;\n\n\t\t\tconst value = data.slice(offset, offset + valueLength);\n\t\t\toffset += valueLength;\n\n\t\t\tswitch (nameType) {\n\t\t\t\tcase ServerNameTypes.host_name:\n\t\t\t\t\tserverNameList.push({\n\t\t\t\t\t\tname_type: ServerNameNames[nameType],\n\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\thost_name: new TextDecoder().decode(value),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported name type ${nameType}`);\n\t\t\t}\n\t\t}\n\n\t\treturn { server_name_list: serverNameList };\n\t}\n\n\t/**\n\t * Encode the server_name extension\n\t *\n\t * +------------------------------------+\n\t * | Extension Type (server_name) [2B]  |\n\t * | 0x00 0x00                          |\n\t * +------------------------------------+\n\t * | Extension Length             [2B]  |\n\t * | 0x00 0x00                          |\n\t * +------------------------------------+\n\t */\n\tstatic encodeForClient(serverNames?: ServerNameList) {\n\t\tif (serverNames?.server_name_list.length) {\n\t\t\tthrow new Error(\n\t\t\t\t'Encoding non-empty lists for ClientHello is not supported yet. ' +\n\t\t\t\t\t'Only empty lists meant for ServerHello are supported today.'\n\t\t\t);\n\t\t}\n\n\t\tconst writer = new ArrayBufferWriter(4);\n\t\twriter.writeUint16(ExtensionTypes.server_name);\n\t\t// Zero body length encoded using two bytes\n\t\twriter.writeUint16(0);\n\t\treturn writer.uint8Array;\n\t}\n}\n","import { flipObject } from './utils';\n\n/**\n * TLS1 cipher suites sourced from OpenSSL:\n *\n * https://github.com/openssl/openssl/blob/36254fda37fe169e136079404a3c32aeea35cbd4/include/openssl/tls1.h#L371\n */\nexport const CipherSuites = {\n\tTLS1_CK_PSK_WITH_RC4_128_SHA: 0x008a,\n\tTLS1_CK_PSK_WITH_3DES_EDE_CBC_SHA: 0x008b,\n\tTLS1_CK_PSK_WITH_AES_128_CBC_SHA: 0x008c,\n\tTLS1_CK_PSK_WITH_AES_256_CBC_SHA: 0x008d,\n\tTLS1_CK_DHE_PSK_WITH_RC4_128_SHA: 0x008e,\n\tTLS1_CK_DHE_PSK_WITH_3DES_EDE_CBC_SHA: 0x008f,\n\tTLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA: 0x0090,\n\tTLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA: 0x0091,\n\tTLS1_CK_RSA_PSK_WITH_RC4_128_SHA: 0x0092,\n\tTLS1_CK_RSA_PSK_WITH_3DES_EDE_CBC_SHA: 0x0093,\n\tTLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA: 0x0094,\n\tTLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA: 0x0095,\n\tTLS1_CK_PSK_WITH_AES_128_GCM_SHA256: 0x00a8,\n\tTLS1_CK_PSK_WITH_AES_256_GCM_SHA384: 0x00a9,\n\tTLS1_CK_DHE_PSK_WITH_AES_128_GCM_SHA256: 0x00aa,\n\tTLS1_CK_DHE_PSK_WITH_AES_256_GCM_SHA384: 0x00ab,\n\tTLS1_CK_RSA_PSK_WITH_AES_128_GCM_SHA256: 0x00ac,\n\tTLS1_CK_RSA_PSK_WITH_AES_256_GCM_SHA384: 0x00ad,\n\tTLS1_CK_PSK_WITH_AES_128_CBC_SHA256: 0x00ae,\n\tTLS1_CK_PSK_WITH_AES_256_CBC_SHA384: 0x00af,\n\tTLS1_CK_PSK_WITH_NULL_SHA256: 0x00b0,\n\tTLS1_CK_PSK_WITH_NULL_SHA384: 0x00b1,\n\tTLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA256: 0x00b2,\n\tTLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA384: 0x00b3,\n\tTLS1_CK_DHE_PSK_WITH_NULL_SHA256: 0x00b4,\n\tTLS1_CK_DHE_PSK_WITH_NULL_SHA384: 0x00b5,\n\tTLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA256: 0x00b6,\n\tTLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA384: 0x00b7,\n\tTLS1_CK_RSA_PSK_WITH_NULL_SHA256: 0x00b8,\n\tTLS1_CK_RSA_PSK_WITH_NULL_SHA384: 0x00b9,\n\tTLS1_CK_PSK_WITH_NULL_SHA: 0x002c,\n\tTLS1_CK_DHE_PSK_WITH_NULL_SHA: 0x002d,\n\tTLS1_CK_RSA_PSK_WITH_NULL_SHA: 0x002e,\n\tTLS1_CK_RSA_WITH_AES_128_SHA: 0x002f,\n\tTLS1_CK_DH_DSS_WITH_AES_128_SHA: 0x0030,\n\tTLS1_CK_DH_RSA_WITH_AES_128_SHA: 0x0031,\n\tTLS1_CK_DHE_DSS_WITH_AES_128_SHA: 0x0032,\n\tTLS1_CK_DHE_RSA_WITH_AES_128_SHA: 0x0033,\n\tTLS1_CK_ADH_WITH_AES_128_SHA: 0x0034,\n\tTLS1_CK_RSA_WITH_AES_256_SHA: 0x0035,\n\tTLS1_CK_DH_DSS_WITH_AES_256_SHA: 0x0036,\n\tTLS1_CK_DH_RSA_WITH_AES_256_SHA: 0x0037,\n\tTLS1_CK_DHE_DSS_WITH_AES_256_SHA: 0x0038,\n\tTLS1_CK_DHE_RSA_WITH_AES_256_SHA: 0x0039,\n\tTLS1_CK_ADH_WITH_AES_256_SHA: 0x003a,\n\tTLS1_CK_RSA_WITH_NULL_SHA256: 0x003b,\n\tTLS1_CK_RSA_WITH_AES_128_SHA256: 0x003c,\n\tTLS1_CK_RSA_WITH_AES_256_SHA256: 0x003d,\n\tTLS1_CK_DH_DSS_WITH_AES_128_SHA256: 0x003e,\n\tTLS1_CK_DH_RSA_WITH_AES_128_SHA256: 0x003f,\n\tTLS1_CK_DHE_DSS_WITH_AES_128_SHA256: 0x0040,\n\tTLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA: 0x0041,\n\tTLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA: 0x0042,\n\tTLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA: 0x0043,\n\tTLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA: 0x0044,\n\tTLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: 0x0045,\n\tTLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA: 0x0046,\n\tTLS1_CK_DHE_RSA_WITH_AES_128_SHA256: 0x0067,\n\tTLS1_CK_DH_DSS_WITH_AES_256_SHA256: 0x0068,\n\tTLS1_CK_DH_RSA_WITH_AES_256_SHA256: 0x0069,\n\tTLS1_CK_DHE_DSS_WITH_AES_256_SHA256: 0x006a,\n\tTLS1_CK_DHE_RSA_WITH_AES_256_SHA256: 0x006b,\n\tTLS1_CK_ADH_WITH_AES_128_SHA256: 0x006c,\n\tTLS1_CK_ADH_WITH_AES_256_SHA256: 0x006d,\n\tTLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA: 0x0084,\n\tTLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA: 0x0085,\n\tTLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA: 0x0086,\n\tTLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA: 0x0087,\n\tTLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: 0x0088,\n\tTLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA: 0x0089,\n\tTLS1_CK_RSA_WITH_SEED_SHA: 0x0096,\n\tTLS1_CK_DH_DSS_WITH_SEED_SHA: 0x0097,\n\tTLS1_CK_DH_RSA_WITH_SEED_SHA: 0x0098,\n\tTLS1_CK_DHE_DSS_WITH_SEED_SHA: 0x0099,\n\tTLS1_CK_DHE_RSA_WITH_SEED_SHA: 0x009a,\n\tTLS1_CK_ADH_WITH_SEED_SHA: 0x009b,\n\tTLS1_CK_RSA_WITH_AES_128_GCM_SHA256: 0x009c,\n\tTLS1_CK_RSA_WITH_AES_256_GCM_SHA384: 0x009d,\n\tTLS1_CK_DHE_RSA_WITH_AES_128_GCM_SHA256: 0x009e,\n\tTLS1_CK_DHE_RSA_WITH_AES_256_GCM_SHA384: 0x009f,\n\tTLS1_CK_DH_RSA_WITH_AES_128_GCM_SHA256: 0x00a0,\n\tTLS1_CK_DH_RSA_WITH_AES_256_GCM_SHA384: 0x00a1,\n\tTLS1_CK_DHE_DSS_WITH_AES_128_GCM_SHA256: 0x00a2,\n\tTLS1_CK_DHE_DSS_WITH_AES_256_GCM_SHA384: 0x00a3,\n\tTLS1_CK_DH_DSS_WITH_AES_128_GCM_SHA256: 0x00a4,\n\tTLS1_CK_DH_DSS_WITH_AES_256_GCM_SHA384: 0x00a5,\n\tTLS1_CK_ADH_WITH_AES_128_GCM_SHA256: 0x00a6,\n\tTLS1_CK_ADH_WITH_AES_256_GCM_SHA384: 0x00a7,\n\tTLS1_CK_RSA_WITH_AES_128_CCM: 0xc09c,\n\tTLS1_CK_RSA_WITH_AES_256_CCM: 0xc09d,\n\tTLS1_CK_DHE_RSA_WITH_AES_128_CCM: 0xc09e,\n\tTLS1_CK_DHE_RSA_WITH_AES_256_CCM: 0xc09f,\n\tTLS1_CK_RSA_WITH_AES_128_CCM_8: 0xc0a0,\n\tTLS1_CK_RSA_WITH_AES_256_CCM_8: 0xc0a1,\n\tTLS1_CK_DHE_RSA_WITH_AES_128_CCM_8: 0xc0a2,\n\tTLS1_CK_DHE_RSA_WITH_AES_256_CCM_8: 0xc0a3,\n\tTLS1_CK_PSK_WITH_AES_128_CCM: 0xc0a4,\n\tTLS1_CK_PSK_WITH_AES_256_CCM: 0xc0a5,\n\tTLS1_CK_DHE_PSK_WITH_AES_128_CCM: 0xc0a6,\n\tTLS1_CK_DHE_PSK_WITH_AES_256_CCM: 0xc0a7,\n\tTLS1_CK_PSK_WITH_AES_128_CCM_8: 0xc0a8,\n\tTLS1_CK_PSK_WITH_AES_256_CCM_8: 0xc0a9,\n\tTLS1_CK_DHE_PSK_WITH_AES_128_CCM_8: 0xc0aa,\n\tTLS1_CK_DHE_PSK_WITH_AES_256_CCM_8: 0xc0ab,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM: 0xc0ac,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM: 0xc0ad,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM_8: 0xc0ae,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM_8: 0xc0af,\n\tTLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA256: 0x00ba,\n\tTLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256: 0x00bb,\n\tTLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256: 0x00bc,\n\tTLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256: 0x00bd,\n\tTLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: 0x00be,\n\tTLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA256: 0x00bf,\n\tTLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA256: 0x00c0,\n\tTLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256: 0x00c1,\n\tTLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256: 0x00c2,\n\tTLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256: 0x00c3,\n\tTLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256: 0x00c4,\n\tTLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA256: 0x00c5,\n\tTLS1_CK_ECDH_ECDSA_WITH_NULL_SHA: 0xc001,\n\tTLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA: 0xc002,\n\tTLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA: 0xc003,\n\tTLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA: 0xc004,\n\tTLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA: 0xc005,\n\tTLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA: 0xc006,\n\tTLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA: 0xc007,\n\tTLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA: 0xc008,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: 0xc009,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: 0xc00a,\n\tTLS1_CK_ECDH_RSA_WITH_NULL_SHA: 0xc00b,\n\tTLS1_CK_ECDH_RSA_WITH_RC4_128_SHA: 0xc00c,\n\tTLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA: 0xc00d,\n\tTLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA: 0xc00e,\n\tTLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA: 0xc00f,\n\tTLS1_CK_ECDHE_RSA_WITH_NULL_SHA: 0xc010,\n\tTLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA: 0xc011,\n\tTLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA: 0xc012,\n\tTLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA: 0xc013,\n\tTLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA: 0xc014,\n\tTLS1_CK_ECDH_anon_WITH_NULL_SHA: 0xc015,\n\tTLS1_CK_ECDH_anon_WITH_RC4_128_SHA: 0xc016,\n\tTLS1_CK_ECDH_anon_WITH_DES_192_CBC3_SHA: 0xc017,\n\tTLS1_CK_ECDH_anon_WITH_AES_128_CBC_SHA: 0xc018,\n\tTLS1_CK_ECDH_anon_WITH_AES_256_CBC_SHA: 0xc019,\n\tTLS1_CK_SRP_SHA_WITH_3DES_EDE_CBC_SHA: 0xc01a,\n\tTLS1_CK_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA: 0xc01b,\n\tTLS1_CK_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA: 0xc01c,\n\tTLS1_CK_SRP_SHA_WITH_AES_128_CBC_SHA: 0xc01d,\n\tTLS1_CK_SRP_SHA_RSA_WITH_AES_128_CBC_SHA: 0xc01e,\n\tTLS1_CK_SRP_SHA_DSS_WITH_AES_128_CBC_SHA: 0xc01f,\n\tTLS1_CK_SRP_SHA_WITH_AES_256_CBC_SHA: 0xc020,\n\tTLS1_CK_SRP_SHA_RSA_WITH_AES_256_CBC_SHA: 0xc021,\n\tTLS1_CK_SRP_SHA_DSS_WITH_AES_256_CBC_SHA: 0xc022,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_128_SHA256: 0xc023,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_256_SHA384: 0xc024,\n\tTLS1_CK_ECDH_ECDSA_WITH_AES_128_SHA256: 0xc025,\n\tTLS1_CK_ECDH_ECDSA_WITH_AES_256_SHA384: 0xc026,\n\tTLS1_CK_ECDHE_RSA_WITH_AES_128_SHA256: 0xc027,\n\tTLS1_CK_ECDHE_RSA_WITH_AES_256_SHA384: 0xc028,\n\tTLS1_CK_ECDH_RSA_WITH_AES_128_SHA256: 0xc029,\n\tTLS1_CK_ECDH_RSA_WITH_AES_256_SHA384: 0xc02a,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: 0xc02b,\n\tTLS1_CK_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: 0xc02c,\n\tTLS1_CK_ECDH_ECDSA_WITH_AES_128_GCM_SHA256: 0xc02d,\n\tTLS1_CK_ECDH_ECDSA_WITH_AES_256_GCM_SHA384: 0xc02e,\n\tTLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256: 0xc02f,\n\tTLS1_CK_ECDHE_RSA_WITH_AES_256_GCM_SHA384: 0xc030,\n\tTLS1_CK_ECDH_RSA_WITH_AES_128_GCM_SHA256: 0xc031,\n\tTLS1_CK_ECDH_RSA_WITH_AES_256_GCM_SHA384: 0xc032,\n\tTLS1_CK_ECDHE_PSK_WITH_RC4_128_SHA: 0xc033,\n\tTLS1_CK_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA: 0xc034,\n\tTLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA: 0xc035,\n\tTLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA: 0xc036,\n\tTLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA256: 0xc037,\n\tTLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA384: 0xc038,\n\tTLS1_CK_ECDHE_PSK_WITH_NULL_SHA: 0xc039,\n\tTLS1_CK_ECDHE_PSK_WITH_NULL_SHA256: 0xc03a,\n\tTLS1_CK_ECDHE_PSK_WITH_NULL_SHA384: 0xc03b,\n\tTLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: 0xc072,\n\tTLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: 0xc073,\n\tTLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: 0xc074,\n\tTLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: 0xc075,\n\tTLS1_CK_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: 0xc076,\n\tTLS1_CK_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384: 0xc077,\n\tTLS1_CK_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256: 0xc078,\n\tTLS1_CK_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384: 0xc079,\n\tTLS1_CK_PSK_WITH_CAMELLIA_128_CBC_SHA256: 0xc094,\n\tTLS1_CK_PSK_WITH_CAMELLIA_256_CBC_SHA384: 0xc095,\n\tTLS1_CK_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: 0xc096,\n\tTLS1_CK_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: 0xc097,\n\tTLS1_CK_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256: 0xc098,\n\tTLS1_CK_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384: 0xc099,\n\tTLS1_CK_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: 0xc09a,\n\tTLS1_CK_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: 0xc09b,\n\tTLS1_CK_ECDHE_RSA_WITH_CHACHA20_POLY1305: 0xcca8,\n\tTLS1_CK_ECDHE_ECDSA_WITH_CHACHA20_POLY1305: 0xcca9,\n\tTLS1_CK_DHE_RSA_WITH_CHACHA20_POLY1305: 0xccaa,\n\tTLS1_CK_PSK_WITH_CHACHA20_POLY1305: 0xccab,\n\tTLS1_CK_ECDHE_PSK_WITH_CHACHA20_POLY1305: 0xccac,\n\tTLS1_CK_DHE_PSK_WITH_CHACHA20_POLY1305: 0xccad,\n\tTLS1_CK_RSA_PSK_WITH_CHACHA20_POLY1305: 0xccae,\n} as const;\n\nexport const CipherSuitesNames = flipObject(CipherSuites);\n","/**\n * TLS supported_groups extension\n * https://www.iana.org/go/rfc7919\n * https://www.iana.org/go/rfc8422\n */\n\nimport { ArrayBufferReader, ArrayBufferWriter } from '../utils';\nimport { ExtensionTypes } from './types';\nimport { flipObject } from '../utils';\n\nexport const SupportedGroups = {\n\tsecp256r1: 23,\n\tsecp384r1: 24,\n\tsecp521r1: 25,\n\tx25519: 29,\n\tx448: 30,\n} as const;\nexport const SupportedGroupsNames = flipObject(SupportedGroups);\nexport type SupportedGroup = keyof typeof SupportedGroups;\n\nexport type ParsedSupportedGroups = (keyof typeof SupportedGroups)[];\n\nexport class SupportedGroupsExtension {\n\t/**\n\t * +--------------------------------------------------+\n\t * | Payload Length                            [2B]   |\n\t * +--------------------------------------------------+\n\t * | Supported Groups List Length              [2B]   |\n\t * +--------------------------------------------------+\n\t * | Supported Group 1                         [2B]   |\n\t * +--------------------------------------------------+\n\t * | Supported Group 2                         [2B]   |\n\t * +--------------------------------------------------+\n\t * | ...                                              |\n\t * +--------------------------------------------------+\n\t * | Supported Group n                         [2B]   |\n\t * +--------------------------------------------------+\n\t */\n\tstatic decodeFromClient(data: Uint8Array): ParsedSupportedGroups {\n\t\tconst reader = new ArrayBufferReader(data.buffer);\n\t\t// Skip the length field\n\t\treader.readUint16();\n\t\tconst groups = [];\n\t\twhile (!reader.isFinished()) {\n\t\t\tconst group = reader.readUint16();\n\t\t\tif (!(group in SupportedGroupsNames)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgroups.push(SupportedGroupsNames[group]);\n\t\t}\n\t\treturn groups;\n\t}\n\n\t/**\n\t * +--------------------------------------------------+\n\t * | Extension Type (supported_groups)         [2B]   |\n\t * | 0x00 0x0A                                        |\n\t * +--------------------------------------------------+\n\t * | Extension Length                          [2B]   |\n\t * +--------------------------------------------------+\n\t * | Selected Group                            [2B]   |\n\t * +--------------------------------------------------+\n\t */\n\tstatic encodeForClient(group: SupportedGroup): Uint8Array {\n\t\tconst writer = new ArrayBufferWriter(6);\n\t\twriter.writeUint16(ExtensionTypes.supported_groups);\n\t\twriter.writeUint16(2);\n\t\twriter.writeUint16(SupportedGroups[group]);\n\t\treturn writer.uint8Array;\n\t}\n}\n","/**\n * TLS ec_point_formats extension\n * https://www.rfc-editor.org/rfc/rfc4492#section-5.1.2\n */\n\nimport { ArrayBufferReader, ArrayBufferWriter } from '../utils';\nimport { ExtensionTypes } from './types';\nimport { flipObject } from '../utils';\n\nexport const ECPointFormats = {\n\tuncompressed: 0,\n\tansiX962_compressed_prime: 1,\n\tansiX962_compressed_char2: 2,\n} as const;\nexport type ECPointFormat = keyof typeof ECPointFormats;\n\nexport const ECPointFormatNames = flipObject(ECPointFormats);\n\nexport type ParsedECPointFormats = (keyof typeof ECPointFormats)[];\n\nexport class ECPointFormatsExtension {\n\t/**\n\t * +--------------------------------------------------+\n\t * | Payload Length                            [2B]   |\n\t * +--------------------------------------------------+\n\t * | EC Point Formats Length                   [1B]   |\n\t * +--------------------------------------------------+\n\t * | EC Point Format 1                         [1B]   |\n\t * +--------------------------------------------------+\n\t * | EC Point Format 2                         [1B]   |\n\t * +--------------------------------------------------+\n\t * | ...                                              |\n\t * +--------------------------------------------------+\n\t * | EC Point Format n                         [1B]   |\n\t * +--------------------------------------------------+\n\t */\n\tstatic decodeFromClient(data: Uint8Array): ParsedECPointFormats {\n\t\tconst reader = new ArrayBufferReader(data.buffer);\n\t\t// Read the EC Point Formats Length\n\t\tconst length = reader.readUint8();\n\t\tconst formats = [];\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst format = reader.readUint8();\n\t\t\tif (format in ECPointFormatNames) {\n\t\t\t\tformats.push(ECPointFormatNames[format]);\n\t\t\t}\n\t\t}\n\t\treturn formats;\n\t}\n\n\t/**\n\t * Encode the ec_point_formats extension\n\t *\n\t * +--------------------------------------------------+\n\t * | Extension Type (ec_point_formats)         [2B]   |\n\t * | 0x00 0x0B                                        |\n\t * +--------------------------------------------------+\n\t * | Body Length                               [2B]   |\n\t * +--------------------------------------------------+\n\t * | EC Point Format Length                    [1B]   |\n\t * +--------------------------------------------------+\n\t * | EC Point Format                           [1B]   |\n\t * +--------------------------------------------------+\n\t */\n\tstatic encodeForClient(format: ECPointFormat): Uint8Array {\n\t\tconst writer = new ArrayBufferWriter(6);\n\t\twriter.writeUint16(ExtensionTypes.ec_point_formats);\n\t\twriter.writeUint16(2); // Body length\n\t\twriter.writeUint8(1); // EC Point Formats Length\n\t\twriter.writeUint8(ECPointFormats[format]);\n\t\treturn writer.uint8Array;\n\t}\n}\n","/**\n * TLS signature_algorithms extension\n * https://www.rfc-editor.org/rfc/rfc8446.html#page-41\n */\n\nimport { ArrayBufferReader, ArrayBufferWriter } from '../utils';\nimport { ExtensionTypes } from './types';\nimport { flipObject } from '../utils';\nimport { logger } from '@php-wasm/logger';\n\n/**\n * A list of supported signature algorithms,\n * one byte per algorithm.\n */\nexport type SignatureAlgorithms = Uint8Array;\n\n/**\n * Signature algorithms from\n * https://datatracker.ietf.org/doc/html/rfc5246#section-7.4.1.4.1\n */\nexport const SignatureAlgorithms = {\n\tanonymous: 0,\n\trsa: 1,\n\tdsa: 2,\n\tecdsa: 3,\n};\nexport type SignatureAlgorithm = keyof typeof SignatureAlgorithms;\nexport const SignatureAlgorithmsNames = flipObject(SignatureAlgorithms);\n\n/**\n * Hash algorithms from\n * https://datatracker.ietf.org/doc/html/rfc5246#section-7.4.1.4.1\n */\nexport const HashAlgorithms = {\n\tnone: 0,\n\tmd5: 1,\n\tsha1: 2,\n\tsha224: 3,\n\tsha256: 4,\n\tsha384: 5,\n\tsha512: 6,\n};\nexport type HashAlgorithm = keyof typeof HashAlgorithms;\nexport const HashAlgorithmsNames = flipObject(HashAlgorithms);\n\nexport type ParsedSignatureAlgorithm = {\n\thash: HashAlgorithm;\n\talgorithm: SignatureAlgorithm;\n};\n\n/**\n * Handles the signature algorithms extension as defined in\n * https://www.rfc-editor.org/rfc/rfc8446.html#page-41\n */\nexport class SignatureAlgorithmsExtension {\n\t/**\n\t * Binary layout:\n\t *\n\t * +------------------------------------+\n\t * | Payload Length              [2B]   |\n\t * +------------------------------------+\n\t * | Hash Algorithm 1            [1B]   |\n\t * | Signature Algorithm 1       [1B]   |\n\t * +------------------------------------+\n\t * | Hash Algorithm 2            [1B]   |\n\t * | Signature Algorithm 2       [1B]   |\n\t * +------------------------------------+\n\t * | ...                                |\n\t * +------------------------------------+\n\t */\n\tstatic decodeFromClient(data: Uint8Array): ParsedSignatureAlgorithm[] {\n\t\tconst reader = new ArrayBufferReader(data.buffer);\n\t\treader.readUint16(); // Skip algorithms length\n\t\tconst parsedAlgorithms: ParsedSignatureAlgorithm[] = [];\n\t\twhile (!reader.isFinished()) {\n\t\t\tconst hash = reader.readUint8();\n\t\t\tconst algorithm = reader.readUint8();\n\t\t\tif (!SignatureAlgorithmsNames[algorithm]) {\n\t\t\t\tlogger.warn(`Unknown signature algorithm: ${algorithm}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!HashAlgorithmsNames[hash]) {\n\t\t\t\tlogger.warn(`Unknown hash algorithm: ${hash}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tparsedAlgorithms.push({\n\t\t\t\talgorithm: SignatureAlgorithmsNames[algorithm],\n\t\t\t\thash: HashAlgorithmsNames[hash],\n\t\t\t});\n\t\t}\n\t\treturn parsedAlgorithms;\n\t}\n\n\t/**\n\t * +--------------------------------------------------+\n\t * | Extension Type (signature_algorithms)     [2B]   |\n\t * | 0x00 0x0D                                        |\n\t * +--------------------------------------------------+\n\t * | Body Length                               [2B]   |\n\t * +--------------------------------------------------+\n\t * | Hash Algorithm                            [1B]   |\n\t * | Signature Algorithm                       [1B]   |\n\t * +--------------------------------------------------+\n\t */\n\tstatic encodeforClient(\n\t\thash: HashAlgorithm,\n\t\talgorithm: SignatureAlgorithm\n\t): Uint8Array {\n\t\tconst writer = new ArrayBufferWriter(6);\n\t\twriter.writeUint16(ExtensionTypes.signature_algorithms);\n\t\twriter.writeUint16(2);\n\t\twriter.writeUint8(HashAlgorithms[hash]);\n\t\twriter.writeUint8(SignatureAlgorithms[algorithm]);\n\t\treturn writer.uint8Array;\n\t}\n}\n","/**\n * Glue for the implemented TLS extensions\n * For the full list of TLS extensions, see\n * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml */\nimport { ArrayBufferReader } from '../utils';\nimport { ServerNameExtension, ServerNameList } from './0_server_name';\nimport {\n\tParsedSupportedGroups,\n\tSupportedGroupsExtension,\n} from './10_supported_groups';\nimport {\n\tParsedECPointFormats,\n\tECPointFormatsExtension,\n} from './11_ec_point_formats';\nimport {\n\tSignatureAlgorithms,\n\tSignatureAlgorithmsExtension,\n} from './13_signature_algorithms';\nimport { ExtensionNames } from './types';\n\nexport const TLSExtensionsHandlers = {\n\tserver_name: ServerNameExtension,\n\tsignature_algorithms: SignatureAlgorithmsExtension,\n\tsupported_groups: SupportedGroupsExtension,\n\tec_point_formats: ECPointFormatsExtension,\n} as const;\n\nexport type SupportedTLSExtension = keyof typeof TLSExtensionsHandlers;\n\nexport type ParsedExtension =\n\t| {\n\t\t\ttype: 'server_name';\n\t\t\tdata: ServerNameList;\n\t\t\traw: Uint8Array;\n\t  }\n\t| {\n\t\t\ttype: 'signature_algorithms';\n\t\t\tdata: SignatureAlgorithms;\n\t\t\traw: Uint8Array;\n\t  }\n\t| {\n\t\t\ttype: 'ec_point_formats';\n\t\t\tdata: ParsedECPointFormats;\n\t\t\traw: Uint8Array;\n\t  }\n\t| {\n\t\t\ttype: 'supported_groups';\n\t\t\tdata: ParsedSupportedGroups;\n\t\t\traw: Uint8Array;\n\t  };\n\n/**\n * The extensions in a ClientHello message are encoded as follows:\n *\n * struct {\n *     ExtensionType extension_type;\n *     opaque extension_data<0..2^16-1>;\n * } Extension;\n *\n * The overall extensions structure is:\n *\n * Extension extensions<0..2^16-1>;\n *\n * This means:\n * •\tThere's a 2-byte length field for the entire extensions block.\n * •\tFollowed by zero or more individual extensions.\n *\n * Binary Data Layout\n *\n * +-----------------------------+\n * | Extension 1 Type (2 bytes)  |\n * +-----------------------------+\n * | Extension 1 Length (2 bytes)|\n * +-----------------------------+\n * | Extension 1 Data (variable) |\n * +-----------------------------+\n * | Extension 2 Type (2 bytes)  |\n * +-----------------------------+\n * | Extension 2 Length (2 bytes)|\n * +-----------------------------+\n * | Extension 2 Data (variable) |\n * +-----------------------------+\n * | ... (more extensions)       |\n * +-----------------------------+\n *\n * @param data\n * @returns\n */\nexport function parseClientHelloExtensions(data: Uint8Array) {\n\tconst reader = new ArrayBufferReader(data.buffer);\n\n\tconst parsed: ParsedExtension[] = [];\n\twhile (!reader.isFinished()) {\n\t\tconst initialOffset = reader.offset;\n\t\tconst extensionType = reader.readUint16();\n\t\tconst extensionTypeName = ExtensionNames[extensionType];\n\t\tconst extensionLength = reader.readUint16();\n\t\tconst extensionBytes = reader.readUint8Array(extensionLength);\n\n\t\tif (!(extensionTypeName in TLSExtensionsHandlers)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst handler =\n\t\t\tTLSExtensionsHandlers[\n\t\t\t\textensionTypeName as keyof typeof TLSExtensionsHandlers\n\t\t\t];\n\t\tparsed.push({\n\t\t\ttype: extensionTypeName,\n\t\t\tdata: handler.decodeFromClient(extensionBytes) as any,\n\t\t\traw: data.slice(initialOffset, initialOffset + 4 + extensionLength),\n\t\t});\n\t}\n\n\treturn parsed;\n}\n","import { concatArrayBuffers } from '../utils';\n\n/**\n * Implements the TLS 1.2 PRF using HMAC-SHA256.\n *\n * See https://datatracker.ietf.org/doc/html/rfc5246#section-5\n */\nexport async function tls12Prf(\n\tsecret: ArrayBuffer,\n\tlabel: ArrayBuffer,\n\tseed: ArrayBuffer,\n\toutputLength: number\n): Promise<ArrayBuffer> {\n\tconst seedBytes = concatArrayBuffers([label, seed]);\n\n\t// Import the secret as a CryptoKey\n\tconst hmacKey = await crypto.subtle.importKey(\n\t\t'raw',\n\t\tsecret,\n\t\t{ name: 'HMAC', hash: { name: 'SHA-256' } },\n\t\tfalse,\n\t\t['sign']\n\t);\n\n\tlet A = seedBytes; // Initialize A(0) = seedBytes\n\tconst resultBuffers: ArrayBuffer[] = [];\n\n\twhile (concatArrayBuffers(resultBuffers).byteLength < outputLength) {\n\t\t// A(i) = HMAC_hash(secret, A(i-1))\n\t\tA = await hmacSha256(hmacKey, A);\n\n\t\t// Compute HMAC_hash(secret, A(i) + seedBytes)\n\t\tconst hmacInput = concatArrayBuffers([A, seedBytes]);\n\t\tconst fragment = await hmacSha256(hmacKey, hmacInput);\n\n\t\tresultBuffers.push(fragment);\n\t}\n\n\t// Concatenate and trim the result to the desired length\n\tconst fullResult = concatArrayBuffers(resultBuffers);\n\treturn fullResult.slice(0, outputLength);\n}\n\nexport async function hmacSha256(\n\tkey: CryptoKey,\n\tdata: ArrayBuffer\n): Promise<ArrayBuffer> {\n\treturn await crypto.subtle.sign(\n\t\t{ name: 'HMAC', hash: 'SHA-256' },\n\t\tkey,\n\t\tdata\n\t);\n}\n","/**\n * TLS 1.2 Record layer types defined after the structs\n * from the TLS 1.2 RFC.\n * https://datatracker.ietf.org/doc/html/rfc5246#section-6.2\n */\n\nimport { ParsedExtension } from '../extensions/parse-extensions';\nimport { flipObject } from '../utils';\n\nexport const enum CompressionMethod {\n\tNull = 0,\n\tDeflate = 1,\n}\n\n/**\n * TLS 1.2 Record layer types defined after the structs\n * from the TLS 1.2 RFC.\n * https://datatracker.ietf.org/doc/html/rfc5246#section-6.2.1\n */\n\nexport interface TLSRecord {\n\ttype: ContentType; // 1 byte\n\tversion: ProtocolVersion; // 2 bytes\n\tlength: number; // 2 bytes\n\tfragment: Uint8Array; // variable length\n}\n\nexport interface ProtocolVersion {\n\tmajor: number;\n\tminor: number;\n}\n\nexport interface GenericStreamCipher {\n\tcontent: Uint8Array;\n\tMAC: Uint8Array;\n}\n\nexport interface GenericBlockCipher {\n\tIV: Uint8Array;\n\tblock_ciphered: BlockCiphered;\n}\n\nexport interface BlockCiphered {\n\tcontent: Uint8Array;\n\tMAC: Uint8Array;\n\tpadding: Uint8Array;\n\tpadding_length: number;\n}\n\nexport interface GenericAEADCipher {\n\tnonce_explicit: Uint8Array;\n\taead_encrypted: Uint8Array;\n}\n\n/**\n * TLS 1.2 Handshake types defined after the structs\n * from the TLS 1.2 RFC.\n * https://datatracker.ietf.org/doc/html/rfc5246#section-7.4\n */\n\nexport type TLSMessage =\n\t| AlertMessage\n\t| HandshakeMessage<any>\n\t| ChangeCipherSpecMessage\n\t| ApplicationDataMessage;\n\nexport interface AlertMessage {\n\ttype: typeof ContentTypes.Alert;\n\tlevel: AlertLevel;\n\tdescription: AlertDescription;\n}\n\nexport const AlertLevels = {\n\tWarning: 1,\n\tFatal: 2,\n} as const;\nexport type AlertLevel = (typeof AlertLevels)[keyof typeof AlertLevels];\nexport const AlertLevelNames = flipObject(AlertLevels);\n\nexport const AlertDescriptions = {\n\tCloseNotify: 0,\n\tUnexpectedMessage: 10,\n\tBadRecordMac: 20,\n\tDecryptionFailed: 21,\n\tRecordOverflow: 22,\n\tDecompressionFailure: 30,\n\tHandshakeFailure: 40,\n\tNoCertificate: 41,\n\tBadCertificate: 42,\n\tUnsupportedCertificate: 43,\n\tCertificateRevoked: 44,\n\tCertificateExpired: 45,\n\tCertificateUnknown: 46,\n\tIllegalParameter: 47,\n\tUnknownCa: 48,\n\tAccessDenied: 49,\n\tDecodeError: 50,\n\tDecryptError: 51,\n\tExportRestriction: 60,\n\tProtocolVersion: 70,\n\tInsufficientSecurity: 71,\n\tInternalError: 80,\n\tUserCanceled: 90,\n\tNoRenegotiation: 100,\n\tUnsupportedExtension: 110,\n} as const;\nexport type AlertDescription =\n\t(typeof AlertDescriptions)[keyof typeof AlertDescriptions];\nexport const AlertDescriptionNames = flipObject(AlertDescriptions);\n\nexport interface ChangeCipherSpecMessage {\n\ttype: typeof ContentTypes.ChangeCipherSpec;\n\tbody: Uint8Array;\n}\n\nexport interface ApplicationDataMessage {\n\ttype: typeof ContentTypes.ApplicationData;\n\tbody: Uint8Array;\n}\n\nexport const ContentTypes = {\n\tChangeCipherSpec: 20,\n\tAlert: 21,\n\tHandshake: 22,\n\tApplicationData: 23,\n} as const;\nexport type ContentType = (typeof ContentTypes)[keyof typeof ContentTypes];\n\nexport const enum HandshakeType {\n\tHelloRequest = 0,\n\tClientHello = 1,\n\tServerHello = 2,\n\tCertificate = 11,\n\tServerKeyExchange = 12,\n\tCertificateRequest = 13,\n\tServerHelloDone = 14,\n\tCertificateVerify = 15,\n\tClientKeyExchange = 16,\n\n\tFinished = 20,\n}\n\nexport type HandshakeMessageBody =\n\t| HelloRequest\n\t| ClientHello\n\t| ServerHello\n\t| Certificate\n\t| ServerKeyExchange\n\t| CertificateRequest\n\t| ServerHelloDone\n\t| CertificateVerify\n\t| ClientKeyExchange\n\t| Finished;\n\nexport interface HandshakeMessage<Body extends HandshakeMessageBody> {\n\ttype: typeof ContentTypes.Handshake;\n\tmsg_type: HandshakeType; // 1 byte\n\tlength: number; // 2 bytes\n\t// Custom property to hold the raw body of the message\n\tbody: Body;\n}\n\n// Specific Handshake Message Types\nexport interface HelloRequest {} // Empty for TLS 1.2\n\n/**\n * 1 byte\n */\nexport type SessionId = Uint8Array;\nexport interface ClientHello {\n\tclient_version: Uint8Array; // 2 bytes\n\trandom: Uint8Array; // 32 bytes\n\tsession_id: SessionId;\n\tcipher_suites: string[];\n\tcompression_methods: Uint8Array;\n\textensions: ParsedExtension[];\n}\n\nexport interface ServerHello {\n\tserver_version: Uint8Array; // 2 bytes\n\trandom: Uint8Array; // 32 bytes\n\tsession_id: Uint8Array;\n\tcipher_suite: Uint8Array; // 2 bytes\n\tcompression_method: number;\n\textensions?: Uint8Array;\n}\n\nexport interface Certificate {\n\tcertificate_list: Uint8Array[];\n}\n\nexport interface ServerKeyExchange {\n\tparams: Uint8Array;\n\tsigned_params: Uint8Array;\n}\n\n/**\n * ECCurveType from\n * https://datatracker.ietf.org/doc/html/rfc4492#section-5.4\n */\nexport const ECCurveTypes = {\n\t/**\n\t * Indicates the elliptic curve domain parameters are\n\t * conveyed verbosely, and the underlying finite field is a prime\n\t * field.\n\t */\n\tExplicitPrime: 1,\n\t/**\n\t * Indicates the elliptic curve domain parameters are\n\t * conveyed verbosely, and the underlying finite field is a\n\t * characteristic-2 field.\n\t */\n\tExplicitChar2: 2,\n\t/**\n\t * Indicates that a named curve is used.  This option\n\t * SHOULD be used when applicable.\n\t */\n\tNamedCurve: 3,\n\t/**\n\t * Values 248 through 255 are reserved for private use.\n\t */\n};\n\n/**\n * Named elliptic curves from\n * https://datatracker.ietf.org/doc/html/rfc4492#section-5.1.1\n */\nexport const ECNamedCurves = {\n\tsect163k1: 1,\n\tsect163r1: 2,\n\tsect163r2: 3,\n\tsect193r1: 4,\n\tsect193r2: 5,\n\tsect233k1: 6,\n\tsect233r1: 7,\n\tsect239k1: 8,\n\tsect283k1: 9,\n\tsect283r1: 10,\n\tsect409k1: 11,\n\tsect409r1: 12,\n\tsecp256k1: 22,\n\tsecp256r1: 23,\n\tsecp384r1: 24,\n\tsecp521r1: 25,\n\tarbitrary_explicit_prime_curves: 0xff01,\n\tarbitrary_explicit_char2_curves: 0xff02,\n};\n\nexport interface CertificateRequest {\n\tcertificate_types: Uint8Array;\n\tsupported_signature_algorithms: Uint8Array;\n\tcertificate_authorities: Uint8Array;\n}\n\nexport interface ServerHelloDone {} // Empty for TLS 1.2\n\nexport interface CertificateVerify {\n\talgorithm: Uint8Array;\n\tsignature: Uint8Array;\n}\n\nexport interface ClientKeyExchange {\n\texchange_keys: Uint8Array;\n}\n\nexport interface Finished {\n\tverify_data: Uint8Array;\n}\n\nexport type SessionKeys = {\n\tmasterSecret: Uint8Array;\n\tclientWriteKey: CryptoKey;\n\tserverWriteKey: CryptoKey;\n\tclientIV: Uint8Array;\n\tserverIV: Uint8Array;\n};\n","import { ServerNameExtension } from '../extensions/0_server_name';\nimport { CipherSuitesNames } from '../cipher-suites';\nimport { CipherSuites } from '../cipher-suites';\nimport { SupportedGroupsExtension } from '../extensions/10_supported_groups';\nimport { ECPointFormatsExtension } from '../extensions/11_ec_point_formats';\nimport { parseClientHelloExtensions } from '../extensions/parse-extensions';\nimport {\n\tArrayBufferReader,\n\tas2Bytes,\n\tas3Bytes,\n\tas8Bytes,\n\tconcatUint8Arrays,\n} from '../utils';\nimport {\n\tHashAlgorithms,\n\tSignatureAlgorithms,\n\tSignatureAlgorithmsExtension,\n} from '../extensions/13_signature_algorithms';\nimport { tls12Prf } from './prf';\nimport {\n\tCompressionMethod,\n\tSessionKeys,\n\tHandshakeType,\n\tContentTypes,\n\tHandshakeMessage,\n\tClientHello,\n\tClientKeyExchange,\n\tFinished,\n\tApplicationDataMessage,\n\tAlertMessage,\n\tChangeCipherSpecMessage,\n\tTLSMessage,\n\tContentType,\n\tTLSRecord,\n\tAlertLevelNames,\n\tAlertDescriptionNames,\n\tHandshakeMessageBody,\n\tHelloRequest,\n\tECCurveTypes,\n\tECNamedCurves,\n} from './types';\n\nclass TLSConnectionClosed extends Error {}\nconst TLS_Version_1_2 = new Uint8Array([0x03, 0x03]);\n\n/**\n * Reuse the same ECDHE key pair for all connections to\n * save some CPU cycles. We can do this because this TLS\n * implementation is not meant to be secure.\n */\nconst generalEcdheKeyPair = crypto.subtle.generateKey(\n\t{\n\t\tname: 'ECDH',\n\t\tnamedCurve: 'P-256', // Use secp256r1 curve\n\t},\n\ttrue, // Extractable\n\t['deriveKey', 'deriveBits'] // Key usage\n);\n\n/**\n * This isomorphic class implements the server end of\n * the client <-> server TLS 1.2 connection. It has two ends:\n *\n * * Client end, that emits and accepts TLS encrypted data.\n * * Server end, that emits and accepts unencrypted data.\n *\n * The API consumer is responsible for connecting both ends\n * to the appropriate handlers.\n *\n * See https://datatracker.ietf.org/doc/html/rfc5246.\n *\n * ## Warning\n *\n * **WARNING** NEVER USE THIS CODE AS A SERVER-SIDE TLS HANDLER.\n *\n * This code is not secure. It is a minimal subset required\n * to decrypt the TLS traffic from a PHP-wasm worker. Yes,\n * it can speak TLS. No, it won't protect your data.\n *\n * ## Rationale\n *\n * This is useful for running PHP.wasm in web browsers.\n * Function calls such as `file_get_contents(\"https://w.org\")`\n * emit encrypted TLS traffic. With this class, you\n * can decrypt it, serve the requested data, and encrypt\n * the response before passing it back to the PHP.wasm\n * module.\n *\n * ## Implementation details\n *\n * TLS_1_2_Connection implements the minimal subset of TLS 1.2\n * required to exchange encrypted data with PHP.wasm:\n *\n * * TLS Handshake\n * * All TLS 1.2 record types, including messages spanning multiple\n *   records and empty records.\n * * Encryption and decryption of application data.\n * * Auto-chunking long data blobs before encrypting them to\n *   respect the AES-GCM record size limit.\n *\n * The logic is based on numerous RFCs:\n *\n * * RFC 5246: The TLS Protocol Version 1.2\n * * RFC 8446: TLS 1.3\n * * RFC 6066: TLS Extensions\n * * RFC 4492: Elliptic Curve Cryptography (ECC) Cipher Suites for TLS\n * * RFC 5288: AES Galois Counter Mode (GCM) Cipher Suites for TLS\n * * RFC 6070: PKCS #5: Password-Based Key Derivation Function 2 (PBKDF2) Test Vectors\n *\n * ... and a few others.\n *\n * ## Limitations\n *\n * * Multiple ChangeCipherSpec messages are not supported.\n * * Only uncompressed mode (compression method 0) is supported.\n * * Only the TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256 cipher suite is\n *   supported, primarily because `crypto.subtle` supports AES-GCM.\n *   For AES-GCM details, see https://datatracker.ietf.org/doc/html/rfc5288.\n */\nexport class TLS_1_2_Connection {\n\t/**\n\t * Sequence number of the last received TLS  record.\n\t *\n\t * AES-GCM requires transmitting the sequence number\n\t * in the clear in the additional data to prevent a\n\t * potential attacker from re-transmitting the same\n\t * TLS record in a different context.\n\t */\n\tprivate receivedRecordSequenceNumber = 0;\n\n\t/**\n\t * Sequence number of the last sent TLS record.\n\t *\n\t * AES-GCM requires transmitting the sequence number\n\t * in the clear in the additional data to prevent a\n\t * potential attacker from re-transmitting the same\n\t * TLS record in a different context.\n\t */\n\tprivate sentRecordSequenceNumber = 0;\n\n\t/**\n\t * Encryption keys for this connection derived during\n\t * the TLS handshake.\n\t */\n\tprivate sessionKeys: SessionKeys | undefined;\n\n\t/**\n\t * Whether this connection have been closed.\n\t */\n\tprivate closed = false;\n\n\t/**\n\t * Bytes received from the client but not yet parsed\n\t * as TLS records.\n\t */\n\tprivate receivedBytesBuffer: Uint8Array = new Uint8Array();\n\n\t/**\n\t * TLS records received from the client but not yet\n\t * parsed as TLS messages.\n\t */\n\tprivate receivedTLSRecords: Array<TLSRecord> = [];\n\n\t/**\n\t * TLS messages can span multiple TLS records. This\n\t * map holds partial TLS messages that are still incomplete\n\t * after parsing one or more TLS records.\n\t */\n\tprivate partialTLSMessages: Partial<Record<ContentType, Uint8Array>> = {};\n\n\t/**\n\t * A log of all the exchanged TLS handshake messages.\n\t * This is required to build the Finished message and\n\t * verify the integrity of the handshake.\n\t */\n\tprivate handshakeMessages: Uint8Array[] = [];\n\n\t/**\n\t * Maximum chunk size supported by the cipher suite used\n\t * in this TLS implementation.\n\t */\n\tprivate MAX_CHUNK_SIZE = 1024 * 16;\n\n\t/**\n\t * The client end of the TLS connection.\n\t * This is where the WASM module can write and read the\n\t * encrypted data.\n\t */\n\tclientEnd = {\n\t\t// We don't need to chunk the encrypted data.\n\t\t// OpenSSL already done that for us.\n\t\tupstream: new TransformStream<Uint8Array, Uint8Array>(),\n\t\tdownstream: new TransformStream<Uint8Array, Uint8Array>(),\n\t};\n\n\tprivate clientDownstreamWriter =\n\t\tthis.clientEnd.downstream.writable.getWriter();\n\tprivate clientUpstreamReader = this.clientEnd.upstream.readable.getReader();\n\n\t/**\n\t * The server end of the TLS connection.\n\t * This is where the JavaScript handler can write and read the\n\t * unencrypted data.\n\t */\n\tserverEnd = {\n\t\tupstream: new TransformStream<Uint8Array, Uint8Array>(),\n\t\t/**\n\t\t * Chunk the data before encrypting it. The\n\t\t * TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256 cipher suite\n\t\t * only supports up to 16KB of data per record.\n\t\t *\n\t\t * This will spread some messages across multiple records,\n\t\t * but TLS supports it so that's fine.\n\t\t */\n\t\tdownstream: chunkStream(this.MAX_CHUNK_SIZE),\n\t};\n\n\tprivate serverUpstreamWriter = this.serverEnd.upstream.writable.getWriter();\n\n\tconstructor() {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst tlsConnection = this;\n\t\t// Whenever the \"server handler\" produces data, encrypt it\n\t\t// and send it back to the client.\n\t\tthis.serverEnd.downstream.readable\n\t\t\t.pipeTo(\n\t\t\t\tnew WritableStream({\n\t\t\t\t\tasync write(chunk) {\n\t\t\t\t\t\tawait tlsConnection.writeTLSRecord(\n\t\t\t\t\t\t\tContentTypes.ApplicationData,\n\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tasync abort(e) {\n\t\t\t\t\t\ttlsConnection.clientDownstreamWriter.releaseLock();\n\t\t\t\t\t\ttlsConnection.clientEnd.downstream.writable.abort(e);\n\t\t\t\t\t\ttlsConnection.close();\n\t\t\t\t\t},\n\t\t\t\t\tclose() {\n\t\t\t\t\t\ttlsConnection.close();\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t)\n\t\t\t.catch(() => {\n\t\t\t\t// Ignore failures arising from stream errors. The caller\n\t\t\t\t// should react to the readable stream erroring out.\n\t\t\t});\n\t}\n\n\t/**\n\t * Marks this connections as closed and closes all the associated\n\t * streams.\n\t */\n\tasync close() {\n\t\tif (this.closed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.closed = true;\n\t\ttry {\n\t\t\tawait this.clientDownstreamWriter.close();\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t\ttry {\n\t\t\tawait this.clientUpstreamReader.cancel();\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t\ttry {\n\t\t\tawait this.serverUpstreamWriter.close();\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t\ttry {\n\t\t\tawait this.clientEnd.upstream.readable.cancel();\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t\ttry {\n\t\t\tawait this.clientEnd.downstream.writable.close();\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t}\n\n\t/**\n\t * TLS handshake as per RFC 5246.\n\t *\n\t * https://datatracker.ietf.org/doc/html/rfc5246#section-7.4\n\t */\n\tasync TLSHandshake(\n\t\tcertificatePrivateKey: CryptoKey,\n\t\tcertificatesDER: Uint8Array[]\n\t): Promise<void> {\n\t\t// Step 1: Receive ClientHello\n\t\tconst clientHelloRecord = await this.readNextHandshakeMessage(\n\t\t\tHandshakeType.ClientHello\n\t\t);\n\t\tif (!clientHelloRecord.body.cipher_suites.length) {\n\t\t\tthrow new Error(\n\t\t\t\t'Client did not propose any supported cipher suites.'\n\t\t\t);\n\t\t}\n\n\t\t// Step 2: Choose hashing, encryption etc. and tell the\n\t\t//         client about our choices. Also share the certificate\n\t\t//         and the encryption keys.\n\t\tconst serverRandom = crypto.getRandomValues(new Uint8Array(32));\n\t\tawait this.writeTLSRecord(\n\t\t\tContentTypes.Handshake,\n\t\t\tMessageEncoder.serverHello(\n\t\t\t\tclientHelloRecord.body,\n\t\t\t\tserverRandom,\n\t\t\t\tCompressionMethod.Null\n\t\t\t)\n\t\t);\n\n\t\tawait this.writeTLSRecord(\n\t\t\tContentTypes.Handshake,\n\t\t\tMessageEncoder.certificate(certificatesDER)\n\t\t);\n\n\t\tconst ecdheKeyPair = await generalEcdheKeyPair;\n\t\tconst clientRandom = clientHelloRecord.body.random;\n\t\tconst serverKeyExchange = await MessageEncoder.ECDHEServerKeyExchange(\n\t\t\tclientRandom,\n\t\t\tserverRandom,\n\t\t\tecdheKeyPair,\n\t\t\tcertificatePrivateKey\n\t\t);\n\t\tawait this.writeTLSRecord(ContentTypes.Handshake, serverKeyExchange);\n\t\tawait this.writeTLSRecord(\n\t\t\tContentTypes.Handshake,\n\t\t\tMessageEncoder.serverHelloDone()\n\t\t);\n\n\t\t// Step 3: Receive the client's response, encryption keys, and\n\t\t//         decrypt the first encrypted message.\n\t\tconst clientKeyExchangeRecord = await this.readNextHandshakeMessage(\n\t\t\tHandshakeType.ClientKeyExchange\n\t\t);\n\t\tawait this.readNextMessage(ContentTypes.ChangeCipherSpec);\n\n\t\tthis.sessionKeys = await this.deriveSessionKeys({\n\t\t\tclientRandom,\n\t\t\tserverRandom,\n\t\t\tserverPrivateKey: ecdheKeyPair.privateKey,\n\t\t\tclientPublicKey: await crypto.subtle.importKey(\n\t\t\t\t'raw',\n\t\t\t\tclientKeyExchangeRecord.body.exchange_keys,\n\t\t\t\t{ name: 'ECDH', namedCurve: 'P-256' },\n\t\t\t\tfalse,\n\t\t\t\t[]\n\t\t\t),\n\t\t});\n\n\t\tawait this.readNextHandshakeMessage(HandshakeType.Finished);\n\n\t\t// We're not actually verifying the hash provided by client\n\t\t// as we're not concerned with the client's identity.\n\n\t\tawait this.writeTLSRecord(\n\t\t\tContentTypes.ChangeCipherSpec,\n\t\t\tMessageEncoder.changeCipherSpec()\n\t\t);\n\t\tawait this.writeTLSRecord(\n\t\t\tContentTypes.Handshake,\n\t\t\tawait MessageEncoder.createFinishedMessage(\n\t\t\t\tthis.handshakeMessages,\n\t\t\t\tthis.sessionKeys!.masterSecret\n\t\t\t)\n\t\t);\n\t\t// Clean up the handshake messages as they are no longer needed.\n\t\tthis.handshakeMessages = [];\n\n\t\tthis.pollForClientMessages();\n\t}\n\n\t/**\n\t * Derives the session keys from the random values and the\n\t * pre-master secret – as per RFC 5246.\n\t */\n\tprivate async deriveSessionKeys({\n\t\tclientRandom,\n\t\tserverRandom,\n\t\tserverPrivateKey,\n\t\tclientPublicKey,\n\t}: {\n\t\tclientRandom: Uint8Array;\n\t\tserverRandom: Uint8Array;\n\t\tserverPrivateKey: CryptoKey;\n\t\tclientPublicKey: CryptoKey;\n\t}): Promise<SessionKeys> {\n\t\tconst preMasterSecret = await crypto.subtle.deriveBits(\n\t\t\t{\n\t\t\t\tname: 'ECDH',\n\t\t\t\tpublic: clientPublicKey,\n\t\t\t},\n\t\t\tserverPrivateKey,\n\t\t\t256 // Length of the derived secret (256 bits for P-256)\n\t\t);\n\n\t\tconst masterSecret = new Uint8Array(\n\t\t\tawait tls12Prf(\n\t\t\t\tpreMasterSecret,\n\t\t\t\tnew TextEncoder().encode('master secret'),\n\t\t\t\tconcatUint8Arrays([clientRandom, serverRandom]),\n\t\t\t\t48\n\t\t\t)\n\t\t);\n\n\t\tconst keyBlock = await tls12Prf(\n\t\t\tmasterSecret,\n\t\t\tnew TextEncoder().encode('key expansion'),\n\t\t\tconcatUint8Arrays([serverRandom, clientRandom]),\n\t\t\t// Client key, server key, client IV, server IV\n\t\t\t16 + 16 + 4 + 4\n\t\t);\n\n\t\tconst reader = new ArrayBufferReader(keyBlock);\n\t\tconst clientWriteKey = reader.readUint8Array(16);\n\t\tconst serverWriteKey = reader.readUint8Array(16);\n\t\tconst clientIV = reader.readUint8Array(4);\n\t\tconst serverIV = reader.readUint8Array(4);\n\n\t\treturn {\n\t\t\tmasterSecret,\n\t\t\tclientWriteKey: await crypto.subtle.importKey(\n\t\t\t\t'raw',\n\t\t\t\tclientWriteKey,\n\t\t\t\t{ name: 'AES-GCM' },\n\t\t\t\tfalse,\n\t\t\t\t['encrypt', 'decrypt']\n\t\t\t),\n\t\t\tserverWriteKey: await crypto.subtle.importKey(\n\t\t\t\t'raw',\n\t\t\t\tserverWriteKey,\n\t\t\t\t{ name: 'AES-GCM' },\n\t\t\t\tfalse,\n\t\t\t\t['encrypt', 'decrypt']\n\t\t\t),\n\t\t\tclientIV,\n\t\t\tserverIV,\n\t\t};\n\t}\n\n\tprivate async readNextHandshakeMessage(\n\t\tmessageType: HandshakeType.ClientHello\n\t): Promise<HandshakeMessage<ClientHello>>;\n\tprivate async readNextHandshakeMessage(\n\t\tmessageType: HandshakeType.ClientKeyExchange\n\t): Promise<HandshakeMessage<ClientKeyExchange>>;\n\tprivate async readNextHandshakeMessage(\n\t\tmessageType: HandshakeType.Finished\n\t): Promise<HandshakeMessage<Finished>>;\n\tprivate async readNextHandshakeMessage(\n\t\tmessageType:\n\t\t\t| HandshakeType.ClientHello\n\t\t\t| HandshakeType.ClientKeyExchange\n\t\t\t| HandshakeType.Finished\n\t): Promise<HandshakeMessage<any>> {\n\t\tconst message = await this.readNextMessage(ContentTypes.Handshake);\n\t\tif (message.msg_type !== messageType) {\n\t\t\tthrow new Error(`Expected ${messageType} message`);\n\t\t}\n\t\treturn message;\n\t}\n\n\tprivate async readNextMessage(\n\t\trequestedType: (typeof ContentTypes)['Handshake']\n\t): Promise<HandshakeMessage<any>>;\n\tprivate async readNextMessage(\n\t\trequestedType: (typeof ContentTypes)['ApplicationData']\n\t): Promise<ApplicationDataMessage>;\n\tprivate async readNextMessage(\n\t\trequestedType: (typeof ContentTypes)['Alert']\n\t): Promise<AlertMessage>;\n\tprivate async readNextMessage(\n\t\trequestedType: (typeof ContentTypes)['ChangeCipherSpec']\n\t): Promise<ChangeCipherSpecMessage>;\n\tprivate async readNextMessage<Message extends TLSMessage>(\n\t\trequestedType: ContentType\n\t): Promise<Message> {\n\t\tlet record: TLSRecord;\n\t\tlet accumulatedPayload: false | Uint8Array = false;\n\t\tdo {\n\t\t\trecord = await this.readNextTLSRecord(requestedType);\n\t\t\taccumulatedPayload = await this.accumulateUntilMessageIsComplete(\n\t\t\t\trecord\n\t\t\t);\n\t\t} while (accumulatedPayload === false);\n\n\t\tconst message = TLSDecoder.TLSMessage(\n\t\t\trecord.type,\n\t\t\taccumulatedPayload\n\t\t) as Message;\n\t\tif (record.type === ContentTypes.Handshake) {\n\t\t\tthis.handshakeMessages.push(record.fragment);\n\t\t}\n\t\treturn message;\n\t}\n\n\tprivate async readNextTLSRecord(\n\t\trequestedType: ContentType\n\t): Promise<TLSRecord> {\n\t\twhile (true) {\n\t\t\t// First, check if we have a complete record of the requested type.\n\t\t\tfor (let i = 0; i < this.receivedTLSRecords.length; i++) {\n\t\t\t\tconst record = this.receivedTLSRecords[i];\n\t\t\t\tif (record.type !== requestedType) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.receivedTLSRecords.splice(i, 1);\n\t\t\t\treturn record;\n\t\t\t}\n\n\t\t\t// We don't have a complete record of the requested type yet.\n\t\t\t// Let's read the next TLS record, then.\n\t\t\tconst header = await this.pollBytes(5);\n\t\t\tconst length = (header[3] << 8) | header[4];\n\t\t\tconst type = header[0];\n\t\t\tconst fragment = await this.pollBytes(length);\n\t\t\tconst record = {\n\t\t\t\ttype,\n\t\t\t\tversion: {\n\t\t\t\t\tmajor: header[1],\n\t\t\t\t\tminor: header[2],\n\t\t\t\t},\n\t\t\t\tlength,\n\t\t\t\tfragment:\n\t\t\t\t\tthis.sessionKeys && type !== ContentTypes.ChangeCipherSpec\n\t\t\t\t\t\t? await this.decryptData(type, fragment)\n\t\t\t\t\t\t: fragment,\n\t\t\t} as TLSRecord;\n\n\t\t\tif (record.type === ContentTypes.Alert) {\n\t\t\t\tconst severity = AlertLevelNames[record.fragment[0]];\n\t\t\t\tconst description = AlertDescriptionNames[record.fragment[1]];\n\t\t\t\t/**\n\t\t\t\t * @TODO: Handle TLS warnings, e.g. this one:\n\t\t\t\t *\n\t\t\t\t * close_notify\n\t\t\t\t *     Either party may initiate a close by sending a close_notify alert.\n\t\t\t\t *     Any data received after a closure alert is ignored.\n\t\t\t\t *\n\t\t\t\t *     Unless some other fatal alert has been transmitted, each party is\n\t\t\t\t *     required to send a close_notify alert before closing the write side\n\t\t\t\t *     of the connection.  The other party MUST respond with a close_notify\n\t\t\t\t *     alert of its own and close down the connection immediately,\n\t\t\t\t *     discarding any pending writes.\n\t\t\t\t */\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`TLS non-warning alert received: ${severity} ${description}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.receivedTLSRecords.push(record);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the requested number of bytes from the client.\n\t * Waits for the bytes to arrive if necessary.\n\t */\n\tprivate async pollBytes(length: number) {\n\t\twhile (this.receivedBytesBuffer.length < length) {\n\t\t\tconst { value, done } = await this.clientUpstreamReader.read();\n\t\t\tif (done) {\n\t\t\t\tawait this.close();\n\t\t\t\tthrow new TLSConnectionClosed('TLS connection closed');\n\t\t\t}\n\t\t\tthis.receivedBytesBuffer = concatUint8Arrays([\n\t\t\t\tthis.receivedBytesBuffer,\n\t\t\t\tvalue,\n\t\t\t]);\n\t\t\tif (this.receivedBytesBuffer.length >= length) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Patience is the key...\n\t\t\tawait new Promise((resolve) => setTimeout(resolve, 100));\n\t\t}\n\t\tconst requestedBytes = this.receivedBytesBuffer.slice(0, length);\n\t\tthis.receivedBytesBuffer = this.receivedBytesBuffer.slice(length);\n\t\treturn requestedBytes;\n\t}\n\n\t/**\n\t * Listens for all incoming messages and passes them to the\n\t * server handler.\n\t */\n\tprivate async pollForClientMessages() {\n\t\ttry {\n\t\t\twhile (true) {\n\t\t\t\tconst appData = await this.readNextMessage(\n\t\t\t\t\tContentTypes.ApplicationData\n\t\t\t\t);\n\t\t\t\tthis.serverUpstreamWriter.write(appData.body);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (e instanceof TLSConnectionClosed) {\n\t\t\t\t// Connection closed, no more application data to emit.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Decrypts data in a TLS 1.2-compliant manner using\n\t * the AES-GCM algorithm.\n\t */\n\tprivate async decryptData(\n\t\tcontentType: number,\n\t\tpayload: Uint8Array\n\t): Promise<Uint8Array> {\n\t\tconst implicitIV = this.sessionKeys!.clientIV;\n\t\t// Part of the IV is randomly generated for each record\n\t\t// and prepended in its unencrypted form before the\n\t\t// ciphertext.\n\t\tconst explicitIV = payload.slice(0, 8);\n\t\tconst iv = new Uint8Array([...implicitIV, ...explicitIV]);\n\n\t\tconst decrypted = await crypto.subtle.decrypt(\n\t\t\t{\n\t\t\t\tname: 'AES-GCM',\n\t\t\t\tiv,\n\t\t\t\tadditionalData: new Uint8Array([\n\t\t\t\t\t...as8Bytes(this.receivedRecordSequenceNumber),\n\t\t\t\t\tcontentType,\n\t\t\t\t\t...TLS_Version_1_2,\n\t\t\t\t\t// Payload length without IV and tag\n\t\t\t\t\t...as2Bytes(payload.length - 8 - 16),\n\t\t\t\t]),\n\t\t\t\ttagLength: 128,\n\t\t\t},\n\t\t\tthis.sessionKeys!.clientWriteKey,\n\t\t\t// Payload without the explicit IV\n\t\t\tpayload.slice(8)\n\t\t);\n\t\t++this.receivedRecordSequenceNumber;\n\n\t\treturn new Uint8Array(decrypted);\n\t}\n\n\tprivate async accumulateUntilMessageIsComplete(\n\t\trecord: TLSRecord\n\t): Promise<false | Uint8Array> {\n\t\tthis.partialTLSMessages[record.type] = concatUint8Arrays([\n\t\t\tthis.partialTLSMessages[record.type] || new Uint8Array(),\n\t\t\trecord.fragment,\n\t\t]);\n\t\tconst message = this.partialTLSMessages[record.type]!;\n\t\tswitch (record.type) {\n\t\t\tcase ContentTypes.Handshake: {\n\t\t\t\t// We don't have the message header yet, let's wait for more data.\n\t\t\t\tif (message.length < 4) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst length = (message[1] << 8) | message[2];\n\t\t\t\tif (message.length < 3 + length) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ContentTypes.Alert: {\n\t\t\t\tif (message.length < 2) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ContentTypes.ChangeCipherSpec:\n\t\t\tcase ContentTypes.ApplicationData:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`TLS: Unsupported record type ${record.type}`);\n\t\t}\n\t\tdelete this.partialTLSMessages[record.type];\n\t\treturn message;\n\t}\n\n\t/**\n\t * Passes a TLS record to the client.\n\t *\n\t * Accepts unencrypted data and ensures it gets encrypted\n\t * if needed before sending it to the client. The encryption\n\t * only kicks in after the handshake is complete.\n\t */\n\tprivate async writeTLSRecord(\n\t\tcontentType: number,\n\t\tpayload: Uint8Array\n\t): Promise<void> {\n\t\tif (contentType === ContentTypes.Handshake) {\n\t\t\tthis.handshakeMessages.push(payload);\n\t\t}\n\t\tif (this.sessionKeys && contentType !== ContentTypes.ChangeCipherSpec) {\n\t\t\tpayload = await this.encryptData(contentType, payload);\n\t\t}\n\n\t\tconst version = TLS_Version_1_2;\n\t\tconst length = payload.length;\n\t\tconst header = new Uint8Array(5);\n\t\theader[0] = contentType;\n\t\theader[1] = version[0];\n\t\theader[2] = version[1];\n\t\theader[3] = (length >> 8) & 0xff;\n\t\theader[4] = length & 0xff;\n\n\t\tconst record = concatUint8Arrays([header, payload]);\n\t\tthis.clientDownstreamWriter.write(record);\n\t}\n\n\t/**\n\t * Encrypts data in a TLS 1.2-compliant manner using\n\t * the AES-GCM algorithm.\n\t */\n\tprivate async encryptData(\n\t\tcontentType: number,\n\t\tpayload: Uint8Array\n\t): Promise<Uint8Array> {\n\t\tconst implicitIV = this.sessionKeys!.serverIV;\n\t\t// Part of the IV is randomly generated for each record\n\t\t// and prepended in its unencrypted form before the\n\t\t// ciphertext.\n\t\tconst explicitIV = crypto.getRandomValues(new Uint8Array(8));\n\t\tconst iv = new Uint8Array([...implicitIV, ...explicitIV]);\n\n\t\tconst additionalData = new Uint8Array([\n\t\t\t...as8Bytes(this.sentRecordSequenceNumber),\n\t\t\tcontentType,\n\t\t\t...TLS_Version_1_2,\n\t\t\t// Payload length without IV and tag\n\t\t\t...as2Bytes(payload.length),\n\t\t]);\n\t\tconst ciphertextWithTag = await crypto.subtle.encrypt(\n\t\t\t{\n\t\t\t\tname: 'AES-GCM',\n\t\t\t\tiv,\n\t\t\t\tadditionalData,\n\t\t\t\ttagLength: 128,\n\t\t\t},\n\t\t\tthis.sessionKeys!.serverWriteKey,\n\t\t\tpayload\n\t\t);\n\t\t++this.sentRecordSequenceNumber;\n\n\t\tconst encrypted = concatUint8Arrays([\n\t\t\texplicitIV,\n\t\t\tnew Uint8Array(ciphertextWithTag),\n\t\t]);\n\n\t\treturn encrypted;\n\t}\n}\n\nclass TLSDecoder {\n\tstatic TLSMessage(\n\t\ttype: ContentType,\n\t\taccumulatedPayload: Uint8Array\n\t): TLSMessage {\n\t\tswitch (type) {\n\t\t\tcase ContentTypes.Handshake: {\n\t\t\t\treturn TLSDecoder.clientHandshake(accumulatedPayload);\n\t\t\t}\n\t\t\tcase ContentTypes.Alert: {\n\t\t\t\treturn TLSDecoder.alert(accumulatedPayload);\n\t\t\t}\n\t\t\tcase ContentTypes.ChangeCipherSpec: {\n\t\t\t\treturn TLSDecoder.changeCipherSpec();\n\t\t\t}\n\t\t\tcase ContentTypes.ApplicationData: {\n\t\t\t\treturn TLSDecoder.applicationData(accumulatedPayload);\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`TLS: Unsupported TLS record type ${type}`);\n\t\t}\n\t}\n\n\t/**\n\t * Parses the cipher suites from the server hello message.\n\t *\n\t * The cipher suites are encoded as a list of 2-byte values.\n\t *\n\t * Binary layout:\n\t *\n\t * +----------------------------+\n\t * | Cipher Suites Length       |  2 bytes\n\t * +----------------------------+\n\t * | Cipher Suite 1             |  2 bytes\n\t * +----------------------------+\n\t * | Cipher Suite 2             |  2 bytes\n\t * +----------------------------+\n\t * | ...                        |\n\t * +----------------------------+\n\t * | Cipher Suite n             |  2 bytes\n\t * +----------------------------+\n\t *\n\t * The full list of supported cipher suites values is available at:\n\t *\n\t * https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4\n\t */\n\tstatic parseCipherSuites(buffer: ArrayBuffer): string[] {\n\t\tconst reader = new ArrayBufferReader(buffer);\n\t\t// Skip the length of the cipher suites\n\t\treader.readUint16();\n\n\t\tconst cipherSuites = [];\n\t\twhile (!reader.isFinished()) {\n\t\t\tconst suite = reader.readUint16();\n\t\t\tif (!(suite in CipherSuitesNames)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcipherSuites.push(CipherSuitesNames[suite]);\n\t\t}\n\t\treturn cipherSuites;\n\t}\n\n\tstatic applicationData(message: Uint8Array): ApplicationDataMessage {\n\t\treturn {\n\t\t\ttype: ContentTypes.ApplicationData,\n\t\t\tbody: message,\n\t\t};\n\t}\n\n\tstatic changeCipherSpec(): ChangeCipherSpecMessage {\n\t\treturn {\n\t\t\ttype: ContentTypes.ChangeCipherSpec,\n\t\t\tbody: new Uint8Array(),\n\t\t};\n\t}\n\n\tstatic alert(message: Uint8Array): AlertMessage {\n\t\treturn {\n\t\t\ttype: ContentTypes.Alert,\n\t\t\tlevel: AlertLevelNames[message[0]],\n\t\t\tdescription: AlertDescriptionNames[message[1]],\n\t\t};\n\t}\n\n\tstatic clientHandshake<T extends HandshakeMessageBody>(\n\t\tmessage: Uint8Array\n\t): HandshakeMessage<T> {\n\t\tconst msg_type = message[0];\n\t\tconst length = (message[1] << 16) | (message[2] << 8) | message[3];\n\t\tconst bodyBytes = message.slice(4);\n\t\tlet body: HandshakeMessageBody | undefined = undefined;\n\t\tswitch (msg_type) {\n\t\t\tcase HandshakeType.HelloRequest:\n\t\t\t\tbody = TLSDecoder.clientHelloRequestPayload();\n\t\t\t\tbreak;\n\t\t\tcase HandshakeType.ClientHello:\n\t\t\t\tbody = TLSDecoder.clientHelloPayload(bodyBytes);\n\t\t\t\tbreak;\n\t\t\tcase HandshakeType.ClientKeyExchange:\n\t\t\t\tbody = TLSDecoder.clientKeyExchangePayload(bodyBytes);\n\t\t\t\tbreak;\n\t\t\tcase HandshakeType.Finished:\n\t\t\t\tbody = TLSDecoder.clientFinishedPayload(bodyBytes);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid handshake type ${msg_type}`);\n\t\t}\n\t\treturn {\n\t\t\ttype: ContentTypes.Handshake,\n\t\t\tmsg_type,\n\t\t\tlength,\n\t\t\tbody: body as T,\n\t\t};\n\t}\n\n\tstatic clientHelloRequestPayload(): HelloRequest {\n\t\treturn {};\n\t}\n\n\t/**\n\t *\tOffset  Size    Field\n\t *\t(bytes) (bytes)\n\t *\t+------+------+---------------------------+\n\t *\t| 0000 |  1   | Handshake Type (1 = ClientHello)\n\t *\t+------+------+---------------------------+\n\t *\t| 0001 |  3   | Length of ClientHello\n\t *\t+------+------+---------------------------+\n\t *\t| 0004 |  2   | Protocol Version\n\t *\t+------+------+---------------------------+\n\t *\t| 0006 |  32  | Client Random\n\t *\t|      |      | (4 bytes timestamp +\n\t *\t|      |      |  28 bytes random)\n\t *\t+------+------+---------------------------+\n\t *\t| 0038 |  1   | Session ID Length\n\t *\t+------+------+---------------------------+\n\t *\t| 0039 |  0+  | Session ID (variable)\n\t *\t|      |      | (0-32 bytes)\n\t *\t+------+------+---------------------------+\n\t *\t| 003A*|  2   | Cipher Suites Length\n\t *\t+------+------+---------------------------+\n\t *\t| 003C*|  2+  | Cipher Suites\n\t *\t|      |      | (2 bytes each)\n\t *\t+------+------+---------------------------+\n\t *\t| xxxx |  1   | Compression Methods Length\n\t *\t+------+------+---------------------------+\n\t *\t| xxxx |  1+  | Compression Methods\n\t *\t|      |      | (1 byte each)\n\t *\t+------+------+---------------------------+\n\t *\t| xxxx |  2   | Extensions Length\n\t *\t+------+------+---------------------------+\n\t *\t| xxxx |  2   | Extension Type\n\t *\t+------+------+---------------------------+\n\t *\t| xxxx |  2   | Extension Length\n\t *\t+------+------+---------------------------+\n\t *\t| xxxx |  v   | Extension Data\n\t *\t+------+------+---------------------------+\n\t *\t|      |      | (Additional extensions...)\n\t *\t+------+------+---------------------------+\n\t */\n\tstatic clientHelloPayload(data: Uint8Array): ClientHello {\n\t\tconst reader = new ArrayBufferReader(data.buffer);\n\t\tconst buff: Partial<ClientHello> = {\n\t\t\tclient_version: reader.readUint8Array(2),\n\t\t\t/**\n\t\t\t * Technically this consists of a GMT timestamp\n\t\t\t * and 28 random bytes, but we don't need to\n\t\t\t * parse this further.\n\t\t\t */\n\t\t\trandom: reader.readUint8Array(32),\n\t\t};\n\t\tconst sessionIdLength = reader.readUint8();\n\t\tbuff.session_id = reader.readUint8Array(sessionIdLength);\n\n\t\tconst cipherSuitesLength = reader.readUint16();\n\t\tbuff.cipher_suites = TLSDecoder.parseCipherSuites(\n\t\t\treader.readUint8Array(cipherSuitesLength).buffer\n\t\t);\n\n\t\tconst compressionMethodsLength = reader.readUint8();\n\t\tbuff.compression_methods = reader.readUint8Array(\n\t\t\tcompressionMethodsLength\n\t\t);\n\n\t\tconst extensionsLength = reader.readUint16();\n\t\tbuff.extensions = parseClientHelloExtensions(\n\t\t\treader.readUint8Array(extensionsLength)\n\t\t);\n\t\treturn buff as ClientHello;\n\t}\n\n\t/**\n\t * Binary layout:\n\t *\n\t *\t+------------------------------------+\n\t *\t| ECDH Client Public Key Length [1B] |\n\t *\t+------------------------------------+\n\t *\t| ECDH Client Public Key   [variable]|\n\t *\t+------------------------------------+\n\t */\n\tstatic clientKeyExchangePayload(data: Uint8Array): ClientKeyExchange {\n\t\treturn {\n\t\t\t// Skip the first byte, which is the length of the public key\n\t\t\texchange_keys: data.slice(1, data.length),\n\t\t};\n\t}\n\n\tstatic clientFinishedPayload(data: Uint8Array): Finished {\n\t\treturn {\n\t\t\tverify_data: data,\n\t\t};\n\t}\n}\n\n/**\n * Creates a stream that emits chunks not larger than\n * the specified size.\n */\nfunction chunkStream(chunkSize: number) {\n\treturn new TransformStream({\n\t\ttransform(chunk, controller) {\n\t\t\twhile (chunk.length > 0) {\n\t\t\t\tcontroller.enqueue(chunk.slice(0, chunkSize));\n\t\t\t\tchunk = chunk.slice(chunkSize);\n\t\t\t}\n\t\t},\n\t});\n}\n\nclass MessageEncoder {\n\tstatic certificate(certificatesDER: ArrayBuffer[]): Uint8Array {\n\t\tconst certsBodies: Uint8Array[] = [];\n\t\tfor (const cert of certificatesDER) {\n\t\t\tcertsBodies.push(as3Bytes(cert.byteLength));\n\t\t\tcertsBodies.push(new Uint8Array(cert));\n\t\t}\n\t\tconst certsBody = concatUint8Arrays(certsBodies);\n\t\tconst body = new Uint8Array([\n\t\t\t...as3Bytes(certsBody.byteLength),\n\t\t\t...certsBody,\n\t\t]);\n\t\treturn new Uint8Array([\n\t\t\tHandshakeType.Certificate,\n\t\t\t...as3Bytes(body.length),\n\t\t\t...body,\n\t\t]);\n\t}\n\n\t/*\n\t * Byte layout of the ServerKeyExchange message:\n\t *\n\t * +-----------------------------------+\n\t * |    ServerKeyExchange Message      |\n\t * +-----------------------------------+\n\t * | Handshake type (1 byte)           |\n\t * +-----------------------------------+\n\t * | Length (3 bytes)                  |\n\t * +-----------------------------------+\n\t * | Curve Type (1 byte)               |\n\t * +-----------------------------------+\n\t * | Named Curve (2 bytes)             |\n\t * +-----------------------------------+\n\t * | EC Point Format (1 byte)          |\n\t * +-----------------------------------+\n\t * | Public Key Length (1 byte)        |\n\t * +-----------------------------------+\n\t * | Public Key (variable)             |\n\t * +-----------------------------------+\n\t * | Signature Algorithm (2 bytes)     |\n\t * +-----------------------------------+\n\t * | Signature Length (2 bytes)        |\n\t * +-----------------------------------+\n\t * | Signature (variable)              |\n\t * +-----------------------------------+\n\t *\n\t * @param clientRandom - 32 bytes from ClientHello\n\t * @param serverRandom - 32 bytes from ServerHello\n\t * @param ecdheKeyPair - ECDHE key pair\n\t * @param rsaPrivateKey - RSA private key for signing\n\t * @returns\n\t */\n\tstatic async ECDHEServerKeyExchange(\n\t\tclientRandom: Uint8Array,\n\t\tserverRandom: Uint8Array,\n\t\tecdheKeyPair: CryptoKeyPair,\n\t\trsaPrivateKey: CryptoKey\n\t): Promise<Uint8Array> {\n\t\t// 65 bytes (04 followed by x and y coordinates)\n\t\tconst publicKey = new Uint8Array(\n\t\t\tawait crypto.subtle.exportKey('raw', ecdheKeyPair.publicKey)\n\t\t);\n\n\t\t/*\n\t\t * The ServerKeyExchange message is extended as follows.\n\t\t *\n\t\t * select (KeyExchangeAlgorithm) {\n\t\t *     case ec_diffie_hellman:\n\t\t *         ServerECDHParams    params;\n\t\t *         Signature           signed_params;\n\t\t * } ServerKeyExchange;\n\t\t *\n\t\t * struct {\n\t\t *   ECCurveType     curve_type;\n\t\t *   NamedCurve      namedcurve;\n\t\t *   ECPoint         public;\n\t\t * } ServerECDHParams;\n\t\t */\n\t\tconst params = new Uint8Array([\n\t\t\t// Curve type (1 byte)\n\t\t\tECCurveTypes.NamedCurve,\n\t\t\t// Curve name (2 bytes)\n\t\t\t...as2Bytes(ECNamedCurves.secp256r1),\n\n\t\t\t// Public key length (1 byte)\n\t\t\tpublicKey.byteLength,\n\n\t\t\t// Public key (65 bytes, uncompressed format)\n\t\t\t...publicKey,\n\t\t]);\n\n\t\t/**\n\t\t * signed_params:\n\t\t *    A hash of the params, with the signature appropriate to that hash\n\t\t *    applied.  The private key corresponding to the certified public key\n\t\t *    in the server's Certificate message is used for signing.\n\t\t *\n\t\t *    Signature = encrypt(SHA(\n\t\t *       ClientHello.random + ServerHello.random + ServerECDHParams\n\t\t *    ));\n\t\t */\n\t\tconst signedParams = await crypto.subtle.sign(\n\t\t\t{\n\t\t\t\tname: 'RSASSA-PKCS1-v1_5',\n\t\t\t\thash: 'SHA-256',\n\t\t\t},\n\t\t\trsaPrivateKey,\n\t\t\tnew Uint8Array([...clientRandom, ...serverRandom, ...params])\n\t\t);\n\t\tconst signatureBytes = new Uint8Array(signedParams);\n\n\t\t/**\n\t\t * SignatureAlgorithm is \"rsa\" for the ECDHE_RSA key exchange\n\t\t * These cases are defined in TLS [RFC2246].\n\t\t */\n\t\tconst signatureAlgorithm = new Uint8Array([\n\t\t\tHashAlgorithms.sha256,\n\t\t\tSignatureAlgorithms.rsa,\n\t\t]);\n\n\t\t// Step 6: Construct the complete Server Key Exchange message\n\t\tconst body = new Uint8Array([\n\t\t\t...params,\n\t\t\t...signatureAlgorithm,\n\t\t\t...as2Bytes(signatureBytes.length),\n\t\t\t...signatureBytes,\n\t\t]);\n\n\t\treturn new Uint8Array([\n\t\t\tHandshakeType.ServerKeyExchange,\n\t\t\t...as3Bytes(body.length),\n\t\t\t...body,\n\t\t]);\n\t}\n\n\t/**\n\t * +------------------------------------+\n\t * | Content Type (Handshake)     [1B]  |\n\t * | 0x16                               |\n\t * +------------------------------------+\n\t * | Version (TLS 1.2)            [2B]  |\n\t * | 0x03 0x03                          |\n\t * +------------------------------------+\n\t * | Length                       [2B]  |\n\t * +------------------------------------+\n\t * | Handshake Type (ServerHello) [1B]  |\n\t * | 0x02                               |\n\t * +------------------------------------+\n\t * | Handshake Length             [3B]  |\n\t * +------------------------------------+\n\t * | Server Version               [2B]  |\n\t * +------------------------------------+\n\t * | Server Random               [32B]  |\n\t * +------------------------------------+\n\t * | Session ID Length            [1B]  |\n\t * +------------------------------------+\n\t * | Session ID             [0-32B]     |\n\t * +------------------------------------+\n\t * | Cipher Suite                 [2B]  |\n\t * +------------------------------------+\n\t * | Compression Method           [1B]  |\n\t * +------------------------------------+\n\t * | Extensions Length            [2B]  |\n\t * +------------------------------------+\n\t * | Extension: ec_point_formats        |\n\t * |   Type (0x00 0x0B)           [2B]  |\n\t * |   Length                     [2B]  |\n\t * |   EC Point Formats Length    [1B]  |\n\t * |   EC Point Format            [1B]  |\n\t * +------------------------------------+\n\t * | Other Extensions...                |\n\t * +------------------------------------+\n\t */\n\tstatic serverHello(\n\t\tclientHello: ClientHello,\n\t\tserverRandom: Uint8Array,\n\t\tcompressionAlgorithm: number\n\t): Uint8Array {\n\t\tconst extensionsParts: Uint8Array[] = clientHello.extensions\n\t\t\t.map((extension) => {\n\t\t\t\tswitch (extension['type']) {\n\t\t\t\t\tcase 'server_name':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The server SHALL include an extension of type \"server_name\" in the\n\t\t\t\t\t\t * (extended) server hello.  The \"extension_data\" field of this extension\n\t\t\t\t\t\t * SHALL be empty.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * Source: dfile:///Users/cloudnik/Library/Application%20Support/Dash/User%20Contributed/RFCs/RFCs.docset/Contents/Resources/Documents/rfc6066.html#section-3\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn ServerNameExtension.encodeForClient();\n\t\t\t\t\tcase 'supported_groups':\n\t\t\t\t\t\treturn SupportedGroupsExtension.encodeForClient(\n\t\t\t\t\t\t\t'secp256r1'\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'ec_point_formats':\n\t\t\t\t\t\treturn ECPointFormatsExtension.encodeForClient(\n\t\t\t\t\t\t\t'uncompressed'\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'signature_algorithms':\n\t\t\t\t\t\treturn SignatureAlgorithmsExtension.encodeforClient(\n\t\t\t\t\t\t\t'sha256',\n\t\t\t\t\t\t\t'rsa'\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t})\n\t\t\t.filter((x): x is Uint8Array => x !== undefined);\n\t\tconst extensions = concatUint8Arrays(extensionsParts);\n\n\t\tconst body = new Uint8Array([\n\t\t\t// Version field – 0x03, 0x03 means TLS 1.2\n\t\t\t...TLS_Version_1_2,\n\n\t\t\t...serverRandom,\n\n\t\t\tclientHello.session_id.length,\n\t\t\t...clientHello.session_id,\n\n\t\t\t...as2Bytes(CipherSuites.TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256),\n\n\t\t\tcompressionAlgorithm,\n\n\t\t\t// Extensions length (2 bytes)\n\t\t\t...as2Bytes(extensions.length),\n\n\t\t\t...extensions,\n\t\t]);\n\n\t\treturn new Uint8Array([\n\t\t\tHandshakeType.ServerHello,\n\t\t\t...as3Bytes(body.length),\n\t\t\t...body,\n\t\t]);\n\t}\n\n\tstatic serverHelloDone(): Uint8Array {\n\t\treturn new Uint8Array([HandshakeType.ServerHelloDone, ...as3Bytes(0)]);\n\t}\n\n\t/**\n\t * Server finished message.\n\t * The structure is defined in:\n\t * https://datatracker.ietf.org/doc/html/rfc5246#section-7.4.9\n\t *\n\t * struct {\n\t *     opaque verify_data[verify_data_length];\n\t * } Finished;\n\t *\n\t * verify_data\n\t *    PRF(master_secret, finished_label, Hash(handshake_messages))\n\t *       [0..verify_data_length-1];\n\t *\n\t * finished_label\n\t *    For Finished messages sent by the client, the string\n\t *    \"client finished\".  For Finished messages sent by the server,\n\t *    the string \"server finished\".\n\t */\n\tstatic async createFinishedMessage(\n\t\thandshakeMessages: Uint8Array[],\n\t\tmasterSecret: ArrayBuffer\n\t): Promise<Uint8Array> {\n\t\t// Step 1: Compute the hash of the handshake messages\n\t\tconst handshakeHash = await crypto.subtle.digest(\n\t\t\t'SHA-256',\n\t\t\tconcatUint8Arrays(handshakeMessages)\n\t\t);\n\n\t\t// Step 2: Compute the verify_data using the PRF\n\t\tconst verifyData = new Uint8Array(\n\t\t\tawait tls12Prf(\n\t\t\t\tmasterSecret,\n\t\t\t\tnew TextEncoder().encode('server finished'),\n\t\t\t\thandshakeHash,\n\t\t\t\t// verify_data length. TLS 1.2 specifies 12 bytes for verify_data\n\t\t\t\t12\n\t\t\t)\n\t\t);\n\n\t\t// Step 3: Construct the Finished message\n\t\treturn new Uint8Array([\n\t\t\tHandshakeType.Finished,\n\t\t\t...as3Bytes(verifyData.length),\n\t\t\t...verifyData,\n\t\t]);\n\t}\n\n\tstatic changeCipherSpec(): Uint8Array {\n\t\treturn new Uint8Array([0x01]);\n\t}\n}\n","import { concatUint8Arrays } from './utils';\n\n/**\n * Generates an X.509 certificate from the given description.\n *\n * If the issuer key pair is provided, the certificate will be signed\n * using the provided issuer's private key. Otherwise, the certificate\n * will be self-signed.\n *\n * The code below is underdocumented. The following links may provide\n * more clarity about X.509, ASN.1, DER, PEM, and other data formats\n * this module encodes:\n *\n * * https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/\n * * https://dev.to/wayofthepie/structure-of-an-ssl-x-509-certificate-16b\n * * https://www.oss.com/asn1/resources/asn1-made-simple/asn1-quick-reference/asn1-tags.html\n */\nexport function generateCertificate(\n\tdescription: TBSCertificateDescription,\n\tissuerKeyPair?: CryptoKeyPair\n): Promise<GeneratedCertificate> {\n\treturn CertificateGenerator.generateCertificate(description, issuerKeyPair);\n}\n\nexport function certificateToPEM(certificate: Uint8Array): string {\n\treturn `-----BEGIN CERTIFICATE-----\\n${formatPEM(\n\t\tencodeUint8ArrayAsBase64(certificate.buffer)\n\t)}\\n-----END CERTIFICATE-----`;\n}\n\nexport async function privateKeyToPEM(privateKey: CryptoKey): Promise<string> {\n\tconst pkcs8 = await crypto.subtle.exportKey('pkcs8', privateKey);\n\treturn `-----BEGIN PRIVATE KEY-----\\n${formatPEM(\n\t\tencodeUint8ArrayAsBase64(pkcs8)\n\t)}\\n-----END PRIVATE KEY-----`;\n}\n\nclass CertificateGenerator {\n\tstatic async generateCertificate(\n\t\ttbsDescription: TBSCertificateDescription,\n\t\tissuerKeyPair?: CryptoKeyPair\n\t) {\n\t\tconst subjectKeyPair = await crypto.subtle.generateKey(\n\t\t\t{\n\t\t\t\tname: 'RSASSA-PKCS1-v1_5',\n\t\t\t\thash: 'SHA-256',\n\t\t\t\tmodulusLength: 2048,\n\t\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\t},\n\t\t\ttrue, // extractable\n\t\t\t['sign', 'verify']\n\t\t);\n\t\tconst tbsCertificate = await this.signingRequest(\n\t\t\ttbsDescription,\n\t\t\tsubjectKeyPair.publicKey\n\t\t);\n\t\tconst certificate = await this.sign(\n\t\t\ttbsCertificate,\n\t\t\tissuerKeyPair?.privateKey ?? subjectKeyPair.privateKey\n\t\t);\n\t\treturn {\n\t\t\tkeyPair: subjectKeyPair,\n\t\t\tcertificate,\n\t\t\ttbsCertificate,\n\t\t\ttbsDescription,\n\t\t};\n\t}\n\n\tstatic async sign(\n\t\ttbsCertificate: TBSCertificate,\n\t\tprivateKey: CryptoKey\n\t): Promise<Uint8Array> {\n\t\t// Step 3: Sign the TBSCertificate\n\t\tconst signature = await crypto.subtle.sign(\n\t\t\t{\n\t\t\t\tname: 'RSASSA-PKCS1-v1_5',\n\t\t\t\thash: 'SHA-256',\n\t\t\t},\n\t\t\tprivateKey,\n\t\t\ttbsCertificate.buffer\n\t\t);\n\n\t\t// Step 4: Build the final Certificate sequence\n\t\tconst certificate = ASN1Encoder.sequence([\n\t\t\tnew Uint8Array(tbsCertificate.buffer),\n\t\t\tthis.signatureAlgorithm('sha256WithRSAEncryption'),\n\t\t\tASN1Encoder.bitString(new Uint8Array(signature)),\n\t\t]);\n\t\treturn certificate;\n\t}\n\n\tstatic async signingRequest(\n\t\tdescription: TBSCertificateDescription,\n\t\tsubjectPublicKey: CryptoKey\n\t): Promise<TBSCertificate> {\n\t\tconst extensions: Uint8Array[] = [];\n\t\tif (description.keyUsage) {\n\t\t\textensions.push(this.keyUsage(description.keyUsage));\n\t\t}\n\t\tif (description.extKeyUsage) {\n\t\t\textensions.push(this.extKeyUsage(description.extKeyUsage));\n\t\t}\n\t\tif (description.subjectAltNames) {\n\t\t\textensions.push(this.subjectAltName(description.subjectAltNames));\n\t\t}\n\t\tif (description.nsCertType) {\n\t\t\textensions.push(this.nsCertType(description.nsCertType));\n\t\t}\n\t\tif (description.basicConstraints) {\n\t\t\textensions.push(\n\t\t\t\tthis.basicConstraints(description.basicConstraints)\n\t\t\t);\n\t\t}\n\t\treturn ASN1Encoder.sequence([\n\t\t\tthis.version(description.version),\n\t\t\tthis.serialNumber(description.serialNumber),\n\t\t\tthis.signatureAlgorithm(description.signatureAlgorithm),\n\t\t\tthis.distinguishedName(description.issuer ?? description.subject),\n\t\t\tthis.validity(description.validity),\n\t\t\tthis.distinguishedName(description.subject),\n\t\t\tawait this.subjectPublicKeyInfo(subjectPublicKey),\n\t\t\tthis.extensions(extensions),\n\t\t]);\n\t}\n\n\tprivate static version(version = 0x02) {\n\t\t// [0] EXPLICIT Version: 2 (v3)\n\t\treturn ASN1Encoder.ASN1(\n\t\t\t0xa0,\n\t\t\tASN1Encoder.integer(new Uint8Array([version]))\n\t\t);\n\t}\n\n\tprivate static serialNumber(\n\t\tserialNumber = crypto.getRandomValues(new Uint8Array(4))\n\t) {\n\t\treturn ASN1Encoder.integer(serialNumber);\n\t}\n\n\tprivate static signatureAlgorithm(\n\t\talgorithm: OIDName = 'sha256WithRSAEncryption'\n\t) {\n\t\treturn ASN1Encoder.sequence([\n\t\t\tASN1Encoder.objectIdentifier(oidByName(algorithm)),\n\t\t\tASN1Encoder.null(),\n\t\t]);\n\t}\n\n\tprivate static async subjectPublicKeyInfo(publicKey: CryptoKey) {\n\t\t// ExportKey already returns data in ASN.1 DER format, we don't\n\t\t// need to wrap it in a sequence agin.\n\t\treturn new Uint8Array(await crypto.subtle.exportKey('spki', publicKey));\n\t}\n\n\tprivate static extensions(extensions: Uint8Array[]) {\n\t\treturn ASN1Encoder.ASN1(0xa3, ASN1Encoder.sequence(extensions));\n\t}\n\n\tprivate static distinguishedName(nameInfo: DistinguishedName) {\n\t\tconst values = [];\n\t\tfor (const [oidName, value] of Object.entries(nameInfo)) {\n\t\t\tconst entry = [\n\t\t\t\tASN1Encoder.objectIdentifier(oidByName(oidName as OIDName)),\n\t\t\t];\n\t\t\tswitch (oidName) {\n\t\t\t\tcase 'countryName':\n\t\t\t\t\tentry.push(ASN1Encoder.printableString(value));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tentry.push(ASN1Encoder.utf8String(value));\n\t\t\t}\n\t\t\tvalues.push(ASN1Encoder.set([ASN1Encoder.sequence(entry)]));\n\t\t}\n\t\treturn ASN1Encoder.sequence(values);\n\t}\n\n\tprivate static validity(validity?: Validity) {\n\t\treturn ASN1Encoder.sequence([\n\t\t\tASN1Encoder.ASN1(\n\t\t\t\tASN1Tags.UTCTime,\n\t\t\t\tnew TextEncoder().encode(\n\t\t\t\t\tformatDateASN1(validity?.notBefore ?? new Date())\n\t\t\t\t)\n\t\t\t),\n\t\t\tASN1Encoder.ASN1(\n\t\t\t\tASN1Tags.UTCTime,\n\t\t\t\tnew TextEncoder().encode(\n\t\t\t\t\tformatDateASN1(\n\t\t\t\t\t\tvalidity?.notAfter ?? addYears(new Date(), 10)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t]);\n\t}\n\n\tprivate static basicConstraints({\n\t\tca = true,\n\t\tpathLenConstraint = undefined,\n\t}: BasicConstraints) {\n\t\tconst sequence = [ASN1Encoder.boolean(ca)];\n\t\tif (pathLenConstraint !== undefined) {\n\t\t\tsequence.push(\n\t\t\t\tASN1Encoder.integer(new Uint8Array([pathLenConstraint]))\n\t\t\t);\n\t\t}\n\t\treturn ASN1Encoder.sequence([\n\t\t\tASN1Encoder.objectIdentifier(oidByName('basicConstraints')),\n\t\t\tASN1Encoder.octetString(ASN1Encoder.sequence(sequence)),\n\t\t]);\n\t}\n\n\tprivate static keyUsage(keyUsage?: KeyUsage) {\n\t\tconst keyUsageBits = new Uint8Array([0b00000000]);\n\t\tif (keyUsage?.digitalSignature) {\n\t\t\tkeyUsageBits[0] |= 0b00000001;\n\t\t}\n\t\tif (keyUsage?.nonRepudiation) {\n\t\t\tkeyUsageBits[0] |= 0b00000010;\n\t\t}\n\t\tif (keyUsage?.keyEncipherment) {\n\t\t\tkeyUsageBits[0] |= 0b00000100;\n\t\t}\n\t\tif (keyUsage?.dataEncipherment) {\n\t\t\tkeyUsageBits[0] |= 0b00001000;\n\t\t}\n\t\tif (keyUsage?.keyAgreement) {\n\t\t\tkeyUsageBits[0] |= 0b00010000;\n\t\t}\n\t\tif (keyUsage?.keyCertSign) {\n\t\t\tkeyUsageBits[0] |= 0b00100000;\n\t\t}\n\t\tif (keyUsage?.cRLSign) {\n\t\t\tkeyUsageBits[0] |= 0b01000000;\n\t\t}\n\t\tif (keyUsage?.encipherOnly) {\n\t\t\tkeyUsageBits[0] |= 0b10000000;\n\t\t}\n\t\tif (keyUsage?.decipherOnly) {\n\t\t\tkeyUsageBits[0] |= 0b01000000;\n\t\t}\n\t\treturn ASN1Encoder.sequence([\n\t\t\tASN1Encoder.objectIdentifier(oidByName('keyUsage')),\n\t\t\tASN1Encoder.boolean(true), // Critical\n\t\t\tASN1Encoder.octetString(ASN1Encoder.bitString(keyUsageBits)),\n\t\t]);\n\t}\n\n\tprivate static extKeyUsage(extKeyUsage: ExtKeyUsage = {}) {\n\t\treturn ASN1Encoder.sequence([\n\t\t\tASN1Encoder.objectIdentifier(oidByName('extKeyUsage')),\n\t\t\tASN1Encoder.boolean(true), // Critical\n\t\t\tASN1Encoder.octetString(\n\t\t\t\tASN1Encoder.sequence(\n\t\t\t\t\tObject.entries(extKeyUsage).map(([oidName, value]) => {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\treturn ASN1Encoder.objectIdentifier(\n\t\t\t\t\t\t\t\toidByName(oidName as OIDName)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ASN1Encoder.null();\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t),\n\t\t]);\n\t}\n\n\tprivate static nsCertType(nsCertType: NSCertType) {\n\t\tconst bits = new Uint8Array([0x00]);\n\t\tif (nsCertType.client) {\n\t\t\tbits[0] |= 0x01;\n\t\t}\n\t\tif (nsCertType.server) {\n\t\t\tbits[0] |= 0x02;\n\t\t}\n\t\tif (nsCertType.email) {\n\t\t\tbits[0] |= 0x04;\n\t\t}\n\t\tif (nsCertType.objsign) {\n\t\t\tbits[0] |= 0x08;\n\t\t}\n\t\tif (nsCertType.sslCA) {\n\t\t\tbits[0] |= 0x10;\n\t\t}\n\t\tif (nsCertType.emailCA) {\n\t\t\tbits[0] |= 0x20;\n\t\t}\n\t\tif (nsCertType.objCA) {\n\t\t\tbits[0] |= 0x40;\n\t\t}\n\t\treturn ASN1Encoder.sequence([\n\t\t\tASN1Encoder.objectIdentifier(oidByName('nsCertType')),\n\t\t\tASN1Encoder.octetString(bits),\n\t\t]);\n\t}\n\n\tprivate static subjectAltName(altNames: SubjectAltNames) {\n\t\tconst generalNames =\n\t\t\taltNames.dnsNames?.map((name) => {\n\t\t\t\tconst dnsName = ASN1Encoder.ia5String(name);\n\t\t\t\treturn ASN1Encoder.contextSpecific(2, dnsName);\n\t\t\t}) || [];\n\t\tconst ipAddresses =\n\t\t\taltNames.ipAddresses?.map((ip) => {\n\t\t\t\tconst ipAddress = ASN1Encoder.ia5String(ip);\n\t\t\t\treturn ASN1Encoder.contextSpecific(7, ipAddress);\n\t\t\t}) || [];\n\t\tconst sanExtensionValue = ASN1Encoder.octetString(\n\t\t\tASN1Encoder.sequence([...generalNames, ...ipAddresses])\n\t\t);\n\t\treturn ASN1Encoder.sequence([\n\t\t\tASN1Encoder.objectIdentifier(oidByName('subjectAltName')),\n\t\t\tASN1Encoder.boolean(true),\n\t\t\tsanExtensionValue,\n\t\t]);\n\t}\n}\n\n/**\n * OIDs used in X.509 certificates.\n *\n * Source: https://oidref.com/\n */\nconst oids = {\n\t// Algorithm OIDs\n\t'1.2.840.113549.1.1.1': 'rsaEncryption',\n\t'1.2.840.113549.1.1.4': 'md5WithRSAEncryption',\n\t'1.2.840.113549.1.1.5': 'sha1WithRSAEncryption',\n\t'1.2.840.113549.1.1.7': 'RSAES-OAEP',\n\t'1.2.840.113549.1.1.8': 'mgf1',\n\t'1.2.840.113549.1.1.9': 'pSpecified',\n\t'1.2.840.113549.1.1.10': 'RSASSA-PSS',\n\t'1.2.840.113549.1.1.11': 'sha256WithRSAEncryption',\n\t'1.2.840.113549.1.1.12': 'sha384WithRSAEncryption',\n\t'1.2.840.113549.1.1.13': 'sha512WithRSAEncryption',\n\t'1.3.101.112': 'EdDSA25519',\n\t'1.2.840.10040.4.3': 'dsa-with-sha1',\n\t'1.3.14.3.2.7': 'desCBC',\n\t'1.3.14.3.2.26': 'sha1',\n\t'1.3.14.3.2.29': 'sha1WithRSASignature',\n\t'2.16.840.1.101.3.4.2.1': 'sha256',\n\t'2.16.840.1.101.3.4.2.2': 'sha384',\n\t'2.16.840.1.101.3.4.2.3': 'sha512',\n\t'2.16.840.1.101.3.4.2.4': 'sha224',\n\t'2.16.840.1.101.3.4.2.5': 'sha512-224',\n\t'2.16.840.1.101.3.4.2.6': 'sha512-256',\n\t'1.2.840.113549.2.2': 'md2',\n\t'1.2.840.113549.2.5': 'md5',\n\n\t// pkcs#7 content types\n\t'1.2.840.113549.1.7.1': 'data',\n\t'1.2.840.113549.1.7.2': 'signedData',\n\t'1.2.840.113549.1.7.3': 'envelopedData',\n\t'1.2.840.113549.1.7.4': 'signedAndEnvelopedData',\n\t'1.2.840.113549.1.7.5': 'digestedData',\n\t'1.2.840.113549.1.7.6': 'encryptedData',\n\n\t// pkcs#9 oids\n\t'1.2.840.113549.1.9.1': 'emailAddress',\n\t'1.2.840.113549.1.9.2': 'unstructuredName',\n\t'1.2.840.113549.1.9.3': 'contentType',\n\t'1.2.840.113549.1.9.4': 'messageDigest',\n\t'1.2.840.113549.1.9.5': 'signingTime',\n\t'1.2.840.113549.1.9.6': 'counterSignature',\n\t'1.2.840.113549.1.9.7': 'challengePassword',\n\t'1.2.840.113549.1.9.8': 'unstructuredAddress',\n\t'1.2.840.113549.1.9.14': 'extensionRequest',\n\t'1.2.840.113549.1.9.20': 'friendlyName',\n\t'1.2.840.113549.1.9.21': 'localKeyId',\n\t'1.2.840.113549.1.9.22.1': 'x509Certificate',\n\n\t// pkcs#12 safe bags\n\t'1.2.840.113549.1.12.10.1.1': 'keyBag',\n\t'1.2.840.113549.1.12.10.1.2': 'pkcs8ShroudedKeyBag',\n\t'1.2.840.113549.1.12.10.1.3': 'certBag',\n\t'1.2.840.113549.1.12.10.1.4': 'crlBag',\n\t'1.2.840.113549.1.12.10.1.5': 'secretBag',\n\t'1.2.840.113549.1.12.10.1.6': 'safeContentsBag',\n\n\t// password-based-encryption for pkcs#12\n\t'1.2.840.113549.1.5.13': 'pkcs5PBES2',\n\t'1.2.840.113549.1.5.12': 'pkcs5PBKDF2',\n\t'1.2.840.113549.1.12.1.1': 'pbeWithSHAAnd128BitRC4',\n\t'1.2.840.113549.1.12.1.2': 'pbeWithSHAAnd40BitRC4',\n\t'1.2.840.113549.1.12.1.3': 'pbeWithSHAAnd3-KeyTripleDES-CBC',\n\t'1.2.840.113549.1.12.1.4': 'pbeWithSHAAnd2-KeyTripleDES-CBC',\n\t'1.2.840.113549.1.12.1.5': 'pbeWithSHAAnd128BitRC2-CBC',\n\t'1.2.840.113549.1.12.1.6': 'pbewithSHAAnd40BitRC2-CBC',\n\n\t// hmac OIDs\n\t'1.2.840.113549.2.7': 'hmacWithSHA1',\n\t'1.2.840.113549.2.8': 'hmacWithSHA224',\n\t'1.2.840.113549.2.9': 'hmacWithSHA256',\n\t'1.2.840.113549.2.10': 'hmacWithSHA384',\n\t'1.2.840.113549.2.11': 'hmacWithSHA512',\n\n\t// symmetric key algorithm oids\n\t'1.2.840.113549.3.7': 'des-EDE3-CBC',\n\t'2.16.840.1.101.3.4.1.2': 'aes128-CBC',\n\t'2.16.840.1.101.3.4.1.22': 'aes192-CBC',\n\t'2.16.840.1.101.3.4.1.42': 'aes256-CBC',\n\n\t// certificate issuer/subject OIDs\n\t'2.5.4.3': 'commonName',\n\t'2.5.4.4': 'surname',\n\t'2.5.4.5': 'serialNumber',\n\t'2.5.4.6': 'countryName',\n\t'2.5.4.7': 'localityName',\n\t'2.5.4.8': 'stateOrProvinceName',\n\t'2.5.4.9': 'streetAddress',\n\t'2.5.4.10': 'organizationName',\n\t'2.5.4.11': 'organizationalUnitName',\n\t'2.5.4.12': 'title',\n\t'2.5.4.13': 'description',\n\t'2.5.4.15': 'businessCategory',\n\t'2.5.4.17': 'postalCode',\n\t'2.5.4.42': 'givenName',\n\t'1.3.6.1.4.1.311.60.2.1.2':\n\t\t'jurisdictionOfIncorporationStateOrProvinceName',\n\t'1.3.6.1.4.1.311.60.2.1.3': 'jurisdictionOfIncorporationCountryName',\n\n\t// X.509 extension OIDs\n\t'2.16.840.1.113730.1.1': 'nsCertType',\n\t'2.16.840.1.113730.1.13': 'nsComment',\n\t'2.5.29.14': 'subjectKeyIdentifier',\n\t'2.5.29.15': 'keyUsage',\n\t'2.5.29.17': 'subjectAltName',\n\t'2.5.29.18': 'issuerAltName',\n\t'2.5.29.19': 'basicConstraints',\n\t'2.5.29.31': 'cRLDistributionPoints',\n\t'2.5.29.32': 'certificatePolicies',\n\t'2.5.29.35': 'authorityKeyIdentifier',\n\t'2.5.29.37': 'extKeyUsage',\n\n\t// extKeyUsage purposes\n\t'1.3.6.1.4.1.11129.2.4.2': 'timestampList',\n\t'1.3.6.1.5.5.7.1.1': 'authorityInfoAccess',\n\t'1.3.6.1.5.5.7.3.1': 'serverAuth',\n\t'1.3.6.1.5.5.7.3.2': 'clientAuth',\n\t'1.3.6.1.5.5.7.3.3': 'codeSigning',\n\t'1.3.6.1.5.5.7.3.4': 'emailProtection',\n\t'1.3.6.1.5.5.7.3.8': 'timeStamping',\n} as const;\n\nfunction oidByName(requestedName: OIDName): OID {\n\tfor (const [oid, name] of Object.entries(oids)) {\n\t\tif (name === requestedName) {\n\t\t\treturn oid as OID;\n\t\t}\n\t}\n\tthrow new Error(`OID not found for name: ${requestedName}`);\n}\n\nconst constructedBit = 0b00100000;\nconst ASN1Tags = {\n\tEOC: 0,\n\tBoolean: 1,\n\tInteger: 2,\n\tBitString: 3,\n\tOctetString: 4,\n\tNull: 5,\n\tOID: 6,\n\tObjectDescriptor: 7,\n\tExternal: 8,\n\tReal: 9, // float\n\tEnumeration: 10,\n\tPDV: 11,\n\tUtf8String: 12,\n\tRelativeOID: 13,\n\tSequence: 16 | constructedBit,\n\tSet: 17 | constructedBit,\n\tNumericString: 18,\n\tPrintableString: 19,\n\tT61String: 20,\n\tVideotexString: 21,\n\tIA5String: 22,\n\tUTCTime: 23,\n\tGeneralizedTime: 24,\n\tGraphicString: 25,\n\tVisibleString: 26,\n\tGeneralString: 28,\n\tUniversalString: 29,\n\tCharacterString: 30,\n\tBMPString: 31,\n\tConstructor: 32,\n\tContext: 128,\n};\n\nclass ASN1Encoder {\n\t// Helper functions for ASN.1 DER encoding\n\tstatic length_(length: number): Uint8Array {\n\t\tif (length < 0x80) {\n\t\t\t// Short form: single byte length\n\t\t\treturn new Uint8Array([length]);\n\t\t} else {\n\t\t\t// Long form: first byte is 0x80 + number of length bytes\n\t\t\t// Subsequent bytes are the length, big-endian\n\t\t\tlet tempLength = length;\n\t\t\tconst lengthBytesArray: number[] = [];\n\t\t\twhile (tempLength > 0) {\n\t\t\t\tlengthBytesArray.unshift(tempLength & 0xff);\n\t\t\t\ttempLength >>= 8;\n\t\t\t}\n\t\t\tconst numLengthBytes = lengthBytesArray.length;\n\t\t\tconst result = new Uint8Array(1 + numLengthBytes);\n\t\t\tresult[0] = 0x80 | numLengthBytes;\n\t\t\tfor (let i = 0; i < numLengthBytes; i++) {\n\t\t\t\tresult[i + 1] = lengthBytesArray[i];\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tstatic ASN1(tag: number, data: Uint8Array): Uint8Array {\n\t\tconst lengthBytes = ASN1Encoder.length_(data.length);\n\t\tconst result = new Uint8Array(1 + lengthBytes.length + data.length);\n\t\tresult[0] = tag;\n\t\tresult.set(lengthBytes, 1);\n\t\tresult.set(data, 1 + lengthBytes.length);\n\t\treturn result;\n\t}\n\n\tstatic integer(number: Uint8Array): Uint8Array {\n\t\t// Ensure number is positive and first bit is 0\n\t\tif (number[0] > 0x7f) {\n\t\t\tconst extendedNumber = new Uint8Array(number.length + 1);\n\t\t\textendedNumber[0] = 0x00;\n\t\t\textendedNumber.set(number, 1);\n\t\t\tnumber = extendedNumber;\n\t\t}\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.Integer, number);\n\t}\n\n\tstatic bitString(data: Uint8Array): Uint8Array {\n\t\tconst unusedBits = new Uint8Array([0x00]);\n\t\tconst combined = new Uint8Array(unusedBits.length + data.length);\n\t\tcombined.set(unusedBits);\n\t\tcombined.set(data, unusedBits.length);\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.BitString, combined);\n\t}\n\n\tstatic octetString(data: Uint8Array): Uint8Array {\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.OctetString, data);\n\t}\n\n\tstatic null(): Uint8Array {\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.Null, new Uint8Array(0));\n\t}\n\n\tstatic objectIdentifier(oid: string): Uint8Array {\n\t\tconst oidParts = oid.split('.').map(Number);\n\t\tconst firstByte = oidParts[0] * 40 + oidParts[1];\n\t\tconst encodedParts = [firstByte];\n\t\tfor (let i = 2; i < oidParts.length; i++) {\n\t\t\tlet value = oidParts[i];\n\t\t\tconst bytes: number[] = [];\n\t\t\tdo {\n\t\t\t\tbytes.unshift(value & 0x7f);\n\t\t\t\tvalue >>= 7;\n\t\t\t} while (value > 0);\n\t\t\tfor (let j = 0; j < bytes.length - 1; j++) {\n\t\t\t\tbytes[j] |= 0x80;\n\t\t\t}\n\t\t\tencodedParts.push(...bytes);\n\t\t}\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.OID, new Uint8Array(encodedParts));\n\t}\n\n\tstatic utf8String(str: string): Uint8Array {\n\t\tconst utf8Bytes = new TextEncoder().encode(str);\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.Utf8String, utf8Bytes);\n\t}\n\n\tstatic printableString(str: string): Uint8Array {\n\t\tconst utf8Bytes = new TextEncoder().encode(str);\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.PrintableString, utf8Bytes);\n\t}\n\n\tstatic sequence(items: Uint8Array[]): Uint8Array {\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.Sequence, concatUint8Arrays(items));\n\t}\n\n\tstatic set(items: Uint8Array[]): Uint8Array {\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.Set, concatUint8Arrays(items));\n\t}\n\n\tstatic ia5String(str: string): Uint8Array {\n\t\tconst utf8Bytes = new TextEncoder().encode(str);\n\t\treturn ASN1Encoder.ASN1(ASN1Tags.IA5String, utf8Bytes);\n\t}\n\n\tstatic contextSpecific(\n\t\ttagNumber: number,\n\t\tdata: Uint8Array,\n\t\tconstructed = false\n\t): Uint8Array {\n\t\tconst tag = (constructed ? 0xa0 : 0x80) | tagNumber;\n\t\treturn ASN1Encoder.ASN1(tag, data);\n\t}\n\n\tstatic boolean(value: boolean): Uint8Array {\n\t\treturn ASN1Encoder.ASN1(\n\t\t\tASN1Tags.Boolean,\n\t\t\tnew Uint8Array([value ? 0xff : 0x00])\n\t\t);\n\t}\n}\n\nexport interface DistinguishedName {\n\tcountryName?: string;\n\torganizationName?: string;\n\tcommonName?: string;\n\tlocalityName?: string;\n\tstateOrProvinceName?: string;\n\tstreetAddress?: string;\n\tpostalCode?: string;\n\temailAddress?: string;\n\torganizationalUnitName?: string;\n\ttitle?: string;\n\tdescription?: string;\n\tbusinessCategory?: string;\n}\n\nexport type Validity = {\n\tnotBefore: Date;\n\tnotAfter: Date;\n};\n\nexport type OID = keyof typeof oids;\nexport type OIDName = (typeof oids)[OID];\n\nexport interface BasicConstraints {\n\tca: boolean;\n\tpathLenConstraint?: number;\n}\n\nexport interface KeyUsage {\n\tdigitalSignature?: boolean;\n\tnonRepudiation?: boolean;\n\tkeyEncipherment?: boolean;\n\tdataEncipherment?: boolean;\n\tkeyAgreement?: boolean;\n\tkeyCertSign?: boolean;\n\tcRLSign?: boolean;\n\tencipherOnly?: boolean;\n\tdecipherOnly?: boolean;\n}\n\nexport interface ExtKeyUsage {\n\tserverAuth?: boolean;\n\tclientAuth?: boolean;\n\tcodeSigning?: boolean;\n\temailProtection?: boolean;\n\ttimeStamping?: boolean;\n}\n\nexport interface NSCertType {\n\tclient?: boolean;\n\tserver?: boolean;\n\temail?: boolean;\n\tobjsign?: boolean;\n\tsslCA?: boolean;\n\temailCA?: boolean;\n\tobjCA?: boolean;\n}\n\nexport interface SubjectAltNames {\n\tdnsNames?: string[];\n\tipAddresses?: string[];\n}\n\nexport interface TBSCertificateDescription {\n\tversion?: number;\n\tserialNumber?: Uint8Array;\n\tsignatureAlgorithm?: OIDName;\n\tissuer?: DistinguishedName;\n\tvalidity?: Validity;\n\tsubject: DistinguishedName;\n\tbasicConstraints?: BasicConstraints;\n\tkeyUsage?: KeyUsage;\n\textKeyUsage?: ExtKeyUsage;\n\tsubjectAltNames?: SubjectAltNames;\n\tnsCertType?: NSCertType;\n}\nexport type TBSCertificate = Uint8Array;\n\nexport type GeneratedCertificate = {\n\tkeyPair: CryptoKeyPair;\n\tcertificate: Uint8Array;\n\ttbsDescription: TBSCertificateDescription;\n\ttbsCertificate: TBSCertificate;\n};\n\n// Helper functions\nfunction encodeUint8ArrayAsBase64(bytes: ArrayBuffer) {\n\treturn btoa(String.fromCodePoint(...new Uint8Array(bytes)));\n}\n\nfunction formatPEM(pemString: string): string {\n\treturn pemString.match(/.{1,64}/g)?.join('\\n') || pemString;\n}\n\nfunction formatDateASN1(date: Date): string {\n\t// Format date to YYMMDDHHMMSSZ for UTCTime\n\tconst year = date.getUTCFullYear().toString().substr(2);\n\tconst month = padNumber(date.getUTCMonth() + 1);\n\tconst day = padNumber(date.getUTCDate());\n\tconst hours = padNumber(date.getUTCHours());\n\tconst minutes = padNumber(date.getUTCMinutes());\n\tconst seconds = padNumber(date.getUTCSeconds());\n\treturn `${year}${month}${day}${hours}${minutes}${seconds}Z`;\n}\n\nfunction padNumber(num: number): string {\n\treturn num.toString().padStart(2, '0');\n}\n\nfunction addYears(date: Date, years: number): Date {\n\tconst newDate = new Date(date);\n\tnewDate.setUTCFullYear(newDate.getUTCFullYear() + years);\n\treturn newDate;\n}\n","/**\n * Scopes are unique strings, like `my-site`, used to uniquely brand\n * the outgoing HTTP traffic from each browser tab. This helps the\n * main thread distinguish between the relevant and irrelevant\n * messages received from the Service Worker.\n *\n * Scopes are included in the `PHPRequestHandler.absoluteUrl` as follows:\n *\n * An **unscoped** URL: http://localhost:8778/wp-login.php\n * A **scoped** URL:    http://localhost:8778/scope:my-site/wp-login.php\n *\n * For more information, see the README section on scopes.\n */\n\n/**\n * Checks if the given URL contains scope information.\n *\n * @example\n * ```js\n * isURLScoped(new URL('http://localhost/scope:my-site/index.php'));\n * // true\n *\n * isURLScoped(new URL('http://localhost/index.php'));\n * // false\n * ```\n *\n * @param  url The URL to check.\n * @returns `true` if the URL contains scope information, `false` otherwise.\n */\nexport function isURLScoped(url: URL): boolean {\n\treturn url.pathname.startsWith(`/scope:`);\n}\n\n/**\n * Returns the scope stored in the given URL.\n *\n * @example\n * ```js\n * getScopeFromURL(new URL('http://localhost/scope:my-site/index.php'));\n * // '96253'\n *\n * getScopeFromURL(new URL('http://localhost/index.php'));\n * // null\n * ```\n *\n * @param  url The URL.\n * @returns The scope if the URL contains a scope, `null` otherwise.\n */\nexport function getURLScope(url: URL): string | null {\n\tif (isURLScoped(url)) {\n\t\treturn url.pathname.split('/')[1].split(':')[1];\n\t}\n\treturn null;\n}\n\n/**\n * Returns a new URL with the requested scope information.\n *\n * @example\n * ```js\n * setURLScope(new URL('http://localhost/index.php'), 'my-site');\n * // URL('http://localhost/scope:my-site/index.php')\n *\n * setURLScope(new URL('http://localhost/scope:my-site/index.php'), 'my-site');\n * // URL('http://localhost/scope:my-site/index.php')\n *\n * setURLScope(new URL('http://localhost/index.php'), null);\n * // URL('http://localhost/index.php')\n * ```\n *\n * @param  url   The URL to scope.\n * @param  scope The scope value.\n * @returns A new URL with the scope information in it.\n */\nexport function setURLScope(url: URL | string, scope: string | null): URL {\n\tlet newUrl = new URL(url);\n\n\tif (isURLScoped(newUrl)) {\n\t\tif (scope) {\n\t\t\tconst parts = newUrl.pathname.split('/');\n\t\t\tparts[1] = `scope:${scope}`;\n\t\t\tnewUrl.pathname = parts.join('/');\n\t\t} else {\n\t\t\tnewUrl = removeURLScope(newUrl);\n\t\t}\n\t} else if (scope) {\n\t\tconst suffix = newUrl.pathname === '/' ? '' : newUrl.pathname;\n\t\tnewUrl.pathname = `/scope:${scope}${suffix}`;\n\t}\n\n\treturn newUrl;\n}\n\n/**\n * Returns a new URL without any scope information.\n *\n * @example\n * ```js\n * removeURLScope(new URL('http://localhost/scope:my-site/index.php'));\n * // URL('http://localhost/index.php')\n *\n * removeURLScope(new URL('http://localhost/index.php'));\n * // URL('http://localhost/index.php')\n * ```\n *\n * @param  url The URL to remove scope information from.\n * @returns A new URL without the scope information.\n */\nexport function removeURLScope(url: URL): URL {\n\tif (!isURLScoped(url)) {\n\t\treturn url;\n\t}\n\tconst newUrl = new URL(url);\n\tconst parts = newUrl.pathname.split('/');\n\tnewUrl.pathname = '/' + parts.slice(2).join('/');\n\treturn newUrl;\n}\n","/// <reference lib=\"WebWorker\" />\ndeclare const self: ServiceWorkerGlobalScope;\n\nimport { awaitReply, getNextRequestId } from './messaging';\nimport { getURLScope, isURLScoped, setURLScope } from '@php-wasm/scopes';\n\nexport async function convertFetchEventToPHPRequest(event: FetchEvent) {\n\tlet url = new URL(event.request.url);\n\n\tif (!isURLScoped(url)) {\n\t\ttry {\n\t\t\tconst referrerUrl = new URL(event.request.referrer);\n\t\t\turl = setURLScope(url, getURLScope(referrerUrl)!);\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\tconst contentType = event.request.headers.get('content-type')!;\n\tconst body =\n\t\tevent.request.method === 'POST'\n\t\t\t? new Uint8Array(await event.request.clone().arrayBuffer())\n\t\t\t: undefined;\n\tconst requestHeaders: Record<string, string> = {};\n\tfor (const pair of (event.request.headers as any).entries()) {\n\t\trequestHeaders[pair[0]] = pair[1];\n\t}\n\n\tlet phpResponse;\n\ttry {\n\t\tconst message = {\n\t\t\tmethod: 'request',\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tbody,\n\t\t\t\t\turl: url.toString(),\n\t\t\t\t\tmethod: event.request.method,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t...requestHeaders,\n\t\t\t\t\t\tHost: url.host,\n\t\t\t\t\t\t// Safari and Firefox don't make the User-Agent header\n\t\t\t\t\t\t// available in the fetch event. Let's add it manually:\n\t\t\t\t\t\t'User-agent': self.navigator.userAgent,\n\t\t\t\t\t\t'Content-type': contentType,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t\tconst scope = getURLScope(url);\n\t\tif (scope === null) {\n\t\t\tthrow new Error(\n\t\t\t\t`The URL ${url.toString()} is not scoped. This should not happen.`\n\t\t\t);\n\t\t}\n\t\tconst requestId = await broadcastMessageExpectReply(message, scope);\n\t\tphpResponse = await awaitReply(self, requestId);\n\n\t\t// X-frame-options gets in a way when PHP is\n\t\t// being displayed in an iframe.\n\t\tdelete phpResponse.headers['x-frame-options'];\n\t} catch (e) {\n\t\tconsole.error(e, { url: url.toString() });\n\t\tthrow e;\n\t}\n\n\t/**\n\t * Safari has a bug that prevents Service Workers from redirecting relative URLs.\n\t * When attempting to redirect to a relative URL, the network request will return an error.\n\t * See the Webkit bug for details: https://bugs.webkit.org/show_bug.cgi?id=282427.\n\t *\n\t * Because PHP and WordPress can redirect to both relative and absolute URLs\n\t * using the `location` header we need to ensure redirects are processed\n\t * correctly by the Service Worker.\n\t *\n\t * As a workaround for Safari Service Workers, we use `Response.redirect()`\n\t * for all redirect responses (300-399 status codes) coming from PHP.\n\t * This solution was suggested in the Webkit bug comment:\n\t * https://bugs.webkit.org/show_bug.cgi?id=282427#c2\n\t */\n\tif (\n\t\tphpResponse.httpStatusCode >= 300 &&\n\t\tphpResponse.httpStatusCode <= 399 &&\n\t\tphpResponse.headers['location']\n\t) {\n\t\treturn Response.redirect(\n\t\t\tphpResponse.headers['location'][0],\n\t\t\tphpResponse.httpStatusCode\n\t\t);\n\t}\n\n\treturn new Response(phpResponse.bytes, {\n\t\theaders: phpResponse.headers,\n\t\tstatus: phpResponse.httpStatusCode,\n\t});\n}\n\n/**\n * Sends the message to all the controlled clients\n * of this service worker.\n *\n * This used to be implemented with a BroadcastChannel, but\n * it didn't work in Safari. BroadcastChannel breaks iframe\n * embedding the playground in Safari.\n *\n * Weirdly, Safari does not pass any messages from the ServiceWorker\n * to Window if the page is rendered inside an iframe. Window to Service\n * Worker communication works just fine.\n *\n * The regular client.postMessage() communication works perfectly, so that's\n * what this function uses to broadcast the message.\n *\n * @param  message The message to broadcast.\n * @param  scope   Target web worker scope.\n * @returns The request ID to receive the reply.\n */\nexport async function broadcastMessageExpectReply(message: any, scope: string) {\n\tconst requestId = getNextRequestId();\n\tfor (const client of await self.clients.matchAll({\n\t\t// Sometimes the client that triggered the current fetch()\n\t\t// event is considered uncontrolled in Google Chrome. This\n\t\t// only happens on the first few fetches() after the initial\n\t\t// registration of the service worker.\n\t\tincludeUncontrolled: true,\n\t})) {\n\t\tclient.postMessage({\n\t\t\t...message,\n\t\t\t/**\n\t\t\t * Attach the scope with a URL starting with `/scope:` to this message.\n\t\t\t *\n\t\t\t * We need this mechanics because this worker broadcasts\n\t\t\t * events to all the listeners across all browser tabs. Scopes\n\t\t\t * helps WASM workers ignore requests meant for other WASM workers.\n\t\t\t */\n\t\t\tscope,\n\t\t\trequestId,\n\t\t});\n\t}\n\treturn requestId;\n}\n\n/**\n * Copy a request with custom overrides.\n *\n * This function is only needed because Request properties\n * are read-only. The only way to change e.g. a URL is to\n * create an entirely new request:\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Request\n *\n * @param  request\n * @param  overrides\n * @returns The new request.\n */\nexport async function cloneRequest(\n\trequest: Request,\n\toverrides: Record<string, any>\n): Promise<Request> {\n\tconst body =\n\t\t['GET', 'HEAD'].includes(request.method) || 'body' in overrides\n\t\t\t? undefined\n\t\t\t: await request.blob();\n\n\treturn new Request(overrides['url'] || request.url, {\n\t\tbody,\n\t\tmethod: request.method,\n\t\theaders: request.headers,\n\t\treferrer: request.referrer,\n\t\treferrerPolicy: request.referrerPolicy,\n\t\tmode: request.mode === 'navigate' ? 'same-origin' : request.mode,\n\t\tcredentials: request.credentials,\n\t\tcache: request.cache,\n\t\tredirect: request.redirect,\n\t\tintegrity: request.integrity,\n\t\t...overrides,\n\t});\n}\n\n/**\n * Extracts headers from a Request as a plain key->value JS object.\n *\n * @param request\n * @returns\n */\nexport function getRequestHeaders(request: Request) {\n\tconst headers: Record<string, string> = {};\n\trequest.headers.forEach((value: string, key: string) => {\n\t\theaders[key] = value;\n\t});\n\treturn headers;\n}\n","import { cloneRequest } from '@php-wasm/web-service-worker';\n\nexport async function fetchWithCorsProxy(\n\tinput: RequestInfo,\n\tinit?: RequestInit,\n\tcorsProxyUrl?: string\n): Promise<Response> {\n\tconst directFetch = fetch(input, init);\n\tif (!corsProxyUrl) {\n\t\treturn directFetch;\n\t}\n\n\ttry {\n\t\treturn await directFetch;\n\t} catch {\n\t\tlet newInput: string | Request;\n\t\tif (typeof input === 'string' || input instanceof URL) {\n\t\t\tnewInput = `${corsProxyUrl}${input}`;\n\t\t} else if (input instanceof Request) {\n\t\t\tnewInput = await cloneRequest(input, {\n\t\t\t\turl: `${corsProxyUrl}${input.url}`,\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Invalid input type for fetch');\n\t\t}\n\n\t\treturn fetch(newInput, init);\n\t}\n}\n","/**\n * This is the secret sauce that enables HTTPS requests from PHP\n * via file_get_contents(), curl, and all other networking mechanisms.\n *\n * This is effectively a MITM attack on the PHP instance. The code\n * in this module decrypts the outbound traffic, runs the request\n * using fetch(), and then provides an encrypted response. From\n * PHP's perspective, it is indistinguishable from a direct connection\n * to the right server.\n *\n * ## How does it work?\n *\n * Emscripten can be configured to stream all network traffic through a\n * WebSocket. `@php-wasm/node` and `wp-now` use that to access the internet\n * via a local WebSocket->TCP proxy, but the in-browser version of WordPress\n * Playground exposes no such proxy.\n *\n * This module implements a \"fake\" WebSocket class. Instead of starting a `ws://`\n * connection, it translates the raw HTTP/HTTPS bytes into a `fetch()` call.\n *\n * In case of HTTP, the raw request bytes are parsed into a Request object with\n * a body stream and passes it to `fetch()`. Then, as the response status, headers,\n * and the body arrive, they're stream-encoded as raw response bytes and exposed as\n * incoming WebSocket data.\n *\n * In case of HTTPS, we the raw bytes are first piped through a custom TCPConnection\n * class as follows:\n *\n * 1. We generate a self-signed CA certificate and tell PHP to trust it using the\n *    `openssl.cafile` PHP.ini option\n * 2. We create a domain-specific child certificate and sign it with the CA private key.\n * 3. We start accepting raw encrypted bytes, process them as structured TLS records,\n *    and perform the TLS handshake.\n * 4. Encrypted tunnel is established\n *   * TLSConnection decrypts the encrypted outbound data sent by PHP\n *   * TLSConnection encrypts the unencrypted inbound data fed back to PHP\n *\n * From there, the plaintext data is treated by the same HTTP<->fetch() machinery as\n * described in the previous paragraph.\n */\nimport { TLS_1_2_Connection } from './tls/1_2/connection';\nimport { generateCertificate, GeneratedCertificate } from './tls/certificates';\nimport { concatUint8Arrays } from './tls/utils';\nimport { ContentTypes } from './tls/1_2/types';\nimport { fetchWithCorsProxy } from './fetch-with-cors-proxy';\n\nexport type TCPOverFetchOptions = {\n\tCAroot: GeneratedCertificate;\n\tcorsProxyUrl?: string;\n};\n\n/**\n * Sets up a WebSocket that analyzes the received bytes and, if they look like\n * TLS or HTTP, handles the network transmission using fetch().\n */\nexport const tcpOverFetchWebsocket = (tcpOptions: TCPOverFetchOptions) => {\n\treturn {\n\t\twebsocket: {\n\t\t\turl: (_: any, host: string, port: string) => {\n\t\t\t\tconst query = new URLSearchParams({\n\t\t\t\t\thost,\n\t\t\t\t\tport,\n\t\t\t\t}).toString();\n\t\t\t\treturn `ws://playground.internal/?${query}`;\n\t\t\t},\n\t\t\tsubprotocol: 'binary',\n\t\t\tdecorator: () => {\n\t\t\t\treturn class extends TCPOverFetchWebsocket {\n\t\t\t\t\tconstructor(url: string, wsOptions: string[]) {\n\t\t\t\t\t\tsuper(url, wsOptions, {\n\t\t\t\t\t\t\tCAroot: tcpOptions.CAroot,\n\t\t\t\t\t\t\tcorsProxyUrl: tcpOptions.corsProxyUrl,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t};\n};\n\nexport interface TCPOverFetchWebsocketOptions {\n\tCAroot?: GeneratedCertificate;\n\t/**\n\t * If true, the WebSocket will emit 'message' events with the received bytes\n\t * and the 'close' event when the WebSocket is closed.\n\t *\n\t * If false, the consumer will be responsible for reading the bytes from the\n\t * clientDownstream stream and tracking the closure of that stream.\n\t */\n\toutputType?: 'messages' | 'stream';\n\tcorsProxyUrl?: string;\n}\n\nexport class TCPOverFetchWebsocket {\n\tCONNECTING = 0;\n\tOPEN = 1;\n\tCLOSING = 2;\n\tCLOSED = 3;\n\treadyState = this.CONNECTING;\n\tbinaryType = 'blob';\n\tbufferedAmount = 0;\n\textensions = '';\n\tprotocol = 'ws';\n\thost = '';\n\tport = 0;\n\tlisteners = new Map<string, any>();\n\tCAroot?: GeneratedCertificate;\n\tcorsProxyUrl?: string;\n\n\tclientUpstream = new TransformStream();\n\tclientUpstreamWriter = this.clientUpstream.writable.getWriter();\n\tclientDownstream = new TransformStream();\n\tfetchInitiated = false;\n\tbufferedBytesFromClient: Uint8Array = new Uint8Array(0);\n\n\tconstructor(\n\t\tpublic url: string,\n\t\tpublic options: string[],\n\t\t{\n\t\t\tCAroot,\n\t\t\tcorsProxyUrl,\n\t\t\toutputType = 'messages',\n\t\t}: TCPOverFetchWebsocketOptions = {}\n\t) {\n\t\tconst wsUrl = new URL(url);\n\t\tthis.host = wsUrl.searchParams.get('host')!;\n\t\tthis.port = parseInt(wsUrl.searchParams.get('port')!, 10);\n\t\tthis.binaryType = 'arraybuffer';\n\n\t\tthis.corsProxyUrl = corsProxyUrl;\n\t\tthis.CAroot = CAroot;\n\t\tif (outputType === 'messages') {\n\t\t\tthis.clientDownstream.readable\n\t\t\t\t.pipeTo(\n\t\t\t\t\tnew WritableStream({\n\t\t\t\t\t\twrite: (chunk) => {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Emscripten expects the message event to be emitted\n\t\t\t\t\t\t\t * so let's emit it.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthis.emit('message', { data: chunk });\n\t\t\t\t\t\t},\n\t\t\t\t\t\tabort: () => {\n\t\t\t\t\t\t\t// We don't know what went wrong and the browser\n\t\t\t\t\t\t\t// won't tell us much either, so let's just pretend\n\t\t\t\t\t\t\t// the server is unreachable.\n\t\t\t\t\t\t\tthis.emit('error', new Error('ECONNREFUSED'));\n\t\t\t\t\t\t\tthis.close();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclose: () => {\n\t\t\t\t\t\t\tthis.close();\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.catch(() => {\n\t\t\t\t\t// Ignore failures arising from stream errors.\n\t\t\t\t\t// This class communicates problems to the caller\n\t\t\t\t\t// via the 'error' event.\n\t\t\t\t});\n\t\t}\n\t\tthis.readyState = this.OPEN;\n\t\tthis.emit('open');\n\t}\n\n\ton(eventName: string, callback: (e: any) => void) {\n\t\tthis.addEventListener(eventName, callback);\n\t}\n\n\tonce(eventName: string, callback: (e: any) => void) {\n\t\tconst wrapper = (e: any) => {\n\t\t\tcallback(e);\n\t\t\tthis.removeEventListener(eventName, wrapper);\n\t\t};\n\t\tthis.addEventListener(eventName, wrapper);\n\t}\n\n\taddEventListener(eventName: string, callback: (e: any) => void) {\n\t\tif (!this.listeners.has(eventName)) {\n\t\t\tthis.listeners.set(eventName, new Set());\n\t\t}\n\t\tthis.listeners.get(eventName).add(callback);\n\t}\n\n\tremoveListener(eventName: string, callback: (e: any) => void) {\n\t\tthis.removeEventListener(eventName, callback);\n\t}\n\n\tremoveEventListener(eventName: string, callback: (e: any) => void) {\n\t\tconst listeners = this.listeners.get(eventName);\n\t\tif (listeners) {\n\t\t\tlisteners.delete(callback);\n\t\t}\n\t}\n\n\temit(eventName: string, data: any = {}) {\n\t\tif (eventName === 'message') {\n\t\t\tthis.onmessage(data);\n\t\t} else if (eventName === 'close') {\n\t\t\tthis.onclose(data);\n\t\t} else if (eventName === 'error') {\n\t\t\tthis.onerror(data);\n\t\t} else if (eventName === 'open') {\n\t\t\tthis.onopen(data);\n\t\t}\n\t\tconst listeners = this.listeners.get(eventName);\n\t\tif (listeners) {\n\t\t\tfor (const listener of listeners) {\n\t\t\t\tlistener(data);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Default event handlers that can be overridden by the user\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tonclose(data: any) {}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tonerror(data: any) {}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tonmessage(data: any) {}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tonopen(data: any) {}\n\n\t/**\n\t * Emscripten calls this method whenever the WASM module\n\t * writes bytes to the TCP socket.\n\t */\n\tsend(data: ArrayBuffer) {\n\t\tif (\n\t\t\tthis.readyState === this.CLOSING ||\n\t\t\tthis.readyState === this.CLOSED\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clientUpstreamWriter.write(new Uint8Array(data));\n\n\t\tif (this.fetchInitiated) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Guess the protocol type first so we can learn\n\t\t// what to do with the incoming bytes.\n\t\tthis.bufferedBytesFromClient = concatUint8Arrays([\n\t\t\tthis.bufferedBytesFromClient,\n\t\t\tnew Uint8Array(data),\n\t\t]);\n\t\tswitch (guessProtocol(this.port, this.bufferedBytesFromClient)) {\n\t\t\tcase false:\n\t\t\t\t// Not enough data to classify the protocol,\n\t\t\t\t// let's wait for more.\n\t\t\t\treturn;\n\t\t\tcase 'other':\n\t\t\t\tthis.emit('error', new Error('Unsupported protocol'));\n\t\t\t\tthis.close();\n\t\t\t\tbreak;\n\t\t\tcase 'tls':\n\t\t\t\tthis.fetchOverTLS();\n\t\t\t\tthis.fetchInitiated = true;\n\t\t\t\tbreak;\n\t\t\tcase 'http':\n\t\t\t\tthis.fetchOverHTTP();\n\t\t\t\tthis.fetchInitiated = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync fetchOverTLS() {\n\t\tif (!this.CAroot) {\n\t\t\tthrow new Error(\n\t\t\t\t'TLS protocol is only supported when the TCPOverFetchWebsocket is ' +\n\t\t\t\t\t'instantiated with a CAroot'\n\t\t\t);\n\t\t}\n\t\tconst siteCert = await generateCertificate(\n\t\t\t{\n\t\t\t\tsubject: {\n\t\t\t\t\tcommonName: this.host,\n\t\t\t\t\torganizationName: this.host,\n\t\t\t\t\tcountryName: 'US',\n\t\t\t\t},\n\t\t\t\tissuer: this.CAroot.tbsDescription.subject,\n\t\t\t},\n\t\t\tthis.CAroot.keyPair\n\t\t);\n\n\t\tconst tlsConnection = new TLS_1_2_Connection();\n\n\t\t// Connect this WebSocket's client end to the TLS connection.\n\t\t// Forward the encrypted bytes from the WebSocket to the TLS connection.\n\t\tthis.clientUpstream.readable\n\t\t\t.pipeTo(tlsConnection.clientEnd.upstream.writable)\n\t\t\t.catch(() => {\n\t\t\t\t// Ignore failures arising from pipeTo() errors.\n\t\t\t\t// The caller will observe the clientEnd.downstream.writable stream\n\t\t\t\t// erroring out.\n\t\t\t});\n\n\t\t// Forward the decrypted bytes from the TLS connection to this WebSocket.\n\t\ttlsConnection.clientEnd.downstream.readable\n\t\t\t.pipeTo(this.clientDownstream.writable)\n\t\t\t.catch(() => {\n\t\t\t\t// Ignore failures arising from pipeTo() errors.\n\t\t\t\t// The caller will observe the clientEnd.downstream.writable stream\n\t\t\t\t// erroring out.\n\t\t\t});\n\n\t\t// Perform the TLS handshake\n\t\tawait tlsConnection.TLSHandshake(siteCert.keyPair.privateKey, [\n\t\t\tsiteCert.certificate,\n\t\t\tthis.CAroot.certificate,\n\t\t]);\n\n\t\t// Connect the TLS server end to the fetch() request\n\t\tconst request = await RawBytesFetch.parseHttpRequest(\n\t\t\ttlsConnection.serverEnd.upstream.readable,\n\t\t\tthis.host,\n\t\t\t'https'\n\t\t);\n\t\ttry {\n\t\t\tawait RawBytesFetch.fetchRawResponseBytes(\n\t\t\t\trequest,\n\t\t\t\tthis.corsProxyUrl\n\t\t\t).pipeTo(tlsConnection.serverEnd.downstream.writable);\n\t\t} catch (e) {\n\t\t\t// Ignore errors from fetch()\n\t\t\t// They are handled in the constructor\n\t\t\t// via this.clientDownstream.readable.pipeTo()\n\t\t\t// and if we let the failures they would be logged\n\t\t\t// as an unhandled promise rejection.\n\t\t}\n\t}\n\n\tasync fetchOverHTTP() {\n\t\t// Connect this WebSocket's client end to the fetch() request\n\t\tconst request = await RawBytesFetch.parseHttpRequest(\n\t\t\tthis.clientUpstream.readable,\n\t\t\tthis.host,\n\t\t\t'http'\n\t\t);\n\t\ttry {\n\t\t\tawait RawBytesFetch.fetchRawResponseBytes(\n\t\t\t\trequest,\n\t\t\t\tthis.corsProxyUrl\n\t\t\t).pipeTo(this.clientDownstream.writable);\n\t\t} catch (e) {\n\t\t\t// Ignore errors from fetch()\n\t\t\t// They are handled in the constructor\n\t\t\t// via this.clientDownstream.readable.pipeTo()\n\t\t\t// and if we let the failures they would be logged\n\t\t\t// as an unhandled promise rejection.\n\t\t}\n\t}\n\n\tclose() {\n\t\t/**\n\t\t * Workaround a PHP.wasm issue – if the WebSocket is\n\t\t * closed asynchronously after the last chunk is received,\n\t\t * the PHP.wasm runtime enters an infinite polling loop.\n\t\t *\n\t\t * The root cause of the problem is unclear at the time\n\t\t * of writing this comment. There's a chance it's a regular\n\t\t * POSIX behavior.\n\t\t *\n\t\t * Either way, sending an empty data chunk before closing\n\t\t * the WebSocket resolves the problem.\n\t\t */\n\t\tthis.emit('message', { data: new Uint8Array(0) });\n\n\t\tthis.readyState = this.CLOSING;\n\t\tthis.emit('close');\n\t\tthis.readyState = this.CLOSED;\n\t}\n}\n\nconst HTTP_METHODS = [\n\t'GET',\n\t'POST',\n\t'HEAD',\n\t'PATCH',\n\t'OPTIONS',\n\t'DELETE',\n\t'PUT',\n\t'TRACE',\n];\n\nfunction guessProtocol(port: number, data: Uint8Array) {\n\tif (data.length < 8) {\n\t\t// Not enough data to classify the protocol, let's wait for more.\n\t\treturn false;\n\t}\n\n\t// Assume TLS if we're on the usual HTTPS port and the\n\t// first three bytes look like a TLS handshake record.\n\tconst looksLikeTls =\n\t\tport === 443 &&\n\t\tdata[0] === ContentTypes.Handshake &&\n\t\t// TLS versions between 1.0 and 1.2\n\t\tdata[1] === 0x03 &&\n\t\tdata[2] >= 0x01 &&\n\t\tdata[2] <= 0x03;\n\tif (looksLikeTls) {\n\t\treturn 'tls';\n\t}\n\n\t// Assume HTTP if we're on the usual HTTP port and the\n\t// first starts with an HTTP method and a space.\n\tconst decodedFirstLine = new TextDecoder('latin1', {\n\t\tfatal: true,\n\t}).decode(data);\n\tconst looksLikeHttp = HTTP_METHODS.some((method) =>\n\t\tdecodedFirstLine.startsWith(method + ' ')\n\t);\n\tif (looksLikeHttp) {\n\t\treturn 'http';\n\t}\n\n\treturn 'other';\n}\n\nclass RawBytesFetch {\n\t/**\n\t * Streams a HTTP response including the status line and headers.\n\t */\n\tstatic fetchRawResponseBytes(request: Request, corsProxyUrl?: string) {\n\t\t// This initially used a TransformStream and piped the response\n\t\t// body to the writable side of the TransformStream.\n\t\t//\n\t\t// Unfortunately, the first response body chunk was not correctly\n\t\t// enqueued so we switched to a customReadableStream.\n\t\treturn new ReadableStream({\n\t\t\tasync start(controller) {\n\t\t\t\tlet response: Response;\n\t\t\t\ttry {\n\t\t\t\t\tresponse = await fetchWithCorsProxy(\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tcorsProxyUrl\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Pretend we've got a 400 Bad Request response whenever\n\t\t\t\t\t * the fetch() call fails.\n\t\t\t\t\t *\n\t\t\t\t\t * Just propagating an error and closing a WebSocket does\n\t\t\t\t\t * not make PHP aware the socket closed abruptly. This means\n\t\t\t\t\t * the AsyncHttp\\Client will keep polling the socket indefinitely\n\t\t\t\t\t * until the request times out. This isn't perfect, as we want\n\t\t\t\t\t * to close the socket as soon as possible to avoid, e.g., 10 seconds\n\t\t\t\t\t * of unnecessary waitin for the timeout\n\t\t\t\t\t *\n\t\t\t\t\t * The root cause is unknown and likely related to the low-level\n\t\t\t\t\t * implementation of polling file descriptors. The following\n\t\t\t\t\t * workaround is far from ideal, but it must suffice until we\n\t\t\t\t\t * have a platform-level resolution.\n\t\t\t\t\t */\n\t\t\t\t\tcontroller.enqueue(\n\t\t\t\t\t\tnew TextEncoder().encode(\n\t\t\t\t\t\t\t'HTTP/1.1 400 Bad Request\\r\\nContent-Length: 0\\r\\n\\r\\n'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tcontroller.error(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcontroller.enqueue(RawBytesFetch.headersAsBytes(response));\n\t\t\t\tconst reader = response.body?.getReader();\n\t\t\t\tif (!reader) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst encoder = new TextEncoder();\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst { done, value } = await reader.read();\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Pass the body stream assuming the response uses\n\t\t\t\t\t\t * chunked transfer encoding.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * See `headersAsBytes()` for the details.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tcontroller.enqueue(\n\t\t\t\t\t\t\tencoder.encode(`${value.length.toString(16)}\\r\\n`)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\tcontroller.enqueue(encoder.encode('\\r\\n'));\n\t\t\t\t\t}\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tcontroller.enqueue(encoder.encode('0\\r\\n\\r\\n'));\n\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate static headersAsBytes(response: Response) {\n\t\tconst status = `HTTP/1.1 ${response.status} ${response.statusText}`;\n\n\t\tconst headersObject: Record<string, string> = {};\n\t\tresponse.headers.forEach((value, name) => {\n\t\t\theadersObject[name.toLowerCase()] = value;\n\t\t});\n\n\t\t/**\n\t\t * Best-effort attempt to provide the correct content-length\n\t\t * to the PHP-side request handler.\n\t\t *\n\t\t * Web servers often respond with a combination of Content-Length\n\t\t * and Content-Encoding. For example, a 16kb text file may be compressed\n\t\t * to 4kb with gzip and served with a Content-Encoding of `gzip` and a\n\t\t * Content-Length of 4KB.\n\t\t *\n\t\t * The web browser, however, exposes neither the Content-Encoding header\n\t\t * nor the gzipped data stream. All we have access to is the original\n\t\t * Content-Length value of the gzipped file and a decompressed data stream.\n\t\t *\n\t\t * If we just pass that along to the PHP-side request handler, it would\n\t\t * see a 16KB body stream with a Content-Length of 4KB. It would then\n\t\t * truncate the body stream at 4KB and discard the rest of the data.\n\t\t *\n\t\t * This is not what we want.\n\t\t *\n\t\t * To correct that behavior, we're stripping the Content-Length entirely.\n\t\t * We do that for every single response because we don't have any way\n\t\t * of knowing whether any Content-Encoding was used. Furthermore, we can't\n\t\t * just calculate the correct Content-Length value without consuming the\n\t\t * entire content stream – and we want to pass each data chunk to PHP\n\t\t * as we receive it.\n\t\t *\n\t\t * Instead of a fixed Content-Length, we'll use Content-Encoding: Chunked,\n\t\t * and then provide a per-chunk Content-Length. See fetchRawResponseBytes()\n\t\t * for the details.\n\t\t */\n\t\tdelete headersObject['content-length'];\n\t\theadersObject['transfer-encoding'] = 'chunked';\n\n\t\tconst headers: string[] = [];\n\t\tfor (const [name, value] of Object.entries(headersObject)) {\n\t\t\theaders.push(`${name}: ${value}`);\n\t\t}\n\t\tconst string = [status, ...headers].join('\\r\\n') + '\\r\\n\\r\\n';\n\t\treturn new TextEncoder().encode(string);\n\t}\n\n\t/**\n\t * Parses a raw, streamed HTTP request into a Request object\n\t * with known headers and a readable body stream.\n\t */\n\tstatic async parseHttpRequest(\n\t\trequestBytesStream: ReadableStream<Uint8Array>,\n\t\thost: string,\n\t\tprotocol: 'http' | 'https'\n\t) {\n\t\tlet inputBuffer: Uint8Array = new Uint8Array(0);\n\n\t\tlet requestDataExhausted = false;\n\t\tlet headersEndIndex = -1;\n\t\tconst requestBytesReader = requestBytesStream.getReader();\n\t\twhile (headersEndIndex === -1) {\n\t\t\tconst { done, value } = await requestBytesReader.read();\n\t\t\tif (done) {\n\t\t\t\trequestDataExhausted = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tinputBuffer = concatUint8Arrays([inputBuffer, value]);\n\t\t\t// Find the end of the headers (\\r\\n\\r\\n). This is\n\t\t\t// not optimal as we may end up scanning the same\n\t\t\t// bytes multiple times, but the overhead is negligible\n\t\t\t// and the code is much simpler this way.\n\t\t\theadersEndIndex = findSequenceInBuffer(\n\t\t\t\tinputBuffer,\n\t\t\t\tnew Uint8Array([0x0d, 0x0a, 0x0d, 0x0a])\n\t\t\t);\n\t\t}\n\t\trequestBytesReader.releaseLock();\n\n\t\tconst headersBuffer = inputBuffer.slice(0, headersEndIndex);\n\t\tconst parsedHeaders = RawBytesFetch.parseRequestHeaders(headersBuffer);\n\n\t\tconst bodyBytes = inputBuffer.slice(\n\t\t\theadersEndIndex + 4 /* Skip \\r\\n\\r\\n */\n\t\t);\n\t\tlet outboundBodyStream: ReadableStream<Uint8Array> | undefined;\n\t\tif (parsedHeaders.method !== 'GET') {\n\t\t\tconst requestBytesReader = requestBytesStream.getReader();\n\t\t\toutboundBodyStream = new ReadableStream<Uint8Array>({\n\t\t\t\tasync start(controller) {\n\t\t\t\t\tif (bodyBytes.length > 0) {\n\t\t\t\t\t\tcontroller.enqueue(bodyBytes);\n\t\t\t\t\t}\n\t\t\t\t\tif (requestDataExhausted) {\n\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tasync pull(controller) {\n\t\t\t\t\tconst { done, value } = await requestBytesReader.read();\n\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t}\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Prefer the Host header to the host from the URL used in a PHP\n\t\t * function call.\n\t\t *\n\t\t * There are tradeoffs involved in this decision.\n\t\t *\n\t\t * The URL from the PHP function call is the actual network location\n\t\t * the caller intended to reach, e.g. `http://192.168.1.100` or\n\t\t * `http://127.0.0.1`.\n\t\t *\n\t\t * The Host header is what the developer wanted to provide to the\n\t\t * web server, e.g. `wordpress.org` or `localhost`.\n\t\t *\n\t\t * The Host header is not a reliable indication of the target URL.\n\t\t * However, `fetch()` does not support Host spoofing. Furthermore,\n\t\t * a webserver running on 127.0.0.1 may only respond correctly\n\t\t * when it is provided with the Host header `localhost`.\n\t\t *\n\t\t * Prefering the Host header over the host from the PHP function call\n\t\t * is not perfect, but it seems like the lesser of two evils.\n\t\t */\n\t\tconst hostname = parsedHeaders.headers.get('Host') ?? host;\n\t\tconst url = new URL(parsedHeaders.path, protocol + '://' + hostname);\n\t\turl.pathname = parsedHeaders.path;\n\n\t\treturn new Request(url.toString(), {\n\t\t\tmethod: parsedHeaders.method,\n\t\t\theaders: parsedHeaders.headers,\n\t\t\tbody: outboundBodyStream,\n\t\t\t// In Node.js, duplex: 'half' is required when\n\t\t\t// the body stream is provided.\n\t\t\t// @ts-expect-error\n\t\t\tduplex: 'half',\n\t\t});\n\t}\n\n\tprivate static parseRequestHeaders(httpRequestBytes: Uint8Array) {\n\t\tconst httpRequest = new TextDecoder().decode(httpRequestBytes);\n\t\tconst statusLineMaybe = httpRequest.split('\\n')[0];\n\t\tconst [method, path] = statusLineMaybe.split(' ');\n\n\t\tconst headers = new Headers();\n\t\tfor (const line of httpRequest.split('\\r\\n').slice(1)) {\n\t\t\tif (line === '') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst [name, value] = line.split(': ');\n\t\t\theaders.set(name, value);\n\t\t}\n\n\t\treturn { method, path, headers };\n\t}\n}\n\nfunction findSequenceInBuffer(\n\tbuffer: Uint8Array,\n\tsequence: Uint8Array\n): number {\n\tconst bufferLength = buffer.length;\n\tconst sequenceLength = sequence.length;\n\tconst lastPossibleIndex = bufferLength - sequenceLength;\n\n\tfor (let i = 0; i <= lastPossibleIndex; i++) {\n\t\tlet found = true;\n\t\tfor (let j = 0; j < sequenceLength; j++) {\n\t\t\tif (buffer[i + j] !== sequence[j]) {\n\t\t\t\tfound = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (found) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n","import {\n\tEmscriptenOptions,\n\tloadPHPRuntime,\n\tPHPLoaderModule,\n\tSupportedPHPVersion,\n} from '@php-wasm/universal';\nimport { getPHPLoaderModule } from './get-php-loader-module';\nimport {\n\tTCPOverFetchOptions,\n\ttcpOverFetchWebsocket,\n} from './tcp-over-fetch-websocket';\n\nexport interface LoaderOptions {\n\temscriptenOptions?: EmscriptenOptions;\n\tonPhpLoaderModuleLoaded?: (module: PHPLoaderModule) => void;\n\ttcpOverFetch?: TCPOverFetchOptions;\n}\n\n/**\n * Fake a websocket connection to prevent errors in the web app\n * from cascading and breaking the Playground.\n */\nconst fakeWebsocket = () => {\n\treturn {\n\t\twebsocket: {\n\t\t\tdecorator: (WebSocketConstructor: any) => {\n\t\t\t\treturn class FakeWebsocketConstructor extends WebSocketConstructor {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tsuper();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// pass\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsend() {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t};\n};\n\nexport async function loadWebRuntime(\n\tphpVersion: SupportedPHPVersion,\n\toptions: LoaderOptions = {}\n) {\n\tconst phpLoaderModule = await getPHPLoaderModule(phpVersion);\n\toptions.onPhpLoaderModuleLoaded?.(phpLoaderModule);\n\tconst websocketExtension = options.tcpOverFetch\n\t\t? tcpOverFetchWebsocket(options.tcpOverFetch)\n\t\t: fakeWebsocket();\n\treturn await loadPHPRuntime(phpLoaderModule, {\n\t\t...(options.emscriptenOptions || {}),\n\t\t...websocketExtension,\n\t});\n}\n","import { PHP, UniversalPHP, __private__dont__use } from '@php-wasm/universal';\nimport { Semaphore, basename, joinPaths } from '@php-wasm/util';\nimport { logger } from '@php-wasm/logger';\n\nexport type EmscriptenFS = any;\n\n/**\n * Represents a stream in the Emscripten file system.\n */\nexport type EmscriptenFSStream = {\n\t/** The path of the node associated with this stream. */\n\tpath: string;\n\t/** The node associated with the stream. */\n\tnode: EmscriptenFSNode;\n};\n\n/**\n * Represents a node in the Emscripten file system.\n */\nexport type EmscriptenFSNode = {\n\t/**\n\t * The name of the file or directory.\n\t */\n\tname: string;\n\t/**\n\t * A binary flag encoding information about this note,\n\t * e.g. whether it's file or a directory.\n\t */\n\tmode: number;\n\t/**\n\t * A dictionary of functions representing operations\n\t * that can be performed on the node.\n\t */\n\tnode_ops: any;\n};\n\n/**\n * Represents the type of node in PHP file system.\n */\nexport type FSNodeType = 'file' | 'directory';\n\n/**\n * Represents an update operation on a file system node.\n */\nexport type UpdateFileOperation = {\n\t/** The type of operation being performed. */\n\toperation: 'WRITE';\n\t/** The path of the node being updated. */\n\tpath: string;\n\t/** Optional. The new contents of the file. */\n\tdata?: Uint8Array;\n\tnodeType: 'file';\n};\n\n/**\n * Represents a directory operation.\n */\nexport type CreateOperation = {\n\t/** The type of operation being performed. */\n\toperation: 'CREATE';\n\t/** The path of the node being created. */\n\tpath: string;\n\t/** The type of the node being created. */\n\tnodeType: FSNodeType;\n};\n\nexport type DeleteOperation = {\n\t/** The type of operation being performed. */\n\toperation: 'DELETE';\n\t/** The path of the node being updated. */\n\tpath: string;\n\t/** The type of the node being updated. */\n\tnodeType: FSNodeType;\n};\n\n/**\n * Represents a rename operation on a file or directory in PHP file system.\n */\nexport type RenameOperation = {\n\t/** The type of operation being performed. */\n\toperation: 'RENAME';\n\t/** The original path of the file or directory being renamed. */\n\tpath: string;\n\t/** The new path of the file or directory after the rename operation. */\n\ttoPath: string;\n\t/** The type of node being renamed (file or directory). */\n\tnodeType: FSNodeType;\n};\n\n/**\n * Represents a node in the file system.\n */\nexport type FSNode = {\n\t/** The name of this file or directory. */\n\tname: string;\n\t/** The type of this node (file or directory). */\n\ttype: FSNodeType;\n\t/** The contents of the file, if it is a file and it's stored in memory. */\n\tcontents?: string;\n\t/** The child nodes of the directory, if it is a directory. */\n\tchildren?: FSNode[];\n};\n\nexport type FilesystemOperation =\n\t| CreateOperation\n\t| UpdateFileOperation\n\t| DeleteOperation\n\t| RenameOperation;\n\nexport function journalFSEvents(\n\tphp: PHP,\n\tfsRoot: string,\n\tonEntry: (entry: FilesystemOperation) => void = () => {}\n) {\n\tfunction bindToCurrentRuntime() {\n\t\tfsRoot = normalizePath(fsRoot);\n\t\tconst FS = php[__private__dont__use].FS;\n\t\tconst FSHooks = createFSHooks(FS, (entry: FilesystemOperation) => {\n\t\t\t// Only journal entries inside the specified root directory.\n\t\t\tif (entry.path.startsWith(fsRoot)) {\n\t\t\t\tonEntry(entry);\n\t\t\t} else if (\n\t\t\t\tentry.operation === 'RENAME' &&\n\t\t\t\tentry.toPath.startsWith(fsRoot)\n\t\t\t) {\n\t\t\t\tfor (const op of recordExistingPath(\n\t\t\t\t\tphp,\n\t\t\t\t\tentry.path,\n\t\t\t\t\tentry.toPath\n\t\t\t\t)) {\n\t\t\t\t\tonEntry(op);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Override the original FS functions with ones running the hooks.\n\t\t * We could use a Proxy object here if the Emscripten JavaScript module\n\t\t * did not use hard-coded references to the FS object.\n\t\t */\n\t\tconst originalFunctions: Record<string, Function> = {};\n\t\tfor (const [name] of Object.entries(FSHooks)) {\n\t\t\toriginalFunctions[name] = FS[name];\n\t\t}\n\n\t\t// eslint-disable-next-line no-inner-declarations\n\t\tfunction bind() {\n\t\t\tfor (const [name, hook] of Object.entries(FSHooks)) {\n\t\t\t\tFS[name] = function (...args: any[]) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\thook(...args);\n\t\t\t\t\treturn originalFunctions[name].apply(this, args);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line no-inner-declarations\n\t\tfunction unbind() {\n\t\t\t// Restore the original FS functions.\n\t\t\tfor (const [name, fn] of Object.entries(originalFunctions)) {\n\t\t\t\tphp[__private__dont__use].FS[name] = fn;\n\t\t\t}\n\t\t}\n\n\t\tphp[__private__dont__use].journal = {\n\t\t\tbind,\n\t\t\tunbind,\n\t\t};\n\t\tbind();\n\t}\n\tphp.addEventListener('runtime.initialized', bindToCurrentRuntime);\n\tif (php[__private__dont__use]) {\n\t\tbindToCurrentRuntime();\n\t}\n\n\tfunction unbindFromOldRuntime() {\n\t\tphp[__private__dont__use].journal.unbind();\n\t\tdelete php[__private__dont__use].journal;\n\t}\n\tphp.addEventListener('runtime.beforedestroy', unbindFromOldRuntime);\n\n\treturn function unbind() {\n\t\tphp.removeEventListener('runtime.initialized', bindToCurrentRuntime);\n\t\tphp.removeEventListener('runtime.beforedestroy', unbindFromOldRuntime);\n\t\treturn php[__private__dont__use].journal.unbind();\n\t};\n}\n\nconst createFSHooks = (\n\tFS: EmscriptenFS,\n\trecordEntry: (entry: FilesystemOperation) => void = () => {}\n) => ({\n\twrite(stream: EmscriptenFSStream) {\n\t\trecordEntry({\n\t\t\toperation: 'WRITE',\n\t\t\tpath: stream.path,\n\t\t\tnodeType: 'file',\n\t\t});\n\t},\n\ttruncate(path: string) {\n\t\tlet node;\n\t\tif (typeof path == 'string') {\n\t\t\tconst lookup = FS.lookupPath(path, {\n\t\t\t\tfollow: true,\n\t\t\t});\n\t\t\tnode = lookup.node;\n\t\t} else {\n\t\t\tnode = path;\n\t\t}\n\t\trecordEntry({\n\t\t\toperation: 'WRITE',\n\t\t\tpath: FS.getPath(node),\n\t\t\tnodeType: 'file',\n\t\t});\n\t},\n\tunlink(path: string) {\n\t\trecordEntry({\n\t\t\toperation: 'DELETE',\n\t\t\tpath,\n\t\t\tnodeType: 'file',\n\t\t});\n\t},\n\tmknod(path: string, mode: number) {\n\t\tif (FS.isFile(mode)) {\n\t\t\trecordEntry({\n\t\t\t\toperation: 'CREATE',\n\t\t\t\tpath,\n\t\t\t\tnodeType: 'file',\n\t\t\t});\n\t\t}\n\t},\n\tmkdir(path: string) {\n\t\trecordEntry({\n\t\t\toperation: 'CREATE',\n\t\t\tpath,\n\t\t\tnodeType: 'directory',\n\t\t});\n\t},\n\trmdir(path: string) {\n\t\trecordEntry({\n\t\t\toperation: 'DELETE',\n\t\t\tpath,\n\t\t\tnodeType: 'directory',\n\t\t});\n\t},\n\trename(old_path: string, new_path: string) {\n\t\ttry {\n\t\t\tconst oldLookup = FS.lookupPath(old_path, {\n\t\t\t\tfollow: true,\n\t\t\t});\n\t\t\tconst newParentPath = FS.lookupPath(new_path, {\n\t\t\t\tparent: true,\n\t\t\t}).path;\n\n\t\t\trecordEntry({\n\t\t\t\toperation: 'RENAME',\n\t\t\t\tnodeType: FS.isDir(oldLookup.node.mode) ? 'directory' : 'file',\n\t\t\t\tpath: oldLookup.path,\n\t\t\t\ttoPath: joinPaths(newParentPath, basename(new_path)),\n\t\t\t});\n\t\t} catch (e) {\n\t\t\t// We're running a bunch of FS lookups that may fail at this point.\n\t\t\t// Let's ignore the failures and let the actual rename operation\n\t\t\t// fail if it needs to.\n\t\t}\n\t},\n});\n\n/**\n * Replays a list of filesystem operations on a PHP instance.\n *\n * @param php\n * @param entries\n */\nexport function replayFSJournal(php: PHP, entries: FilesystemOperation[]) {\n\t// We need to restore the original functions to the FS object\n\t// before proceeding, or each replayed FS operation will be journaled.\n\t//\n\t// Unfortunately we can't just call the non-journaling versions directly,\n\t// because they call other low-level FS functions like `FS.mkdir()`\n\t// and will trigger the journaling hooks anyway.\n\tphp[__private__dont__use].journal.unbind();\n\ttry {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.operation === 'CREATE') {\n\t\t\t\tif (entry.nodeType === 'file') {\n\t\t\t\t\tphp.writeFile(entry.path, ' ');\n\t\t\t\t} else {\n\t\t\t\t\tphp.mkdir(entry.path);\n\t\t\t\t}\n\t\t\t} else if (entry.operation === 'DELETE') {\n\t\t\t\tif (entry.nodeType === 'file') {\n\t\t\t\t\tphp.unlink(entry.path);\n\t\t\t\t} else {\n\t\t\t\t\tphp.rmdir(entry.path);\n\t\t\t\t}\n\t\t\t} else if (entry.operation === 'WRITE') {\n\t\t\t\tphp.writeFile(entry.path, entry.data!);\n\t\t\t} else if (entry.operation === 'RENAME') {\n\t\t\t\tphp.mv(entry.path, entry.toPath);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tphp[__private__dont__use].journal.bind();\n\t}\n}\n\nexport function* recordExistingPath(\n\tphp: PHP,\n\tfromPath: string,\n\ttoPath: string\n): Generator<FilesystemOperation> {\n\tif (php.isDir(fromPath)) {\n\t\t// The rename operation moved a directory from outside root directory\n\t\t// into the root directory. We need to traverse the entire tree\n\t\t// and provide a create operation for each file and directory.\n\t\tyield {\n\t\t\toperation: 'CREATE',\n\t\t\tpath: toPath,\n\t\t\tnodeType: 'directory',\n\t\t};\n\t\tfor (const file of php.listFiles(fromPath)) {\n\t\t\tyield* recordExistingPath(\n\t\t\t\tphp,\n\t\t\t\tjoinPaths(fromPath, file),\n\t\t\t\tjoinPaths(toPath, file)\n\t\t\t);\n\t\t}\n\t} else {\n\t\t// The rename operation moved a file from outside root directory\n\t\t// into the root directory. Let's rewrite it as a create operation.\n\t\tyield {\n\t\t\toperation: 'CREATE',\n\t\t\tpath: toPath,\n\t\t\tnodeType: 'file',\n\t\t};\n\t\tyield {\n\t\t\toperation: 'WRITE',\n\t\t\tnodeType: 'file',\n\t\t\tpath: toPath,\n\t\t};\n\t}\n}\n\nfunction normalizePath(path: string) {\n\treturn path.replace(/\\/$/, '').replace(/\\/\\/+/g, '/');\n}\n\n/**\n * Normalizes a list of filesystem operations to remove\n * redundant operations.\n *\n * This is crucial because the journal doesn't store the file contents\n * on write, but only the information that the write happened. We only\n * read the contents of the file on flush. However, at that time the file\n * could have been moved to another location so we need this function to\n * rewrite the journal to reflect the current file location. Only then\n * will the hydrateUpdateFileOps() function be able to do its job.\n *\n * @param journal The original journal.\n * @returns The normalized journal.\n */\nexport function normalizeFilesystemOperations(\n\tjournal: FilesystemOperation[]\n): FilesystemOperation[] {\n\tconst substitutions: Record<number, any> = {};\n\tfor (let i = journal.length - 1; i >= 0; i--) {\n\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\tconst formerType = checkRelationship(journal[i], journal[j]);\n\t\t\tif (formerType === 'none') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst latter = journal[i];\n\t\t\tconst former = journal[j];\n\t\t\tif (\n\t\t\t\tlatter.operation === 'RENAME' &&\n\t\t\t\tformer.operation === 'RENAME'\n\t\t\t) {\n\t\t\t\t// Normalizing a double rename is a complex scenario so let's just give\n\t\t\t\t// up. There's just too many possible scenarios to handle.\n\t\t\t\t//\n\t\t\t\t// For example, the following scenario may not be possible to normalize:\n\t\t\t\t// RENAME /dir_a /dir_b\n\t\t\t\t// RENAME /dir_b/subdir /dir_c\n\t\t\t\t// RENAME /dir_b /dir_d\n\t\t\t\t//\n\t\t\t\t// Similarly, how should we normalize the following list?\n\t\t\t\t// CREATE_FILE /file\n\t\t\t\t// CREATE_DIR /dir_a\n\t\t\t\t// RENAME /file /dir_a/file\n\t\t\t\t// RENAME /dir_a /dir_b\n\t\t\t\t// RENAME /dir_b/file /dir_b/file_2\n\t\t\t\t//\n\t\t\t\t// The shortest way to recreate the same structure would be this:\n\t\t\t\t// CREATE_DIR /dir_b\n\t\t\t\t// CREATE_FILE /dir_b/file_2\n\t\t\t\t//\n\t\t\t\t// But that's not a straightforward transformation so let's just not\n\t\t\t\t// handle it for now.\n\t\t\t\tlogger.warn(\n\t\t\t\t\t'[FS Journal] Normalizing a double rename is not yet supported:',\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent: latter,\n\t\t\t\t\t\tlast: former,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (former.operation === 'CREATE' || former.operation === 'WRITE') {\n\t\t\t\tif (latter.operation === 'RENAME') {\n\t\t\t\t\tif (formerType === 'same_node') {\n\t\t\t\t\t\t// Creating a node and then renaming it is equivalent to creating\n\t\t\t\t\t\t// it in the new location.\n\t\t\t\t\t\tsubstitutions[j] = [];\n\t\t\t\t\t\tsubstitutions[i] = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...former,\n\t\t\t\t\t\t\t\tpath: latter.toPath,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...(substitutions[i] || []),\n\t\t\t\t\t\t];\n\t\t\t\t\t} else if (formerType === 'descendant') {\n\t\t\t\t\t\t// Creating a node and then renaming its parent directory is\n\t\t\t\t\t\t// equivalent to creating it in the new location.\n\t\t\t\t\t\tsubstitutions[j] = [];\n\t\t\t\t\t\tsubstitutions[i] = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...former,\n\t\t\t\t\t\t\t\tpath: joinPaths(\n\t\t\t\t\t\t\t\t\tlatter.toPath,\n\t\t\t\t\t\t\t\t\tformer.path.substring(latter.path.length)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...(substitutions[i] || []),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tlatter.operation === 'WRITE' &&\n\t\t\t\t\tformerType === 'same_node'\n\t\t\t\t) {\n\t\t\t\t\t// Updating the same node twice is equivalent to updating it once\n\t\t\t\t\t// at the later time.\n\t\t\t\t\tsubstitutions[j] = [];\n\t\t\t\t} else if (\n\t\t\t\t\tlatter.operation === 'DELETE' &&\n\t\t\t\t\tformerType === 'same_node'\n\t\t\t\t) {\n\t\t\t\t\t// Creating a node and then deleting it is equivalent to doing\n\t\t\t\t\t// nothing.\n\t\t\t\t\tsubstitutions[j] = [];\n\t\t\t\t\tsubstitutions[i] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Any substiturions? Apply them and and start over.\n\t\t// We can't just continue as the current operation may\n\t\t// have been replaced.\n\t\tif (Object.entries(substitutions).length > 0) {\n\t\t\tconst updated = journal.flatMap((op, index) => {\n\t\t\t\tif (!(index in substitutions)) {\n\t\t\t\t\treturn [op];\n\t\t\t\t}\n\t\t\t\treturn substitutions[index];\n\t\t\t});\n\t\t\treturn normalizeFilesystemOperations(updated);\n\t\t}\n\t}\n\treturn journal;\n}\n\ntype RelatedOperationInfo = 'same_node' | 'ancestor' | 'descendant' | 'none';\nfunction checkRelationship(\n\tlatter: FilesystemOperation,\n\tformer: FilesystemOperation\n): RelatedOperationInfo {\n\tconst latterPath = latter.path;\n\tconst latterIsDir =\n\t\tlatter.operation !== 'WRITE' && latter.nodeType === 'directory';\n\tconst formerIsDir =\n\t\tformer.operation !== 'WRITE' && former.nodeType === 'directory';\n\tconst formerPath =\n\t\tformer.operation === 'RENAME' ? former.toPath : former.path;\n\n\tif (formerPath === latterPath) {\n\t\treturn 'same_node';\n\t} else if (formerIsDir && latterPath.startsWith(formerPath + '/')) {\n\t\treturn 'ancestor';\n\t} else if (latterIsDir && formerPath.startsWith(latterPath + '/')) {\n\t\treturn 'descendant';\n\t}\n\treturn 'none';\n}\n\n/**\n * Populates each WRITE operation with the contents of\n * said file.\n *\n * Mutates the original array.\n *\n * @param php\n * @param entries\n */\nexport async function hydrateUpdateFileOps(\n\tphp: UniversalPHP,\n\tentries: FilesystemOperation[]\n) {\n\tconst updateFileOps = entries.filter(\n\t\t(op): op is UpdateFileOperation => op.operation === 'WRITE'\n\t);\n\tconst updates = updateFileOps.map((op) => hydrateOp(php, op));\n\tawait Promise.all(updates);\n\treturn entries;\n}\n\nconst hydrateLock = new Semaphore({ concurrency: 15 });\nasync function hydrateOp(php: UniversalPHP, op: UpdateFileOperation) {\n\tconst release = await hydrateLock.acquire();\n\n\t// There is a race condition here:\n\t// The file could have been removed from the filesystem\n\t// between the flush() call and now. If that happens, we won't\n\t// be able to read it here.\n\t//\n\t// If the file was DELETEd, we're fine as the next flush() will\n\t// propagate the DELETE operation.\n\t//\n\t// If the file was RENAMEd, we're in trouble as we're about to\n\t// tell the other peer to create an empty file and the next\n\t// flush() will rename that empty file.\n\t//\n\t// This issue requires a particular timing and is unlikely to ever happen,\n\t// but is definitely possible. We could mitigate it by either:\n\t//\n\t// * Peeking into the buffered journal entries since the last flush() to\n\t//   source the file path from\n\t// * Storing the data at the journaling stage instead of the flush() stage,\n\t//   (and using potentially a lot of additional memory to keep track of all\n\t//    the intermediate stages)\n\t//\n\t// For now, htough, let's just add error logging and keep an eye on this\n\t// to see if this actually ever happens.\n\ttry {\n\t\top.data = await php.readFileAsBuffer(op.path);\n\t} catch (e) {\n\t\t// Log the error but don't throw.\n\t\tlogger.warn(\n\t\t\t`Journal failed to hydrate a file on flush: the ` +\n\t\t\t\t`path ${op.path} no longer exists`\n\t\t);\n\t\tlogger.error(e);\n\t}\n\n\trelease();\n}\n","import {\n\tEmscripten,\n\tFSHelpers,\n\tMountHandler,\n\tPHP,\n\t__private__dont__use,\n} from '@php-wasm/universal';\nimport { Semaphore, joinPaths } from '@php-wasm/util';\nimport { logger } from '@php-wasm/logger';\nimport { FilesystemOperation, journalFSEvents } from '@php-wasm/fs-journal';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type * as pleaseLoadTypes from 'wicg-file-system-access';\n\ndeclare global {\n\tinterface FileSystemFileHandle {\n\t\tmove(target: FileSystemDirectoryHandle): Promise<void>;\n\t\tmove(name: string): Promise<void>;\n\t\tmove(target: FileSystemDirectoryHandle, name: string): Promise<void>;\n\t\tcreateWritable(): Promise<FileSystemWritableFileStream>;\n\t}\n\tinterface FileSystemWritableFileStream {\n\t\twrite(\n\t\t\tbuffer: BufferSource,\n\t\t\toptions?: FileSystemReadWriteOptions\n\t\t): Promise<number>;\n\t\tclose(): Promise<void>;\n\t\tseek(offset: number): Promise<void>;\n\t\ttruncate(newSize: number): Promise<void>;\n\t}\n}\n\nexport type MountDevice =\n\t| {\n\t\t\ttype: 'opfs';\n\t\t\tpath: string;\n\t  }\n\t| {\n\t\t\ttype: 'local-fs';\n\t\t\thandle: FileSystemDirectoryHandle;\n\t  };\n\nexport interface MountOptions {\n\tinitialSync: {\n\t\tdirection?: 'opfs-to-memfs' | 'memfs-to-opfs';\n\t\tonProgress?: SyncProgressCallback;\n\t};\n}\nexport type SyncProgress = {\n\t/** The number of files that have been synced. */\n\tfiles: number;\n\t/** The number of all files that need to be synced. */\n\ttotal: number;\n};\nexport type SyncProgressCallback = (progress: SyncProgress) => void;\n\nexport function createDirectoryHandleMountHandler(\n\thandle: FileSystemDirectoryHandle,\n\toptions: MountOptions = { initialSync: {} }\n): MountHandler {\n\toptions = {\n\t\t...options,\n\t\tinitialSync: {\n\t\t\t...options.initialSync,\n\t\t\tdirection: options.initialSync.direction ?? 'opfs-to-memfs',\n\t\t},\n\t};\n\n\treturn async function (php, FS, vfsMountPoint) {\n\t\tif (options.initialSync.direction === 'opfs-to-memfs') {\n\t\t\tif (FSHelpers.fileExists(FS, vfsMountPoint)) {\n\t\t\t\tFSHelpers.rmdir(FS, vfsMountPoint);\n\t\t\t}\n\t\t\tFSHelpers.mkdir(FS, vfsMountPoint);\n\t\t\tawait copyOpfsToMemfs(FS, handle, vfsMountPoint);\n\t\t} else {\n\t\t\tawait copyMemfsToOpfs(\n\t\t\t\tFS,\n\t\t\t\thandle,\n\t\t\t\tvfsMountPoint,\n\t\t\t\toptions.initialSync.onProgress\n\t\t\t);\n\t\t}\n\t\tconst unbindJournal = journalFSEventsToOpfs(php, handle, vfsMountPoint);\n\t\treturn unbindJournal;\n\t};\n}\n\nasync function copyOpfsToMemfs(\n\tFS: Emscripten.RootFS,\n\topfsRoot: FileSystemDirectoryHandle,\n\tmemfsRoot: string\n) {\n\tFSHelpers.mkdir(FS, memfsRoot);\n\n\t/**\n\t * Semaphores are used to limit the number of concurrent operations.\n\t * Flooding the browser with 2000 FS operations at the same time\n\t * can get quite slow.\n\t */\n\tconst semaphore = new Semaphore({\n\t\tconcurrency: 40,\n\t});\n\n\tconst ops: Array<Promise<void>> = [];\n\tconst stack: Array<[FileSystemDirectoryHandle, string]> = [\n\t\t[opfsRoot, memfsRoot],\n\t];\n\twhile (stack.length > 0) {\n\t\tconst [opfsParent, memfsParentPath] = stack.pop()!;\n\n\t\tfor await (const opfsHandle of opfsParent.values()) {\n\t\t\tconst op = semaphore.run(async () => {\n\t\t\t\tconst memfsEntryPath = joinPaths(\n\t\t\t\t\tmemfsParentPath,\n\t\t\t\t\topfsHandle.name\n\t\t\t\t);\n\t\t\t\tif (opfsHandle.kind === 'directory') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tFS.mkdir(memfsEntryPath);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif ((e as any)?.errno !== 20) {\n\t\t\t\t\t\t\tlogger.error(e);\n\t\t\t\t\t\t\t// We ignore the error if the directory already exists,\n\t\t\t\t\t\t\t// and throw otherwise.\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstack.push([opfsHandle, memfsEntryPath]);\n\t\t\t\t} else if (opfsHandle.kind === 'file') {\n\t\t\t\t\tconst file = await opfsHandle.getFile();\n\t\t\t\t\tconst byteArray = new Uint8Array(await file.arrayBuffer());\n\t\t\t\t\tFS.createDataFile(\n\t\t\t\t\t\tmemfsParentPath,\n\t\t\t\t\t\topfsHandle.name,\n\t\t\t\t\t\tbyteArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tops.splice(ops.indexOf(op), 1);\n\t\t\t});\n\t\t\tops.push(op);\n\t\t}\n\t\t// Let the ongoing operations catch-up to the stack.\n\t\twhile (stack.length === 0 && ops.length > 0) {\n\t\t\tawait Promise.any(ops);\n\t\t}\n\t}\n}\n\nexport async function copyMemfsToOpfs(\n\tFS: Emscripten.RootFS,\n\topfsRoot: FileSystemDirectoryHandle,\n\tmemfsRoot: string,\n\tonProgress?: SyncProgressCallback\n) {\n\t// Ensure the memfs directory exists.\n\tFS.mkdirTree(memfsRoot);\n\n\t// Create all MEMFS directories in OPFS but don't create\n\t// files yet. This is quite fast.\n\tconst filesToCreate: Array<[FileSystemDirectoryHandle, string, string]> =\n\t\t[];\n\tasync function mirrorMemfsDirectoryinOpfs(\n\t\tmemfsParent: string,\n\t\topfsDir: FileSystemDirectoryHandle\n\t) {\n\t\tawait Promise.all(\n\t\t\tFS.readdir(memfsParent)\n\t\t\t\t.filter(\n\t\t\t\t\t(entryName: string) =>\n\t\t\t\t\t\tentryName !== '.' && entryName !== '..'\n\t\t\t\t)\n\t\t\t\t.map(async (entryName: string) => {\n\t\t\t\t\tconst memfsPath = joinPaths(memfsParent, entryName);\n\t\t\t\t\tif (!isMemfsDir(FS, memfsPath)) {\n\t\t\t\t\t\tfilesToCreate.push([opfsDir, memfsPath, entryName]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst handle = await opfsDir.getDirectoryHandle(entryName, {\n\t\t\t\t\t\tcreate: true,\n\t\t\t\t\t});\n\t\t\t\t\treturn await mirrorMemfsDirectoryinOpfs(memfsPath, handle);\n\t\t\t\t})\n\t\t);\n\t}\n\tawait mirrorMemfsDirectoryinOpfs(memfsRoot, opfsRoot);\n\n\t// Now let's create all the required files in OPFS. This can be quite slow\n\t// so we report progress. Throttle the progress callback to avoid flooding\n\t// the main thread with excessive updates.\n\tlet numFilesCompleted = 0;\n\tconst throttledProgressCallback = onProgress && throttle(onProgress, 100);\n\n\t// Limit max concurrent writes because Safari may otherwise encounter\n\t// an error like \"UnknownError: Invalid platform file handle\" after opening\n\t// a sufficient number of FileSyncAccessHandles (near 128).\n\t// 2024-09-21: This limit was chosen based on perceived performance while\n\t// testing with Safari, Chrome, and Firefox. It felt like a sweet spot.\n\t// Writing one-at-a-time with no concurrency had similar performance\n\t// but felt slightly slower. We can revisit and take better measurements\n\t// if needed.\n\tconst maxConcurrentWrites = 100;\n\tconst concurrentWrites = new Set();\n\n\ttry {\n\t\tfor (const [opfsDir, memfsPath, entryName] of filesToCreate) {\n\t\t\tconst promise = overwriteOpfsFile(\n\t\t\t\topfsDir,\n\t\t\t\tentryName,\n\t\t\t\tFS,\n\t\t\t\tmemfsPath\n\t\t\t).then(() => {\n\t\t\t\tnumFilesCompleted++;\n\t\t\t\tconcurrentWrites.delete(promise);\n\n\t\t\t\tthrottledProgressCallback?.({\n\t\t\t\t\tfiles: numFilesCompleted,\n\t\t\t\t\ttotal: filesToCreate.length,\n\t\t\t\t});\n\t\t\t});\n\t\t\tconcurrentWrites.add(promise);\n\n\t\t\tif (concurrentWrites.size >= maxConcurrentWrites) {\n\t\t\t\tawait Promise.race(concurrentWrites);\n\t\t\t\tthrottledProgressCallback?.({\n\t\t\t\t\tfiles: numFilesCompleted,\n\t\t\t\t\ttotal: filesToCreate.length,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} finally {\n\t\t// Make sure all FS-related activity has completed one way or another\n\t\t// before returning. Otherwise, an error followed by a retry might lead\n\t\t// to a conflict with writes from the earlier attempt.\n\t\tawait Promise.allSettled(concurrentWrites);\n\t}\n}\n\nfunction isMemfsDir(FS: Emscripten.RootFS, path: string) {\n\treturn FS.isDir(FS.lookupPath(path, { follow: true }).node.mode);\n}\n\nasync function overwriteOpfsFile(\n\topfsParent: FileSystemDirectoryHandle,\n\tname: string,\n\tFS: Emscripten.RootFS,\n\tmemfsPath: string\n) {\n\tlet buffer;\n\ttry {\n\t\tbuffer = FS.readFile(memfsPath, {\n\t\t\tencoding: 'binary',\n\t\t});\n\t} catch (e) {\n\t\t// File was removed, ignore\n\t\treturn;\n\t}\n\n\tconst opfsFile = await opfsParent.getFileHandle(name, { create: true });\n\tconst writer =\n\t\topfsFile.createWritable !== undefined\n\t\t\t? // Google Chrome, Firefox, probably more browsers\n\t\t\t  await opfsFile.createWritable()\n\t\t\t: // Safari\n\t\t\t  await opfsFile.createSyncAccessHandle();\n\ttry {\n\t\tawait writer.truncate(0);\n\t\tawait writer.write(buffer);\n\t} finally {\n\t\tawait writer.close();\n\t}\n}\n\nexport function journalFSEventsToOpfs(\n\tphp: PHP,\n\topfsRoot: FileSystemDirectoryHandle,\n\tmemfsRoot: string\n) {\n\tconst journal: FilesystemOperation[] = [];\n\tconst unbindJournal = journalFSEvents(php, memfsRoot, (entry) => {\n\t\tjournal.push(entry);\n\t});\n\tconst rewriter = new OpfsRewriter(php, opfsRoot, memfsRoot);\n\n\tasync function flushJournal() {\n\t\tconst release = await php.semaphore.acquire();\n\t\ttry {\n\t\t\t// @TODO This is way too slow in practice, we need to batch the\n\t\t\t// changes into groups of parallelizable operations.\n\t\t\twhile (journal.length) {\n\t\t\t\tawait rewriter.processEntry(journal.shift()!);\n\t\t\t}\n\t\t} finally {\n\t\t\trelease();\n\t\t}\n\t}\n\tphp.addEventListener('request.end', flushJournal);\n\treturn function () {\n\t\tunbindJournal();\n\t\tphp.removeEventListener('request.end', flushJournal);\n\t};\n}\n\ntype JournalEntry = FilesystemOperation;\n\nclass OpfsRewriter {\n\tprivate memfsRoot: string;\n\n\tconstructor(\n\t\tprivate php: PHP,\n\t\tprivate opfs: FileSystemDirectoryHandle,\n\t\tmemfsRoot: string\n\t) {\n\t\tthis.memfsRoot = normalizeMemfsPath(memfsRoot);\n\t}\n\n\tprivate toOpfsPath(path: string) {\n\t\treturn normalizeMemfsPath(path.substring(this.memfsRoot.length));\n\t}\n\n\tpublic async processEntry(entry: JournalEntry) {\n\t\tif (\n\t\t\t!entry.path.startsWith(this.memfsRoot) ||\n\t\t\tentry.path === this.memfsRoot\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst opfsPath = this.toOpfsPath(entry.path);\n\t\tconst opfsParent = await resolveParent(this.opfs, opfsPath);\n\t\tconst name = getFilename(opfsPath);\n\t\tif (!name) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tif (entry.operation === 'DELETE') {\n\t\t\t\ttry {\n\t\t\t\t\tawait opfsParent.removeEntry(name, {\n\t\t\t\t\t\trecursive: true,\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// If the directory already doesn't exist, it's fine\n\t\t\t\t}\n\t\t\t} else if (entry.operation === 'CREATE') {\n\t\t\t\tif (entry.nodeType === 'directory') {\n\t\t\t\t\tawait opfsParent.getDirectoryHandle(name, {\n\t\t\t\t\t\tcreate: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tawait opfsParent.getFileHandle(name, {\n\t\t\t\t\t\tcreate: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (entry.operation === 'WRITE') {\n\t\t\t\tawait overwriteOpfsFile(\n\t\t\t\t\topfsParent,\n\t\t\t\t\tname,\n\t\t\t\t\tthis.php[__private__dont__use].FS,\n\t\t\t\t\tentry.path\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\tentry.operation === 'RENAME' &&\n\t\t\t\tentry.toPath.startsWith(this.memfsRoot)\n\t\t\t) {\n\t\t\t\tconst opfsTargetPath = this.toOpfsPath(entry.toPath);\n\t\t\t\tconst opfsTargetParent = await resolveParent(\n\t\t\t\t\tthis.opfs,\n\t\t\t\t\topfsTargetPath\n\t\t\t\t);\n\t\t\t\tconst targetName = getFilename(opfsTargetPath);\n\n\t\t\t\tif (entry.nodeType === 'directory') {\n\t\t\t\t\tconst opfsDir = await opfsTargetParent.getDirectoryHandle(\n\t\t\t\t\t\tname,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcreate: true,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\t// in OPFS, move() doesn't work for directories :-(\n\t\t\t\t\t// We have to copy the directory recursively instead.\n\t\t\t\t\tawait copyMemfsToOpfs(\n\t\t\t\t\t\tthis.php[__private__dont__use].FS,\n\t\t\t\t\t\topfsDir,\n\t\t\t\t\t\tentry.toPath\n\t\t\t\t\t);\n\t\t\t\t\t// Then delete the old directory\n\t\t\t\t\tawait opfsParent.removeEntry(name, {\n\t\t\t\t\t\trecursive: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst file = await opfsParent.getFileHandle(name);\n\t\t\t\t\tfile.move(opfsTargetParent, targetName);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Useful for debugging – the original error gets lost in the\n\t\t\t// Comlink proxy.\n\t\t\tlogger.log({ entry, name });\n\t\t\tlogger.error(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n}\n\nfunction normalizeMemfsPath(path: string) {\n\treturn path.replace(/\\/$/, '').replace(/\\/\\/+/g, '/');\n}\n\nfunction getFilename(path: string) {\n\treturn path.substring(path.lastIndexOf('/') + 1);\n}\n\nasync function resolveParent(\n\topfs: FileSystemDirectoryHandle,\n\trelativePath: string\n): Promise<FileSystemDirectoryHandle> {\n\tconst normalizedPath = relativePath\n\t\t.replace(/^\\/+|\\/+$/g, '')\n\t\t.replace(/\\/+/, '/');\n\tif (!normalizedPath) {\n\t\treturn opfs;\n\t}\n\tconst segments = normalizedPath.split('/');\n\tlet handle: FileSystemDirectoryHandle | FileSystemFileHandle = opfs;\n\tfor (let i = 0; i < segments.length - 1; i++) {\n\t\tconst segment = segments[i];\n\t\thandle = await handle.getDirectoryHandle(segment, { create: true });\n\t}\n\treturn handle as any;\n}\n\nfunction throttle<T extends (...args: any[]) => any>(\n\tfn: T,\n\tdebounceMs: number\n): T {\n\tlet lastCallTime = 0;\n\tlet timeoutId: ReturnType<typeof setTimeout> | undefined;\n\tlet pendingArgs: Parameters<T> | undefined;\n\n\treturn function throttledCallback(...args: Parameters<T>) {\n\t\tpendingArgs = args;\n\n\t\tconst timeSinceLastCall = Date.now() - lastCallTime;\n\t\tif (timeoutId === undefined) {\n\t\t\tconst delay = Math.max(0, debounceMs - timeSinceLastCall);\n\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\ttimeoutId = undefined;\n\t\t\t\tlastCallTime = Date.now();\n\t\t\t\tfn(...pendingArgs!);\n\t\t\t}, delay);\n\t\t}\n\t} as T;\n}\n","export const wordPressSiteUrl = new URL('/', (import.meta || {}).url).origin;\n// Hardcoded in wp.js:\nexport const DOCROOT = '/wordpress';\n","export default \"__VITE_ASSET__e860ffd9__\"","export default \"__VITE_ASSET__0518ad43__\"","export default \"__VITE_ASSET__e2e68536__\"","export default \"__VITE_ASSET__ccdf0b34__\"","export default \"__VITE_ASSET__ec59c068__\"","export default \"__VITE_ASSET__dd3c2cfa__\"","export default \"__VITE_ASSET__92940104__\"","\n// @ts-ignore\nimport url_nightly from './wp-nightly.zip?url';\n// @ts-ignore\nimport url_beta from './wp-beta.zip?url';\n// @ts-ignore\nimport url_6_7 from './wp-6.7.zip?url';\n// @ts-ignore\nimport url_6_6 from './wp-6.6.zip?url';\n// @ts-ignore\nimport url_6_5 from './wp-6.5.zip?url';\n// @ts-ignore\nimport url_6_4 from './wp-6.4.zip?url';\n// @ts-ignore\nimport url_6_3 from './wp-6.3.zip?url';\n\n/**\n * This file was auto generated by packages/playground/wordpress-builds/build/build.js\n * DO NOT CHANGE MANUALLY!\n * This file must statically exists in the project because of the way\n * vite resolves imports.\n */\nexport function getWordPressModuleDetails(wpVersion: string = \"6.7\"): { size: number, url: string } {\n\tswitch (wpVersion) {\n\t\t\n\t\tcase 'nightly':\n\t\t\t/** @ts-ignore */\n\t\t\treturn {\n\t\t\t\tsize: 24577676,\n\t\t\t\turl: url_nightly,\n\t\t\t};\n\t\t\t\n\t\tcase 'beta':\n\t\t\t/** @ts-ignore */\n\t\t\treturn {\n\t\t\t\tsize: 24580715,\n\t\t\t\turl: url_beta,\n\t\t\t};\n\t\t\t\n\t\tcase '6.7':\n\t\t\t/** @ts-ignore */\n\t\t\treturn {\n\t\t\t\tsize: 24580797,\n\t\t\t\turl: url_6_7,\n\t\t\t};\n\t\t\t\n\t\tcase '6.6':\n\t\t\t/** @ts-ignore */\n\t\t\treturn {\n\t\t\t\tsize: 18382652,\n\t\t\t\turl: url_6_6,\n\t\t\t};\n\t\t\t\n\t\tcase '6.5':\n\t\t\t/** @ts-ignore */\n\t\t\treturn {\n\t\t\t\tsize: 18453985,\n\t\t\t\turl: url_6_5,\n\t\t\t};\n\t\t\t\n\t\tcase '6.4':\n\t\t\t/** @ts-ignore */\n\t\t\treturn {\n\t\t\t\tsize: 18265208,\n\t\t\t\turl: url_6_4,\n\t\t\t};\n\t\t\t\n\t\tcase '6.3':\n\t\t\t/** @ts-ignore */\n\t\t\treturn {\n\t\t\t\tsize: 3595053,\n\t\t\t\turl: url_6_3,\n\t\t\t};\n\t\t\t\n\n\t}\n\tthrow new Error('Unsupported WordPress module: ' + wpVersion);\n}\n","export default \"__VITE_ASSET__b83db852__\"","\n// @ts-ignore\nimport url from './sqlite-database-integration.zip?url';\n\n/**\n * This file was auto generated by packages/playground/wordpress-builds/build/refresh-sqlite-integration-plugin.js\n * DO NOT CHANGE MANUALLY!\n * This file must statically exists in the project because of the way\n * vite resolves imports.\n */\nexport const size = 87142;\nexport { url };\n\n","export { getWordPressModuleDetails } from './wordpress/get-wordpress-module-details';\nexport { getWordPressModule } from './wordpress/get-wordpress-module';\nexport * as sqliteDatabaseIntegrationModuleDetails from './sqlite-database-integration/get-sqlite-database-plugin-details';\nexport { getSqliteDatabaseModule } from './sqlite-database-integration/get-sqlite-database-module';\nimport MinifiedWordPressVersions from './wordpress/wp-versions.json';\n\nexport { MinifiedWordPressVersions };\nexport const MinifiedWordPressVersionsList = Object.keys(\n\tMinifiedWordPressVersions\n) as any as string[];\nexport const LatestMinifiedWordPressVersion =\n\tMinifiedWordPressVersionsList.filter((v) => v.match(/^\\d/))[0] as string;\n\nexport function wpVersionToStaticAssetsDirectory(\n\twpVersion: string\n): string | undefined {\n\treturn wpVersion in MinifiedWordPressVersions\n\t\t? `wp-${wpVersion}`\n\t\t: undefined;\n}\n","import type { MountDevice } from '@php-wasm/web';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type * as pleaseLoadTypes from 'wicg-file-system-access';\n\nexport async function directoryHandleFromMountDevice(\n\tdevice: MountDevice\n): Promise<FileSystemDirectoryHandle> {\n\tif (device.type === 'local-fs') {\n\t\treturn device.handle;\n\t}\n\n\treturn opfsPathToDirectoryHandle(device.path);\n}\n\nexport async function opfsPathToDirectoryHandle(\n\topfsPath: string\n): Promise<FileSystemDirectoryHandle> {\n\tconst parts = opfsPath.split('/').filter((p) => p.length > 0);\n\tlet handle = await navigator.storage.getDirectory();\n\tfor (const part of parts) {\n\t\thandle = await handle.getDirectoryHandle(part, { create: true });\n\t}\n\treturn handle;\n}\n\nexport async function directoryHandleToOpfsPath(\n\tdirectoryHandle: FileSystemDirectoryHandle\n): Promise<string> {\n\tconst root = await navigator.storage.getDirectory();\n\tconst pathParts = await root.resolve(directoryHandle);\n\tif (pathParts === null) {\n\t\tthrow new DOMException(\n\t\t\t'Unable to resolve path of OPFS directory handle.',\n\t\t\t'NotFoundError'\n\t\t);\n\t}\n\treturn '/' + pathParts.join('/');\n}\n\nexport async function clearContentsFromMountDevice(mountDevice: MountDevice) {\n\tconst parentHandle = await directoryHandleFromMountDevice(mountDevice);\n\tfor await (const name of parentHandle.keys()) {\n\t\tawait parentHandle.removeEntry(name, {\n\t\t\trecursive: true,\n\t\t});\n\t}\n}\n","export class BaseError extends Error {\n  constructor(message) {\n    super(message)\n    // Setting this here allows TS to infer that all git errors have a `caller` property and\n    // that its type is string.\n    this.caller = ''\n  }\n\n  toJSON() {\n    // Error objects aren't normally serializable. So we do something about that.\n    return {\n      code: this.code,\n      data: this.data,\n      caller: this.caller,\n      message: this.message,\n      stack: this.stack,\n    }\n  }\n\n  fromJSON(json) {\n    const e = new BaseError(json.message)\n    e.code = json.code\n    e.data = json.data\n    e.caller = json.caller\n    e.stack = json.stack\n    return e\n  }\n\n  get isIsomorphicGitError() {\n    return true\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { BaseError } from './BaseError.js'\n\nexport class ObjectTypeError extends BaseError {\n  /**\n   * @param {string} oid\n   * @param {'blob'|'commit'|'tag'|'tree'} actual\n   * @param {'blob'|'commit'|'tag'|'tree'} expected\n   * @param {string} [filepath]\n   */\n  constructor(oid, actual, expected, filepath) {\n    super(\n      `Object ${oid} ${\n        filepath ? `at ${filepath}` : ''\n      }was anticipated to be a ${expected} but it is a ${actual}.`\n    )\n    this.code = this.name = ObjectTypeError.code\n    this.data = { oid, actual, expected, filepath }\n  }\n}\n/** @type {'ObjectTypeError'} */\nObjectTypeError.code = 'ObjectTypeError'\n","/*\n * Import internal data parsers and structures from isomorphic-git. These\n * exports are not available in the npm version of isomorphic-git, which is why\n * we use one from the git repository.\n *\n * This file heavily relies on isomorphic-git internals to parse Git data formats\n * such as PACK, trees, deltas, etc.\n */\nimport './isomorphic-git.d.ts';\nimport { GitPktLine } from 'isomorphic-git/src/models/GitPktLine.js';\nimport { GitTree } from 'isomorphic-git/src/models/GitTree.js';\nimport { GitAnnotatedTag } from 'isomorphic-git/src/models/GitAnnotatedTag.js';\nimport { GitCommit } from 'isomorphic-git/src/models/GitCommit.js';\nimport { GitPackIndex } from 'isomorphic-git/src/models/GitPackIndex.js';\nimport { collect } from 'isomorphic-git/src/internal-apis.js';\nimport { parseUploadPackResponse } from 'isomorphic-git/src/wire/parseUploadPackResponse.js';\nimport { ObjectTypeError } from 'isomorphic-git/src/errors/ObjectTypeError.js';\nimport { Buffer } from 'buffer';\n\n/**\n * A polyfill for the Buffer class. We need it because isomorphic-git uses it internally.\n * The isomorphic-git version released via npm shipes a Buffer implementation, but we're\n * using a version cloned from the git repository which assumes a global Buffer is available.\n */\nif (typeof window !== 'undefined') {\n\twindow.Buffer = Buffer;\n}\n\n/**\n * Downloads specific files from a git repository.\n * It uses the git protocol over HTTP to fetch the files. It only uses\n * three HTTP requests regardless of the number of paths requested.\n *\n * @param repoUrl The URL of the git repository.\n * @param fullyQualifiedBranchName The full name of the branch to fetch from (e.g., 'refs/heads/main').\n * @param filesPaths An array of all the file paths to fetch from the repository. Does **not** accept\n *                   patterns, wildcards, directory paths. All files must be explicitly listed.\n * @returns A record where keys are file paths and values are the retrieved file contents.\n */\nexport async function sparseCheckout(\n\trepoUrl: string,\n\tcommitHash: string,\n\tfilesPaths: string[]\n) {\n\tconst treesIdx = await fetchWithoutBlobs(repoUrl, commitHash);\n\tconst objects = await resolveObjects(treesIdx, commitHash, filesPaths);\n\n\tconst blobsIdx = await fetchObjects(\n\t\trepoUrl,\n\t\tfilesPaths.map((path) => objects[path].oid)\n\t);\n\n\tconst fetchedPaths: Record<string, any> = {};\n\tawait Promise.all(\n\t\tfilesPaths.map(async (path) => {\n\t\t\tfetchedPaths[path] = await extractGitObjectFromIdx(\n\t\t\t\tblobsIdx,\n\t\t\t\tobjects[path].oid\n\t\t\t);\n\t\t})\n\t);\n\treturn fetchedPaths;\n}\n\nexport type FileTreeFile = {\n\tname: string;\n\ttype: 'file';\n};\nexport type FileTreeFolder = {\n\tname: string;\n\ttype: 'folder';\n\tchildren: FileTree[];\n};\nexport type FileTree = FileTreeFile | FileTreeFolder;\n\nexport type GitRef = {\n\tvalue: string;\n\ttype?: 'branch' | 'commit' | 'refname' | 'infer';\n};\n\n/**\n * Lists all files in a git repository.\n *\n * See https://git-scm.com/book/en/v2/Git-Internals-Git-Objects for more information.\n *\n * @param repoUrl The URL of the git repository.\n * @param commitHash The commit hash to fetch from.\n * @returns A list of all files in the repository.\n */\nexport async function listGitFiles(\n\trepoUrl: string,\n\tcommitHash: string\n): Promise<FileTree[]> {\n\tconst treesIdx = await fetchWithoutBlobs(repoUrl, commitHash);\n\tconst rootTree = await resolveAllObjects(treesIdx, commitHash);\n\tif (!rootTree?.object) {\n\t\treturn [];\n\t}\n\n\treturn gitTreeToFileTree(rootTree);\n}\n\n/**\n * Resolves a ref description, e.g. a branch name, to a commit hash.\n *\n * @param repoUrl The URL of the git repository.\n * @param ref The branch name or commit hash.\n * @returns The commit hash.\n */\nexport async function resolveCommitHash(repoUrl: string, ref: GitRef) {\n\tif (ref.type === 'infer' || ref.type === undefined) {\n\t\tif (['', 'HEAD'].includes(ref.value)) {\n\t\t\tref = {\n\t\t\t\tvalue: ref.value,\n\t\t\t\ttype: 'refname',\n\t\t\t};\n\t\t} else if (typeof ref.value === 'string' && ref.value.length === 40) {\n\t\t\tref = {\n\t\t\t\tvalue: ref.value,\n\t\t\t\ttype: 'commit',\n\t\t\t};\n\t\t}\n\t}\n\tif (ref.type === 'branch') {\n\t\tref = {\n\t\t\tvalue: `refs/heads/${ref.value}`,\n\t\t\ttype: 'refname',\n\t\t};\n\t}\n\tswitch (ref.type) {\n\t\tcase 'commit':\n\t\t\treturn ref.value;\n\t\tcase 'refname': {\n\t\t\tconst refs = await listGitRefs(repoUrl, ref.value);\n\t\t\tif (!(ref.value in refs)) {\n\t\t\t\tthrow new Error(`Branch ${ref.value} not found`);\n\t\t\t}\n\t\t\treturn refs[ref.value];\n\t\t}\n\t\tdefault:\n\t\t\tthrow new Error(`Invalid ref type: ${ref.type}`);\n\t}\n}\n\nfunction gitTreeToFileTree(tree: GitTree): FileTree[] {\n\treturn tree.object\n\t\t.map((branch) => {\n\t\t\tif (branch.type === 'blob') {\n\t\t\t\treturn {\n\t\t\t\t\tname: branch.path,\n\t\t\t\t\ttype: 'file',\n\t\t\t\t} as FileTreeFile;\n\t\t\t} else if (branch.type === 'tree' && branch.object) {\n\t\t\t\treturn {\n\t\t\t\t\tname: branch.path,\n\t\t\t\t\ttype: 'folder',\n\t\t\t\t\tchildren: gitTreeToFileTree(branch as any as GitTree),\n\t\t\t\t} as FileTreeFolder;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t\t.filter((entry) => !!entry?.name) as FileTree[];\n}\n\n/**\n * Retrieves a list of refs from a git repository.\n *\n * See https://git-scm.com/book/en/v2/Git-Internals-Git-References for more information.\n *\n * @param repoUrl The URL of the git repository. For example: https://github.com/WordPress/gutenberg.git\n * @param fullyQualifiedBranchPrefix The prefix of the refs to fetch. For example: refs/heads/my-feature-branch\n * @returns A map of refs to their corresponding commit hashes.\n */\nexport async function listGitRefs(\n\trepoUrl: string,\n\tfullyQualifiedBranchPrefix: string\n) {\n\tconst packbuffer = Buffer.from(\n\t\tawait collect([\n\t\t\tGitPktLine.encode(`command=ls-refs\\n`),\n\t\t\tGitPktLine.encode(`agent=git/2.37.3\\n`),\n\t\t\tGitPktLine.encode(`object-format=sha1\\n`),\n\t\t\tGitPktLine.delim(),\n\t\t\tGitPktLine.encode(`peel\\n`),\n\t\t\tGitPktLine.encode(`ref-prefix ${fullyQualifiedBranchPrefix}\\n`),\n\t\t\tGitPktLine.flush(),\n\t\t])\n\t);\n\n\tconst response = await fetch(repoUrl + '/git-upload-pack', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/x-git-upload-pack-advertisement',\n\t\t\t'content-type': 'application/x-git-upload-pack-request',\n\t\t\t'Content-Length': `${packbuffer.length}`,\n\t\t\t'Git-Protocol': 'version=2',\n\t\t},\n\t\tbody: packbuffer,\n\t});\n\n\tconst refs: Record<string, string> = {};\n\tfor await (const line of parseGitResponseLines(response)) {\n\t\tconst spaceAt = line.indexOf(' ');\n\t\tconst ref = line.slice(0, spaceAt);\n\t\tconst name = line.slice(spaceAt + 1, line.length - 1);\n\t\trefs[name] = ref;\n\t}\n\treturn refs;\n}\n\nasync function fetchWithoutBlobs(repoUrl: string, commitHash: string) {\n\tconst packbuffer = Buffer.from(\n\t\tawait collect([\n\t\t\tGitPktLine.encode(\n\t\t\t\t`want ${commitHash} multi_ack_detailed no-done side-band-64k thin-pack ofs-delta agent=git/2.37.3 filter \\n`\n\t\t\t),\n\t\t\tGitPktLine.encode(`filter blob:none\\n`),\n\t\t\tGitPktLine.encode(`shallow ${commitHash}\\n`),\n\t\t\tGitPktLine.encode(`deepen 1\\n`),\n\t\t\tGitPktLine.flush(),\n\t\t\tGitPktLine.encode(`done\\n`),\n\t\t\tGitPktLine.encode(`done\\n`),\n\t\t])\n\t);\n\n\tconst response = await fetch(repoUrl + '/git-upload-pack', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/x-git-upload-pack-advertisement',\n\t\t\t'content-type': 'application/x-git-upload-pack-request',\n\t\t\t'Content-Length': `${packbuffer.length}`,\n\t\t},\n\t\tbody: packbuffer,\n\t});\n\n\tconst iterator = streamToIterator(response.body!);\n\tconst parsed = await parseUploadPackResponse(iterator);\n\tconst packfile = Buffer.from(await collect(parsed.packfile));\n\tconst idx = await GitPackIndex.fromPack({\n\t\tpack: packfile,\n\t});\n\tconst originalRead = idx.read as any;\n\tidx.read = async function ({ oid, ...rest }: { oid: string }) {\n\t\tconst result = await originalRead.call(this, { oid, ...rest });\n\t\tresult.oid = oid;\n\t\treturn result;\n\t};\n\treturn idx;\n}\n\nasync function resolveAllObjects(idx: GitPackIndex, commitHash: string) {\n\tconst commit = await idx.read({\n\t\toid: commitHash,\n\t});\n\treadObject(commit);\n\n\tconst rootItem = await idx.read({ oid: commit.object.tree });\n\tconst items = [rootItem];\n\twhile (items.length > 0) {\n\t\tconst tree = items.pop();\n\t\tconst readItem = await idx.read({ oid: tree.oid });\n\t\treadObject(readItem);\n\t\ttree.object = readItem.object;\n\t\tif (readItem.type === 'tree') {\n\t\t\tfor (const subitem of readItem.object) {\n\t\t\t\tif (subitem.type === 'tree') {\n\t\t\t\t\titems.push(subitem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn rootItem;\n}\n\nasync function resolveObjects(\n\tidx: GitPackIndex,\n\tcommitHash: string,\n\tpaths: string[]\n) {\n\tconst commit = await idx.read({\n\t\toid: commitHash,\n\t});\n\treadObject(commit);\n\n\tconst rootTree = await idx.read({ oid: commit.object.tree });\n\treadObject(rootTree);\n\n\t// Resolve refs to fetch\n\tconst resolvedOids: Record<string, any> = {};\n\tfor (const path of paths) {\n\t\tlet currentObject = rootTree;\n\t\tconst segments = path.split('/');\n\t\tfor (const segment of segments) {\n\t\t\tif (currentObject.type !== 'tree') {\n\t\t\t\tthrow new Error(`Path not found in the repo: ${path}`);\n\t\t\t}\n\n\t\t\tlet found = false;\n\t\t\tfor (const item of currentObject.object) {\n\t\t\t\tif (item.path === segment) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tcurrentObject = await idx.read({ oid: item.oid });\n\t\t\t\t\t\treadObject(currentObject);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tcurrentObject = item;\n\t\t\t\t\t}\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\tthrow new Error(`Path not found in the repo: ${path}`);\n\t\t\t}\n\t\t}\n\t\tresolvedOids[path] = currentObject;\n\t}\n\treturn resolvedOids;\n}\n\n// Request oid for each resolvedRef\nasync function fetchObjects(url: string, objectHashes: string[]) {\n\tconst packbuffer = Buffer.from(\n\t\tawait collect([\n\t\t\t...objectHashes.map((objectHash) =>\n\t\t\t\tGitPktLine.encode(\n\t\t\t\t\t`want ${objectHash} multi_ack_detailed no-done side-band-64k thin-pack ofs-delta agent=git/2.37.3 \\n`\n\t\t\t\t)\n\t\t\t),\n\t\t\tGitPktLine.flush(),\n\t\t\tGitPktLine.encode(`done\\n`),\n\t\t])\n\t);\n\n\tconst response = await fetch(url + '/git-upload-pack', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/x-git-upload-pack-advertisement',\n\t\t\t'content-type': 'application/x-git-upload-pack-request',\n\t\t\t'Content-Length': `${packbuffer.length}`,\n\t\t},\n\t\tbody: packbuffer,\n\t});\n\n\tconst iterator = streamToIterator(response.body!);\n\tconst parsed = await parseUploadPackResponse(iterator);\n\tconst packfile = Buffer.from(await collect(parsed.packfile));\n\treturn await GitPackIndex.fromPack({\n\t\tpack: packfile,\n\t});\n}\n\nasync function extractGitObjectFromIdx(idx: GitPackIndex, objectHash: string) {\n\tconst tree = await idx.read({ oid: objectHash });\n\treadObject(tree);\n\n\tif (tree.type === 'blob') {\n\t\treturn tree.object;\n\t}\n\n\tconst files: Record<string, any> = {};\n\tfor (const { path, oid, type } of tree.object) {\n\t\tif (type === 'blob') {\n\t\t\tconst object = await idx.read({ oid });\n\t\t\treadObject(object);\n\t\t\tfiles[path] = object.object;\n\t\t} else if (type === 'tree') {\n\t\t\tfiles[path] = await extractGitObjectFromIdx(idx, oid);\n\t\t}\n\t}\n\treturn files;\n}\n\nfunction readObject(result: any) {\n\tif (!(result.object instanceof Buffer)) {\n\t\treturn;\n\t}\n\tswitch (result.type) {\n\t\tcase 'commit':\n\t\t\tresult.object = GitCommit.from(result.object).parse();\n\t\t\tbreak;\n\t\tcase 'tree':\n\t\t\tresult.object = (GitTree.from(result.object) as any).entries();\n\t\t\tbreak;\n\t\tcase 'blob':\n\t\t\tresult.object = new Uint8Array(result.object);\n\t\t\tresult.format = 'content';\n\t\t\tbreak;\n\t\tcase 'tag':\n\t\t\tresult.object = GitAnnotatedTag.from(result.object).parse();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new ObjectTypeError(\n\t\t\t\tresult.oid,\n\t\t\t\tresult.type,\n\t\t\t\t'blob|commit|tag|tree'\n\t\t\t);\n\t}\n}\n\nasync function* parseGitResponseLines(response: Response) {\n\tconst text = await response.text();\n\tlet at = 0;\n\n\twhile (at <= text.length) {\n\t\tconst lineLength = parseInt(text.substring(at, at + 4), 16);\n\t\tif (lineLength === 0) {\n\t\t\tbreak;\n\t\t}\n\t\tconst line = text.substring(at + 4, at + lineLength);\n\t\tyield line;\n\t\tat += lineLength;\n\t}\n}\n\nfunction streamToIterator(stream: any) {\n\t// Use native async iteration if it's available.\n\tif (stream[Symbol.asyncIterator]) {\n\t\treturn stream;\n\t}\n\tconst reader = stream.getReader();\n\treturn {\n\t\tnext() {\n\t\t\treturn reader.read();\n\t\t},\n\t\treturn() {\n\t\t\treader.releaseLock();\n\t\t\treturn {};\n\t\t},\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t};\n}\n","export interface CachedFetchResponse {\n\tbody: ReadableStream<Uint8Array>;\n\tresponseInit: ResponseInit;\n}\n\n/**\n * Creates a fetch function that memoizes the response stream.\n * Calling it twice will return a response with the same status,\n * headers, and the body stream.\n * Memoization is keyed by URL. Method, headers etc are ignored.\n *\n * @param originalFetch The fetch function to memoize. Defaults to the global fetch.\n */\nexport function createMemoizedFetch(originalFetch = fetch) {\n\tconst cache: Record<\n\t\tstring,\n\t\tPromise<CachedFetchResponse> | CachedFetchResponse\n\t> = {};\n\n\treturn async function memoizedFetch(url: string, options?: RequestInit) {\n\t\tif (!cache[url]) {\n\t\t\t// Write to cache synchronously to avoid duplicate requests.\n\t\t\tcache[url] = originalFetch(url, options).then((response) => ({\n\t\t\t\tbody: response.body!,\n\t\t\t\tresponseInit: {\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\theaders: response.headers,\n\t\t\t\t},\n\t\t\t}));\n\t\t}\n\t\tconst { body, responseInit } = await cache[url];\n\t\t// Split the response stream so that the cached one is not consumed.\n\t\tconst [left, right] = body.tee();\n\t\t// Cache the \"left\" stream and don't use it until the next .tee().\n\t\tcache[url] = {\n\t\t\tbody: left,\n\t\t\tresponseInit,\n\t\t};\n\t\t// Return the \"right\" stream for consumption.\n\t\treturn new Response(right, responseInit);\n\t};\n}\n","/**\n * Avoid adding new code here. @wp-playground/common should remain\n * as lean as possible.\n *\n * This package exists to avoid circular dependencies. Let's not\n * use it as a default place to add code that doesn't seem to fit\n * anywhere else. If there's no good place for your code, perhaps\n * it needs to be restructured? Or maybe there's a need for a new package?\n * Let's always consider these questions before adding new code here.\n */\n\nimport { UniversalPHP } from '@php-wasm/universal';\nimport { phpVars } from '@php-wasm/util';\n\nexport { createMemoizedFetch } from './create-memoized-fetch';\n\nexport const RecommendedPHPVersion = '8.0';\n\n/**\n * Unzip a zip file inside Playground.\n */\nconst tmpPath = '/tmp/file.zip';\nexport const unzipFile = async (\n\tphp: UniversalPHP,\n\tzipPath: string | File,\n\textractToPath: string,\n\toverwriteFiles = true\n) => {\n\tif (zipPath instanceof File) {\n\t\tconst zipFile = zipPath;\n\t\tzipPath = tmpPath;\n\t\tawait php.writeFile(\n\t\t\tzipPath,\n\t\t\tnew Uint8Array(await zipFile.arrayBuffer())\n\t\t);\n\t}\n\tconst js = phpVars({\n\t\tzipPath,\n\t\textractToPath,\n\t\toverwriteFiles,\n\t});\n\tawait php.run({\n\t\tcode: `<?php\n        function unzip($zipPath, $extractTo, $overwriteFiles = true)\n        {\n            if (!is_dir($extractTo)) {\n                mkdir($extractTo, 0777, true);\n            }\n            $zip = new ZipArchive;\n            $res = $zip->open($zipPath);\n            if ($res === TRUE) {\n\t\t\t\tfor ($i = 0; $i < $zip->numFiles; $i++) {\n\t\t\t\t\t$filename = $zip->getNameIndex($i);\n\t\t\t\t\t$fileinfo = pathinfo($filename);\n\t\t\t\t\t$extractFilePath = rtrim($extractTo, '/') . '/' . $filename;\n\t\t\t\t\t// Check if file exists and $overwriteFiles is false\n\t\t\t\t\tif (!file_exists($extractFilePath) || $overwriteFiles) {\n\t\t\t\t\t\t// Extract file\n\t\t\t\t\t\t$zip->extractTo($extractTo, $filename);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$zip->close();\n\t\t\t\tchmod($extractTo, 0777);\n            } else {\n                throw new Exception(\"Could not unzip file: \" . $zip->getStatusString());\n            }\n        }\n        unzip(${js.zipPath}, ${js.extractToPath}, ${js.overwriteFiles});\n        `,\n\t});\n\tif (await php.fileExists(tmpPath)) {\n\t\tawait php.unlink(tmpPath);\n\t}\n};\n\nexport const zipDirectory = async (\n\tphp: UniversalPHP,\n\tdirectoryPath: string\n) => {\n\tconst outputPath = `/tmp/file${Math.random()}.zip`;\n\tconst js = phpVars({\n\t\tdirectoryPath,\n\t\toutputPath,\n\t});\n\tawait php.run({\n\t\tcode: `<?php\n\t\tfunction zipDirectory($directoryPath, $outputPath) {\n\t\t\t$zip = new ZipArchive;\n\t\t\t$res = $zip->open($outputPath, ZipArchive::CREATE);\n\t\t\tif ($res !== TRUE) {\n\t\t\t\tthrow new Exception('Failed to create ZIP');\n\t\t\t}\n\t\t\t$files = new RecursiveIteratorIterator(\n\t\t\t\tnew RecursiveDirectoryIterator($directoryPath)\n\t\t\t);\n\t\t\tforeach ($files as $file) {\n\t\t\t\t$file = strval($file);\n\t\t\t\tif (is_dir($file)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$zip->addFile($file, substr($file, strlen($directoryPath)));\n\t\t\t}\n\t\t\t$zip->close();\n\t\t\tchmod($outputPath, 0777);\n\t\t}\n\t\tzipDirectory(${js.directoryPath}, ${js.outputPath});\n\t\t`,\n\t});\n\n\tconst fileBuffer = await php.readFileAsBuffer(outputPath);\n\tphp.unlink(outputPath);\n\treturn fileBuffer;\n};\n","import { isURLScoped } from '@php-wasm/scopes';\n// @ts-ignore\nimport { buildVersion } from 'virtual:remote-config';\n\nconst CACHE_NAME_PREFIX = 'playground-cache';\nconst LATEST_CACHE_NAME = `${CACHE_NAME_PREFIX}-${buildVersion}`;\n\n// We save a top-level Promise because this module is imported by\n// a Service Worker module which does not allow top-level await.\nconst promisedOfflineModeCache = caches.open(LATEST_CACHE_NAME);\n\nexport async function cacheFirstFetch(request: Request): Promise<Response> {\n\tconst offlineModeCache = await promisedOfflineModeCache;\n\tconst cachedResponse = await offlineModeCache.match(request, {\n\t\tignoreSearch: true,\n\t});\n\tif (cachedResponse) {\n\t\treturn cachedResponse;\n\t}\n\n\t/**\n\t * Ensure the response is not coming from HTTP cache.\n\t *\n\t * We never want to put a stale asset in CacheStorage as\n\t * that would break Playground.\n\t *\n\t * See service-worker.ts for more details.\n\t */\n\tconst response = await fetchFresh(request);\n\tif (response.ok) {\n\t\t/**\n\t\t * Confirm the current service worker is still active\n\t\t * when the asset is fetched. Caching a stale request\n\t\t * from a stale worker has no benefits. It only takes\n\t\t * up space.\n\t\t */\n\t\tif (isCurrentServiceWorkerActive()) {\n\t\t\t// Intentionally do not await writing to the cache so the response\n\t\t\t// promise can be returned immediately and observed for progress events.\n\t\t\t// NOTE: This is a race condition for simultaneous requests for the same asset.\n\t\t\tofflineModeCache.put(request, response.clone());\n\t\t}\n\t}\n\n\treturn response;\n}\n\nexport async function networkFirstFetch(request: Request): Promise<Response> {\n\tconst offlineModeCache = await promisedOfflineModeCache;\n\tconst cachedResponse = await offlineModeCache.match(request, {\n\t\tignoreSearch: true,\n\t});\n\n\tlet response: Response | undefined = undefined;\n\ttry {\n\t\tresponse = await fetch(request, {\n\t\t\tcache: 'no-cache',\n\t\t});\n\t} catch (e) {\n\t\tif (cachedResponse) {\n\t\t\treturn cachedResponse;\n\t\t}\n\t\tthrow e;\n\t}\n\n\tif (response.ok) {\n\t\t// Intentionally do not await writing to the cache so the response\n\t\t// promise can be returned immediately and observed for progress events.\n\t\t// NOTE: This is a race condition for simultaneous requests for the same asset.\n\t\tofflineModeCache.put(request, response.clone());\n\t\treturn response;\n\t}\n\n\tif (cachedResponse) {\n\t\treturn cachedResponse;\n\t}\n\n\treturn response;\n}\n\n/**\n * For offline mode to work we need to cache all required assets.\n *\n * These assets are listed in the `/assets-required-for-offline-mode.json`\n * file and contain JavaScript, CSS, and other assets required to load the\n * site without making any network requests.\n */\nexport async function cacheOfflineModeAssetsForCurrentRelease(): Promise<any> {\n\t// Get the cache manifest and add all the files to the cache\n\tconst manifestResponse = await fetchFresh(\n\t\t'/assets-required-for-offline-mode.json'\n\t);\n\tconst requiredOfflineAssetUrls = await manifestResponse.json();\n\tconst urlsToCache = ['/', ...requiredOfflineAssetUrls];\n\tconst websiteRequests = urlsToCache.map(\n\t\t/**\n\t\t * Ensure the response is not coming from HTTP cache.\n\t\t *\n\t\t * If it did, we'd risk mixing assets from different\n\t\t * Playground builds and breaking the site.\n\t\t *\n\t\t * See service-worker.ts for more details.\n\t\t */\n\t\t(url: string) => new Request(url, { cache: 'no-cache' })\n\t);\n\tconst offlineModeCache = await promisedOfflineModeCache;\n\tawait offlineModeCache.addAll(websiteRequests);\n}\n\n/**\n * Remove outdated files from the cache.\n *\n * We cache data based on `buildVersion` which is updated whenever Playground\n * is built. So when a new version of Playground is deployed, the service\n * worker will remove the old cache and cache the new assets.\n *\n * If your build version doesn't change while developing locally check\n * `buildVersionPlugin` for more details on how it's generated.\n */\nexport async function purgeEverythingFromPreviousRelease() {\n\tconst keys = await caches.keys();\n\tconst oldKeys = keys.filter(\n\t\t(key) => key.startsWith(CACHE_NAME_PREFIX) && key !== LATEST_CACHE_NAME\n\t);\n\treturn Promise.all(oldKeys.map((key) => caches.delete(key)));\n}\n\n/**\n * Answers whether a given URL has a response in the offline mode cache.\n * Ignores the search part of the URL by default.\n */\nexport async function hasCachedResponse(\n\turl: string,\n\tqueryOptions: CacheQueryOptions = { ignoreSearch: true }\n): Promise<boolean> {\n\tconst offlineModeCache = await promisedOfflineModeCache;\n\tconst cachedResponse = await offlineModeCache.match(url, queryOptions);\n\treturn !!cachedResponse;\n}\n\nexport function shouldCacheUrl(url: URL) {\n\tif (url.href.includes('wordpress-static.zip')) {\n\t\treturn true;\n\t}\n\t/**\n\t * The development environment uses Vite which doesn't work offline because\n\t * it dynamically generates assets. Check the README for offline development\n\t * instructions.\n\t */\n\tif (\n\t\turl.href.startsWith('http://127.0.0.1:5400/') ||\n\t\turl.href.startsWith('http://localhost:5400/') ||\n\t\turl.href.startsWith('https://playground.test/') ||\n\t\turl.pathname.startsWith('/website-server/')\n\t) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Don't cache scoped requests made to the PHP Worker Thread.\n\t * They may be static assets, but they may also be PHP files.\n\t * We can't tell by the URL, e.g. `/sitemap.xml` can be both.\n\t */\n\tif (isURLScoped(url)) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Don't cache responses generated by PHP files – they may\n\t * change on every request.\n\t */\n\tif (url.pathname.endsWith('.php')) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Allow only requests to the same hostname to be cached.\n\t */\n\treturn self.location.hostname === url.hostname;\n}\n\n/**\n * Fetches a resource and avoids stale responses from browser cache.\n *\n * @param resource The resource to fetch.\n * @param init     Optional object containing custom settings.\n * @returns Promise<Response>\n */\nfunction fetchFresh(resource: RequestInfo | URL, init?: RequestInit) {\n\treturn fetch(resource, {\n\t\t...init,\n\t\tcache: 'no-cache',\n\t});\n}\n\nexport function isCurrentServiceWorkerActive() {\n\t// @ts-ignore\n\t// Firefox doesn't support serviceWorker.state\n\tif (!('serviceWorker' in self) || !('state' in self.serviceWorker)) {\n\t\treturn true;\n\t}\n\t// @ts-ignore\n\treturn self.serviceWorker.state === 'activated';\n}\n","import {\n\tFileNotFoundAction,\n\tFileNotFoundGetActionCallback,\n\tFileTree,\n\tPHP,\n\tPHPProcessManager,\n\tPHPRequestHandler,\n\tSpawnHandler,\n\tproxyFileSystem,\n\trotatePHPRuntime,\n\tsetPhpIniEntries,\n\twithPHPIniValues,\n\twriteFiles,\n} from '@php-wasm/universal';\nimport {\n\tpreloadPhpInfoRoute,\n\tsetupPlatformLevelMuPlugins,\n\tpreloadSqliteIntegration,\n\tunzipWordPress,\n\twordPressRewriteRules,\n} from '.';\nimport { joinPaths } from '@php-wasm/util';\nimport { logger } from '@php-wasm/logger';\n\nexport type PhpIniOptions = Record<string, string>;\nexport type Hook = (php: PHP) => void | Promise<void>;\nexport interface Hooks {\n\tbeforeWordPressFiles?: Hook;\n\tbeforeDatabaseSetup?: Hook;\n}\n\nexport type DatabaseType = 'sqlite' | 'mysql' | 'custom';\n\nexport interface BootOptions {\n\tcreatePhpRuntime: () => Promise<number>;\n\t/**\n\t * Mounting and Copying is handled via hooks for starters.\n\t *\n\t * In the future we could standardize the\n\t * browser-specific and node-specific mounts\n\t * in the future.\n\t */\n\thooks?: Hooks;\n\t/**\n\t * PHP SAPI name to be returned by get_sapi_name(). Overriding\n\t * it is useful for running programs that check for this value,\n\t * e.g. WP-CLI\n\t */\n\tsapiName?: string;\n\t/**\n\t * URL to use as the site URL. This is used to set the WP_HOME\n\t * and WP_SITEURL constants in WordPress.\n\t */\n\tsiteUrl: string;\n\tdocumentRoot?: string;\n\t/** SQL file to load instead of installing WordPress. */\n\tdataSqlPath?: string;\n\t/** Zip with the WordPress installation to extract in /wordpress. */\n\twordPressZip?: File | Promise<File> | undefined;\n\t/** Preloaded SQLite integration plugin. */\n\tsqliteIntegrationPluginZip?: File | Promise<File>;\n\tspawnHandler?: (processManager: PHPProcessManager) => SpawnHandler;\n\t/**\n\t * PHP.ini entries to define before running any code. They'll\n\t * be used for all requests.\n\t */\n\tphpIniEntries?: PhpIniOptions;\n\t/**\n\t * PHP constants to define for every request.\n\t */\n\tconstants?: Record<string, string | number | boolean | null>;\n\t/**\n\t * Files to create in the filesystem before any mounts are applied.\n\t *\n\t * Example:\n\t *\n\t * ```ts\n\t * {\n\t * \t\tcreateFiles: {\n\t * \t\t\t'/tmp/hello.txt': 'Hello, World!',\n\t * \t\t\t'/internal/preload': {\n\t * \t\t\t\t'1-custom-mu-plugin.php': '<?php echo \"Hello, World!\";',\n\t * \t\t\t}\n\t * \t\t}\n\t * }\n\t * ```\n\t */\n\tcreateFiles?: FileTree;\n\n\t/**\n\t * A callback that decides how to handle a file-not-found condition for a\n\t * given request URI.\n\t */\n\tgetFileNotFoundAction?: FileNotFoundGetActionCallback;\n}\n\n/**\n * Boots a WordPress instance with the given options.\n *\n * High-level overview:\n *\n * * Boot PHP instances and PHPRequestHandler\n * * Setup VFS, run beforeWordPressFiles hook\n * * Setup WordPress files (if wordPressZip is provided)\n * * Run beforeDatabaseSetup hook\n * * Setup the database – SQLite, MySQL (@TODO), or rely on a mounted database\n * * Run WordPress installer, if the site isn't installed yet\n *\n * @param options Boot configuration options\n * @return PHPRequestHandler instance with WordPress installed.\n */\n\nexport async function bootWordPress(options: BootOptions) {\n\tasync function createPhp(\n\t\trequestHandler: PHPRequestHandler,\n\t\tisPrimary: boolean\n\t) {\n\t\tconst php = new PHP(await options.createPhpRuntime());\n\t\tif (options.sapiName) {\n\t\t\tphp.setSapiName(options.sapiName);\n\t\t}\n\t\tif (requestHandler) {\n\t\t\tphp.requestHandler = requestHandler;\n\t\t}\n\t\tif (options.phpIniEntries) {\n\t\t\tsetPhpIniEntries(php, options.phpIniEntries);\n\t\t}\n\t\t/**\n\t\t * Set up mu-plugins in /internal/shared/mu-plugins\n\t\t * using auto_prepend_file to provide platform-level\n\t\t * customization without altering the installed WordPress\n\t\t * site.\n\t\t *\n\t\t * We only do that in the primary PHP instance –\n\t\t * the filesystem there is the source of truth\n\t\t * for all other PHP instances.\n\t\t */\n\t\tif (isPrimary) {\n\t\t\tawait setupPlatformLevelMuPlugins(php);\n\t\t\tawait writeFiles(php, '/', options.createFiles || {});\n\t\t\tawait preloadPhpInfoRoute(\n\t\t\t\tphp,\n\t\t\t\tjoinPaths(new URL(options.siteUrl).pathname, 'phpinfo.php')\n\t\t\t);\n\t\t} else {\n\t\t\t// Proxy the filesystem for all secondary PHP instances to\n\t\t\t// the primary one.\n\t\t\tproxyFileSystem(await requestHandler.getPrimaryPhp(), php, [\n\t\t\t\t'/tmp',\n\t\t\t\trequestHandler.documentRoot,\n\t\t\t\t'/internal/shared',\n\t\t\t]);\n\t\t}\n\n\t\t// Spawn handler is responsible for spawning processes for all the\n\t\t// `popen()`, `proc_open()` etc. calls.\n\t\tif (options.spawnHandler) {\n\t\t\tawait php.setSpawnHandler(\n\t\t\t\toptions.spawnHandler(requestHandler.processManager)\n\t\t\t);\n\t\t}\n\n\t\t// Rotate the PHP runtime periodically to avoid memory leak-related crashes.\n\t\t// @see https://github.com/WordPress/wordpress-playground/pull/990 for more context\n\t\trotatePHPRuntime({\n\t\t\tphp,\n\t\t\tcwd: requestHandler.documentRoot,\n\t\t\trecreateRuntime: options.createPhpRuntime,\n\t\t\tmaxRequests: 400,\n\t\t});\n\n\t\treturn php;\n\t}\n\n\tconst requestHandler: PHPRequestHandler = new PHPRequestHandler({\n\t\tphpFactory: async ({ isPrimary }) =>\n\t\t\tcreatePhp(requestHandler, isPrimary),\n\t\tdocumentRoot: options.documentRoot || '/wordpress',\n\t\tabsoluteUrl: options.siteUrl,\n\t\trewriteRules: wordPressRewriteRules,\n\t\tgetFileNotFoundAction:\n\t\t\toptions.getFileNotFoundAction ?? getFileNotFoundActionForWordPress,\n\t});\n\n\tconst php = await requestHandler.getPrimaryPhp();\n\n\tif (options.hooks?.beforeWordPressFiles) {\n\t\tawait options.hooks.beforeWordPressFiles(php);\n\t}\n\n\tif (options.wordPressZip) {\n\t\tawait unzipWordPress(php, await options.wordPressZip);\n\t}\n\n\tif (options.constants) {\n\t\tfor (const key in options.constants) {\n\t\t\tphp.defineConstant(key, options.constants[key] as string);\n\t\t}\n\t}\n\n\tphp.defineConstant('WP_HOME', options.siteUrl);\n\tphp.defineConstant('WP_SITEURL', options.siteUrl);\n\n\t// Run \"before database\" hooks to mount/copy more files in\n\tif (options.hooks?.beforeDatabaseSetup) {\n\t\tawait options.hooks.beforeDatabaseSetup(php);\n\t}\n\n\t// @TODO Assert WordPress core files are in place\n\n\tif (options.sqliteIntegrationPluginZip) {\n\t\tawait preloadSqliteIntegration(\n\t\t\tphp,\n\t\t\tawait options.sqliteIntegrationPluginZip\n\t\t);\n\t}\n\n\tif (!(await isWordPressInstalled(php))) {\n\t\tawait installWordPress(php);\n\t}\n\n\tif (!(await isWordPressInstalled(php))) {\n\t\tthrow new Error('WordPress installation has failed.');\n\t}\n\n\treturn requestHandler;\n}\n\nasync function isWordPressInstalled(php: PHP) {\n\tconst result = await php.run({\n\t\tcode: `<?php\n$wp_load = getenv('DOCUMENT_ROOT') . '/wp-load.php';\nif (!file_exists($wp_load)) {\n\techo '0';\n\texit;\n}\nrequire $wp_load;\necho is_blog_installed() ? '1' : '0';\n`,\n\t\tenv: {\n\t\t\tDOCUMENT_ROOT: php.documentRoot,\n\t\t},\n\t});\n\treturn result.text === '1';\n}\n\nasync function installWordPress(php: PHP) {\n\t// Disables networking for the installation wizard\n\t// to avoid loopback requests and also speed it up.\n\tawait withPHPIniValues(\n\t\tphp,\n\t\t{\n\t\t\tdisable_functions: 'fsockopen',\n\t\t\tallow_url_fopen: '0',\n\t\t},\n\t\tasync () =>\n\t\t\tawait php.request({\n\t\t\t\turl: '/wp-admin/install.php?step=2',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: {\n\t\t\t\t\tlanguage: 'en',\n\t\t\t\t\tprefix: 'wp_',\n\t\t\t\t\tweblog_title: 'My WordPress Website',\n\t\t\t\t\tuser_name: 'admin',\n\t\t\t\t\tadmin_password: 'password',\n\t\t\t\t\t// The installation wizard demands typing the same password twice\n\t\t\t\t\tadmin_password2: 'password',\n\t\t\t\t\tSubmit: 'Install WordPress',\n\t\t\t\t\tpw_weak: '1',\n\t\t\t\t\tadmin_email: 'admin@localhost.com',\n\t\t\t\t},\n\t\t\t})\n\t);\n\n\tconst defaultedToPrettyPermalinks = await php.run({\n\t\tcode: `<?php\n$wp_load = getenv('DOCUMENT_ROOT') . '/wp-load.php';\nif (!file_exists($wp_load)) {\n\techo '0';\n\texit;\n}\nrequire $wp_load;\n$option_result = update_option(\n\t'permalink_structure',\n\t'/%year%/%monthnum%/%day%/%postname%/'\n);\necho $option_result ? '1' : '0';\n`,\n\t\tenv: {\n\t\t\tDOCUMENT_ROOT: php.documentRoot,\n\t\t},\n\t});\n\n\tif (defaultedToPrettyPermalinks.text !== '1') {\n\t\tlogger.warn('Failed to default to pretty permalinks after WP install.');\n\t}\n}\n\nexport function getFileNotFoundActionForWordPress(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars -- maintain consistent FileNotFoundGetActionCallback signature\n\trelativeUri: string\n): FileNotFoundAction {\n\t// Delegate unresolved requests to WordPress. This makes WP magic possible,\n\t// like pretty permalinks and dynamically generated sitemaps.\n\treturn {\n\t\ttype: 'internal-redirect',\n\t\turi: '/index.php',\n\t};\n}\n","import type { PHPRequestHandler } from '@php-wasm/universal';\n\nexport async function getLoadedWordPressVersion(\n\trequestHandler: PHPRequestHandler\n): Promise<string> {\n\tconst php = await requestHandler.getPrimaryPhp();\n\tconst result = await php.run({\n\t\tcode: `<?php\n\t\t\trequire '${requestHandler.documentRoot}/wp-includes/version.php';\n\t\t\techo $wp_version;\n\t\t`,\n\t});\n\n\tconst versionString = result.text;\n\tif (!versionString) {\n\t\tthrow new Error('Unable to read loaded WordPress version.');\n\t}\n\treturn versionStringToLoadedWordPressVersion(versionString);\n}\n\n/**\n * Returns a WordPress build version string, for a given WordPress version string.\n *\n * You can find the full list of supported build version strings in\n * packages/playground/wordpress-builds/src/wordpress/wp-versions.json\n *\n * Each released version will be converted to the major.minor format.\n * For example 6.6.1 will be converted to 6.6.\n *\n * Release candidates (RC) and beta releases are converted to \"beta\".\n *\n * Nightly releases are converted to \"nightly\".\n *\n * @param wpVersionString - A WordPress version string.\n * @returns A Playground WordPress build version.\n */\nexport function versionStringToLoadedWordPressVersion(\n\twpVersionString: string\n): string {\n\tconst nightlyPattern = /-(alpha|beta|RC)\\d*-\\d+$/;\n\tif (nightlyPattern.test(wpVersionString)) {\n\t\treturn 'nightly';\n\t}\n\n\t// TODO: Tighten this to detect specific old beta version, like 6.2-beta.\n\tconst betaPattern = /-(beta|RC)\\d*$/;\n\tif (betaPattern.test(wpVersionString)) {\n\t\treturn 'beta';\n\t}\n\n\tconst majorMinorMatch = wpVersionString.match(/^(\\d+\\.\\d+)(?:\\.\\d+)?$/);\n\tif (majorMinorMatch !== null) {\n\t\treturn majorMinorMatch[1];\n\t}\n\n\t// Return original version string if we could not parse it.\n\t// This is important to allow so folks can bring their own WP builds.\n\treturn wpVersionString;\n}\n","import type { RewriteRule } from '@php-wasm/universal';\n\n/**\n * The default rewrite rules for WordPress.\n */\nexport const wordPressRewriteRules: RewriteRule[] = [\n\t{\n\t\tmatch: /^\\/(.*?)(\\/wp-(content|admin|includes)\\/.*)/g,\n\t\treplacement: '$2',\n\t},\n];\n","import { PHP, UniversalPHP } from '@php-wasm/universal';\nimport { joinPaths, phpVar } from '@php-wasm/util';\nimport { unzipFile, createMemoizedFetch } from '@wp-playground/common';\nexport { bootWordPress, getFileNotFoundActionForWordPress } from './boot';\nexport { getLoadedWordPressVersion } from './version-detect';\n\nexport * from './version-detect';\nexport * from './rewrite-rules';\n\n/**\n * Preloads the platform mu-plugins from /internal/shared/mu-plugins.\n * This avoids polluting the WordPress installation with mu-plugins\n * that are only needed in the Playground environment.\n *\n * @param php\n */\nexport async function setupPlatformLevelMuPlugins(php: UniversalPHP) {\n\tawait php.mkdir('/internal/shared/mu-plugins');\n\tawait php.writeFile(\n\t\t'/internal/shared/preload/env.php',\n\t\t`<?php\n\n        // Allow adding filters/actions prior to loading WordPress.\n        // $function_to_add MUST be a string.\n        function playground_add_filter( $tag, $function_to_add, $priority = 10, $accepted_args = 1 ) {\n            global $wp_filter;\n            $wp_filter[$tag][$priority][$function_to_add] = array('function' => $function_to_add, 'accepted_args' => $accepted_args);\n        }\n        function playground_add_action( $tag, $function_to_add, $priority = 10, $accepted_args = 1 ) {\n            playground_add_filter( $tag, $function_to_add, $priority, $accepted_args );\n        }\n\n        // Load our mu-plugins after customer mu-plugins\n        // NOTE: this means our mu-plugins can't use the muplugins_loaded action!\n        playground_add_action( 'muplugins_loaded', 'playground_load_mu_plugins', 0 );\n        function playground_load_mu_plugins() {\n            // Load all PHP files from /internal/shared/mu-plugins, sorted by filename\n            $mu_plugins_dir = '/internal/shared/mu-plugins';\n            if(!is_dir($mu_plugins_dir)){\n                return;\n            }\n            $mu_plugins = glob( $mu_plugins_dir . '/*.php' );\n            sort( $mu_plugins );\n            foreach ( $mu_plugins as $mu_plugin ) {\n                require_once $mu_plugin;\n            }\n        }\n    `\n\t);\n\n\t/**\n\t * Automatically logs the user in to aid the login Blueprint step and\n\t * the Playground runtimes.\n\t *\n\t * There are two ways to trigger the auto-login:\n\t *\n\t * ## The PLAYGROUND_AUTO_LOGIN_AS_USER constant\n\t *\n\t * Used by the login Blueprint step does.\n\t *\n\t * When the PLAYGROUND_AUTO_LOGIN_AS_USER constant is defined, this mu-plugin\n\t * will automatically log the user in on their first visit. The username is\n\t * the value of the constant.\n\t *\n\t * On subsequent visits, the playground_auto_login_already_happened cookie will be\n\t * detected and the user will not be logged in. This means the \"logout\" feature\n\t * will work as expected.\n\t *\n\t * ## The playground_force_auto_login_as_user GET parameter\n\t *\n\t * Used by the \"login\" button in various Playground runtimes.\n\t *\n\t * Only works if the PLAYGROUND_FORCE_AUTO_LOGIN_ENABLED constant is defined.\n\t *\n\t * When the playground_force_auto_login_as_user GET parameter is present,\n\t * this mu-plugin will automatically log in any logged out visitor. This will\n\t * happen every time they visit, not just on their first visit.\n\t *\n\t *\n\t * ## Context\n\t *\n\t * The login step used to make a HTTP request to the /wp-login.php endpoint,\n\t * but that approach had significant downsides:\n\t *\n\t * * It only worked in web browsers\n\t * * It didn't support custom login mechanisms\n\t * * It required storing plaintext passwords in the Blueprint files\n\t */\n\tawait php.writeFile(\n\t\t'/internal/shared/mu-plugins/1-auto-login.php',\n\t\t`<?php\n\t\t/**\n\t\t * Returns the username to auto-login as, if any.\n\t\t * @return string|false\n\t\t */\n\t\tfunction playground_get_username_for_auto_login() {\n\t\t\t/**\n\t\t\t * Allow users to auto-login as a specific user on their first visit.\n\t\t\t *\n\t\t\t * Prevent the auto-login if it already happened by checking for the\n\t\t\t * playground_auto_login_already_happened cookie.\n\t\t\t * This is used to allow the user to logout.\n\t\t\t */\n\t\t\tif ( defined('PLAYGROUND_AUTO_LOGIN_AS_USER') && !isset($_COOKIE['playground_auto_login_already_happened']) ) {\n\t\t\t\treturn PLAYGROUND_AUTO_LOGIN_AS_USER;\n\t\t\t}\n\t\t\t/**\n\t\t\t * Allow users to auto-login as a specific user by passing the\n\t\t\t * playground_force_auto_login_as_user GET parameter.\n\t\t\t */\n\t\t\tif ( defined('PLAYGROUND_FORCE_AUTO_LOGIN_ENABLED') && isset($_GET['playground_force_auto_login_as_user']) ) {\n\t\t\t\treturn $_GET['playground_force_auto_login_as_user'];\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Logs the user in on their first visit if the Playground runtime told us to.\n\t\t */\n\t\tfunction playground_auto_login() {\n\t\t\t/**\n\t\t\t * The redirect should only run if the current PHP request is\n\t\t\t * a HTTP request. If it's a PHP CLI run, we can't login the user\n\t\t\t * because logins require cookies which aren't available in the CLI.\n\t\t\t *\n\t\t\t * Currently all Playground requests use the \"cli\" SAPI name\n\t\t\t * to ensure support for WP-CLI, so the best way to distinguish\n\t\t\t * between a CLI run and an HTTP request is by checking if the\n\t\t\t * $_SERVER['REQUEST_URI'] global is set.\n\t\t\t *\n\t\t\t * If $_SERVER['REQUEST_URI'] is not set, we assume it's a CLI run.\n\t\t\t */\n\t\t\tif (empty($_SERVER['REQUEST_URI'])) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$user_name = playground_get_username_for_auto_login();\n\t\t\tif ( false === $user_name ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (wp_doing_ajax() || defined('REST_REQUEST')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( is_user_logged_in() ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$user = get_user_by('login', $user_name);\n\t\t\tif (!$user) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * We're about to set cookies and redirect. It will log the user in\n\t\t\t * if the headers haven't been sent yet.\n\t\t\t *\n\t\t\t * However, if they have been sent already – e.g. there a PHP\n\t\t\t * notice was printed, we'll exit the script with a bunch of errors\n\t\t\t * on the screen and without the user being logged in. This\n\t\t\t * will happen on every page load and will effectively make Playground\n\t\t\t * unusable.\n\t\t\t *\n\t\t\t * Therefore, we just won't auto-login if headers have been sent. Maybe\n\t\t\t * we'll be able to finish the operation in one of the future requests\n\t\t\t * or maybe not, but at least we won't end up with a permanent white screen.\n\t\t\t */\n\t\t\tif (headers_sent()) {\n\t\t\t\t_doing_it_wrong('playground_auto_login', 'Headers already sent, the Playground runtime will not auto-login the user', '1.0.0');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * This approach is described in a comment on\n\t\t\t * https://developer.wordpress.org/reference/functions/wp_set_current_user/\n\t\t\t */\n\t\t\twp_set_current_user( $user->ID, $user->user_login );\n\t\t\twp_set_auth_cookie( $user->ID );\n\t\t\tdo_action( 'wp_login', $user->user_login, $user );\n\n\t\t\tsetcookie('playground_auto_login_already_happened', '1');\n\n\t\t\t/**\n\t\t\t * Confirm that nothing in WordPress, plugins, or filters have finalized\n\t\t\t * the headers sending phase. See the comment above for more context.\n\t\t\t */\n\t\t\tif (headers_sent()) {\n\t\t\t\t_doing_it_wrong('playground_auto_login', 'Headers already sent, the Playground runtime will not auto-login the user', '1.0.0');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Reload page to ensure the user is logged in correctly.\n\t\t\t * WordPress uses cookies to determine if the user is logged in,\n\t\t\t * so we need to reload the page to ensure the cookies are set.\n\t\t\t */\n\t\t\t$redirect_url = $_SERVER['REQUEST_URI'];\n\t\t\t/**\n\t\t\t * Intentionally do not use wp_redirect() here. It removes\n\t\t\t * %0A and %0D sequences from the URL, which we don't want.\n\t\t\t * There are valid use-cases for encoded newlines in the query string,\n\t\t\t * for example html-api-debugger accepts markup with newlines\n\t\t\t * encoded as %0A via the query string.\n\t\t\t */\n\t\t\theader( \"Location: $redirect_url\", true, 302 );\n\t\t\texit;\n\t\t}\n\t\t/**\n\t\t * Autologin users from the wp-login.php page.\n\t\t *\n\t\t * The wp hook isn't triggered on\n\t\t **/\n\t\tadd_action('init', 'playground_auto_login', 1);\n\n\t\t/**\n\t\t * Disable the Site Admin Email Verification Screen for any session started\n\t\t * via autologin.\n\t\t */\n\t\tadd_filter('admin_email_check_interval', function($interval) {\n\t\t\tif(false === playground_get_username_for_auto_login()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn $interval;\n\t\t});\n\t\t`\n\t);\n\n\tawait php.writeFile(\n\t\t'/internal/shared/mu-plugins/0-playground.php',\n\t\t`<?php\n        // Needed because gethostbyname( 'wordpress.org' ) returns\n        // a private network IP address for some reason.\n        add_filter( 'allowed_redirect_hosts', function( $deprecated = '' ) {\n            return array(\n                'wordpress.org',\n                'api.wordpress.org',\n                'downloads.wordpress.org',\n            );\n        } );\n\n\t\t// Support pretty permalinks\n        add_filter( 'got_url_rewrite', '__return_true' );\n\n        // Create the fonts directory if missing\n        if(!file_exists(WP_CONTENT_DIR . '/fonts')) {\n            mkdir(WP_CONTENT_DIR . '/fonts');\n        }\n\n        $log_file = WP_CONTENT_DIR . '/debug.log';\n        define('ERROR_LOG_FILE', $log_file);\n        ini_set('error_log', $log_file);\n        ?>`\n\t);\n\n\t// Load the error handler before any other PHP file to ensure it\n\t// treats all the errors, even those trigerred before mu-plugins\n\t// are loaded.\n\tawait php.writeFile(\n\t\t'/internal/shared/preload/error-handler.php',\n\t\t`<?php\n\t\t(function() {\n\t\t\t$playground_consts = [];\n\t\t\tif(file_exists('/internal/shared/consts.json')) {\n\t\t\t\t$playground_consts = @json_decode(file_get_contents('/internal/shared/consts.json'), true) ?: [];\n\t\t\t\t$playground_consts = array_keys($playground_consts);\n\t\t\t}\n\t\t\tset_error_handler(function($severity, $message, $file, $line) use($playground_consts) {\n\t\t\t\t/**\n\t\t\t\t * This is a temporary workaround to hide the 32bit integer warnings that\n\t\t\t\t * appear when using various time related function, such as strtotime and mktime.\n\t\t\t\t * Examples of the warnings that are displayed:\n\t\t\t\t *\n\t\t\t\t * Warning: mktime(): Epoch doesn't fit in a PHP integer in <file>\n\t\t\t\t * Warning: strtotime(): Epoch doesn't fit in a PHP integer in <file>\n\t\t\t\t */\n\t\t\t\tif (strpos($message, \"fit in a PHP integer\") !== false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * Networking support in Playground registers a http_api_transports filter.\n\t\t\t\t *\n\t\t\t\t * This filter is deprecated, and no longer actively used, but is needed for wp_http_supports().\n\t\t\t\t * @see https://core.trac.wordpress.org/ticket/37708\n\t\t\t\t */\n\t\t\t\tif (\n\t\t\t\t\tstrpos($message, \"http_api_transports\") !== false &&\n\t\t\t\t\tstrpos($message, \"since version 6.4.0 with no alternative available\") !== false\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * Playground defines some constants upfront, and some of them may be redefined\n\t\t\t\t * in wp-config.php. For example, SITE_URL or WP_DEBUG. This is expected and\n\t\t\t\t * we want Playground constants to take priority without showing warnings like:\n\t\t\t\t *\n\t\t\t\t * Warning: Constant SITE_URL already defined in\n\t\t\t\t */\n\t\t\t\tif (strpos($message, \"already defined\") !== false) {\n\t\t\t\t\tforeach($playground_consts as $const) {\n\t\t\t\t\t\tif(strpos($message, \"Constant $const already defined\") !== false) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * Don't complain about network errors when not connected to the network.\n\t\t\t\t */\n\t\t\t\tif (\n\t\t\t\t\t(\n\t\t\t\t\t\t! defined('USE_FETCH_FOR_REQUESTS') ||\n\t\t\t\t\t\t! USE_FETCH_FOR_REQUESTS\n\t\t\t\t\t) &&\n\t\t\t\t\tstrpos($message, \"WordPress could not establish a secure connection to WordPress.org\") !== false)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t})();`\n\t);\n}\n\n/**\n * Runs phpinfo() when the requested path is /phpinfo.php.\n */\nexport async function preloadPhpInfoRoute(\n\tphp: UniversalPHP,\n\trequestPath = '/phpinfo.php'\n) {\n\tawait php.writeFile(\n\t\t'/internal/shared/preload/phpinfo.php',\n\t\t`<?php\n    // Render PHPInfo if the requested page is /phpinfo.php\n    if ( ${phpVar(requestPath)} === $_SERVER['REQUEST_URI'] ) {\n        phpinfo();\n        exit;\n    }\n    `\n\t);\n}\n\nexport async function preloadSqliteIntegration(\n\tphp: UniversalPHP,\n\tsqliteZip: File\n) {\n\tif (await php.isDir('/tmp/sqlite-database-integration')) {\n\t\tawait php.rmdir('/tmp/sqlite-database-integration', {\n\t\t\trecursive: true,\n\t\t});\n\t}\n\tawait php.mkdir('/tmp/sqlite-database-integration');\n\tawait unzipFile(php, sqliteZip, '/tmp/sqlite-database-integration');\n\tconst SQLITE_PLUGIN_FOLDER = '/internal/shared/sqlite-database-integration';\n\n\tconst temporarySqlitePluginFolder = (await php.isDir(\n\t\t'/tmp/sqlite-database-integration/sqlite-database-integration-main'\n\t))\n\t\t? // This is the name when the dev branch used to be called \"main\"\n\t\t  '/tmp/sqlite-database-integration/sqlite-database-integration-main'\n\t\t: // This is the name today when the dev branch is called \"develop\"\n\t\t  '/tmp/sqlite-database-integration/sqlite-database-integration-develop';\n\tawait php.mv(temporarySqlitePluginFolder, SQLITE_PLUGIN_FOLDER);\n\n\t// Prevents the SQLite integration from trying to call activate_plugin()\n\tawait php.defineConstant('SQLITE_MAIN_FILE', '1');\n\tconst dbCopy = await php.readFileAsText(\n\t\tjoinPaths(SQLITE_PLUGIN_FOLDER, 'db.copy')\n\t);\n\tconst dbPhp = dbCopy\n\t\t.replace(\n\t\t\t\"'{SQLITE_IMPLEMENTATION_FOLDER_PATH}'\",\n\t\t\tphpVar(SQLITE_PLUGIN_FOLDER)\n\t\t)\n\t\t.replace(\n\t\t\t\"'{SQLITE_PLUGIN}'\",\n\t\t\tphpVar(joinPaths(SQLITE_PLUGIN_FOLDER, 'load.php'))\n\t\t);\n\tconst dbPhpPath = joinPaths(await php.documentRoot, 'wp-content/db.php');\n\tconst stopIfDbPhpExists = `<?php\n\t// Do not preload this if WordPress comes with a custom db.php file.\n\tif(file_exists(${phpVar(dbPhpPath)})) {\n\t\treturn;\n\t}\n\t?>`;\n\tconst SQLITE_MUPLUGIN_PATH =\n\t\t'/internal/shared/mu-plugins/sqlite-database-integration.php';\n\tawait php.writeFile(SQLITE_MUPLUGIN_PATH, stopIfDbPhpExists + dbPhp);\n\tawait php.writeFile(\n\t\t`/internal/shared/preload/0-sqlite.php`,\n\t\tstopIfDbPhpExists +\n\t\t\t`<?php\n\n/**\n * Loads the SQLite integration plugin before WordPress is loaded\n * and without creating a drop-in \"db.php\" file.\n *\n * Technically, it creates a global $wpdb object whose only two\n * purposes are to:\n *\n * * Exist – because the require_wp_db() WordPress function won't\n *           connect to MySQL if $wpdb is already set.\n * * Load the SQLite integration plugin the first time it's used\n *   and replace the global $wpdb reference with the SQLite one.\n *\n * This lets Playground keep the WordPress installation clean and\n * solves dillemas like:\n *\n * * Should we include db.php in Playground exports?\n * * Should we remove db.php from Playground imports?\n * * How should we treat stale db.php from long-lived OPFS sites?\n *\n * @see https://github.com/WordPress/wordpress-playground/discussions/1379 for\n *      more context.\n */\nclass Playground_SQLite_Integration_Loader {\n\tpublic function __call($name, $arguments) {\n\t\t$this->load_sqlite_integration();\n\t\tif($GLOBALS['wpdb'] === $this) {\n\t\t\tthrow new Exception('Infinite loop detected in $wpdb – SQLite integration plugin could not be loaded');\n\t\t}\n\t\treturn call_user_func_array(\n\t\t\tarray($GLOBALS['wpdb'], $name),\n\t\t\t$arguments\n\t\t);\n\t}\n\tpublic function __get($name) {\n\t\t$this->load_sqlite_integration();\n\t\tif($GLOBALS['wpdb'] === $this) {\n\t\t\tthrow new Exception('Infinite loop detected in $wpdb – SQLite integration plugin could not be loaded');\n\t\t}\n\t\treturn $GLOBALS['wpdb']->$name;\n\t}\n\tpublic function __set($name, $value) {\n\t\t$this->load_sqlite_integration();\n\t\tif($GLOBALS['wpdb'] === $this) {\n\t\t\tthrow new Exception('Infinite loop detected in $wpdb – SQLite integration plugin could not be loaded');\n\t\t}\n\t\t$GLOBALS['wpdb']->$name = $value;\n\t}\n    protected function load_sqlite_integration() {\n        require_once ${phpVar(SQLITE_MUPLUGIN_PATH)};\n    }\n}\n$wpdb = $GLOBALS['wpdb'] = new Playground_SQLite_Integration_Loader();\n\n/**\n * WordPress is capable of using a preloaded global $wpdb. However, if\n * it cannot find the drop-in db.php plugin it still checks whether\n * the mysqli_connect() function exists even though it's not used.\n *\n * What WordPress demands, Playground shall provide.\n */\nif(!function_exists('mysqli_connect')) {\n\tfunction mysqli_connect() {}\n}\n\n\t\t`\n\t);\n\t/**\n\t * Ensure the SQLite integration is loaded and clearly communicate\n\t * if it isn't. This is useful because WordPress database errors\n\t * may be cryptic and won't mention the SQLite integration.\n\t */\n\tawait php.writeFile(\n\t\t`/internal/shared/mu-plugins/sqlite-test.php`,\n\t\t`<?php\n\t\tglobal $wpdb;\n\t\tif(!($wpdb instanceof WP_SQLite_DB)) {\n\t\t\tvar_dump(isset($wpdb));\n\t\t\tdie(\"SQLite integration not loaded \" . get_class($wpdb));\n\t\t}\n\t\t`\n\t);\n}\n\n/**\n * Prepare the WordPress document root given a WordPress zip file and\n * the sqlite-database-integration zip file.\n *\n * This is a TypeScript function for now, just to get something off the\n * ground, but it may be superseded by the PHP Blueprints library developed\n * at https://github.com/WordPress/blueprints-library/\n *\n * That PHP library will come with a set of functions and a CLI tool to\n * turn a Blueprint into a WordPress directory structure or a zip Snapshot.\n * Let's **not** invest in the TypeScript implementation of this function,\n * accept the limitation, and switch to the PHP implementation as soon\n * as that's viable.\n */\nexport async function unzipWordPress(php: PHP, wpZip: File) {\n\tphp.mkdir('/tmp/unzipped-wordpress');\n\tawait unzipFile(php, wpZip, '/tmp/unzipped-wordpress');\n\n\t// The zip file may contain another zip file if it's coming from GitHub\n\t// artifacts @TODO: Don't make so many guesses about the zip file contents.\n\t// Allow the API consumer to specify the exact \"coordinates\" of WordPress\n\t// inside the zip archive.\n\tif (php.fileExists('/tmp/unzipped-wordpress/wordpress.zip')) {\n\t\tawait unzipFile(\n\t\t\tphp,\n\t\t\t'/tmp/unzipped-wordpress/wordpress.zip',\n\t\t\t'/tmp/unzipped-wordpress'\n\t\t);\n\t}\n\n\t// The zip file may contain a subdirectory, or not.\n\t// @TODO: Don't make so many guesses about the zip file contents. Allow the\n\t//        API consumer to specify the exact \"coordinates\" of WordPress inside\n\t//        the zip archive.\n\tlet wpPath = php.fileExists('/tmp/unzipped-wordpress/wordpress')\n\t\t? '/tmp/unzipped-wordpress/wordpress'\n\t\t: php.fileExists('/tmp/unzipped-wordpress/build')\n\t\t? '/tmp/unzipped-wordpress/build'\n\t\t: '/tmp/unzipped-wordpress';\n\n\t// Dive one directory deeper if the zip root does not contain the sample\n\t// config file. This is relevant when unzipping a zipped branch from the\n\t// https://github.com/WordPress/WordPress repository.\n\tif (!php.fileExists(joinPaths(wpPath, 'wp-config-sample.php'))) {\n\t\t// Still don't know the directory structure of the zip file.\n\t\t// 1. Get the first item in path.\n\t\tconst files = php.listFiles(wpPath);\n\t\tif (files.length) {\n\t\t\tconst firstDir = files[0];\n\t\t\t// 2. If it's a directory that contains wp-config-sample.php, use it.\n\t\t\tif (\n\t\t\t\tphp.fileExists(\n\t\t\t\t\tjoinPaths(wpPath, firstDir, 'wp-config-sample.php')\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\twpPath = joinPaths(wpPath, firstDir);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (\n\t\tphp.isDir(php.documentRoot) &&\n\t\tisCleanDirContainingSiteMetadata(php.documentRoot, php)\n\t) {\n\t\t// We cannot mv the directory over a non-empty directory,\n\t\t// but we can move the children one by one.\n\t\tfor (const file of php.listFiles(wpPath)) {\n\t\t\tconst sourcePath = joinPaths(wpPath, file);\n\t\t\tconst targetPath = joinPaths(php.documentRoot, file);\n\t\t\tphp.mv(sourcePath, targetPath);\n\t\t}\n\t\tphp.rmdir(wpPath, { recursive: true });\n\t} else {\n\t\tphp.mv(wpPath, php.documentRoot);\n\t}\n\n\tif (\n\t\t!php.fileExists(joinPaths(php.documentRoot, 'wp-config.php')) &&\n\t\tphp.fileExists(joinPaths(php.documentRoot, 'wp-config-sample.php'))\n\t) {\n\t\tphp.writeFile(\n\t\t\tjoinPaths(php.documentRoot, 'wp-config.php'),\n\t\t\tphp.readFileAsText(\n\t\t\t\tjoinPaths(php.documentRoot, '/wp-config-sample.php')\n\t\t\t)\n\t\t);\n\t}\n}\n\nfunction isCleanDirContainingSiteMetadata(path: string, php: PHP) {\n\tconst files = php.listFiles(path);\n\tif (files.length === 0) {\n\t\treturn true;\n\t}\n\n\tif (\n\t\tfiles.length === 1 &&\n\t\t// TODO: use a constant from a site storage package\n\t\tfiles[0] === 'playground-site-metadata.json'\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nconst memoizedFetch = createMemoizedFetch(fetch);\n\n/**\n * Resolves a specific WordPress release URL and version string based on\n * a version query string such as \"latest\", \"beta\", or \"6.6\".\n *\n * Examples:\n * ```js\n * const { releaseUrl, version } = await resolveWordPressRelease('latest')\n * // becomes https://wordpress.org/wordpress-6.6.2.zip and '6.6.2'\n *\n * const { releaseUrl, version } = await resolveWordPressRelease('beta')\n * // becomes https://wordpress.org/wordpress-6.6.2-RC1.zip and '6.6.2-RC1'\n *\n * const { releaseUrl, version } = await resolveWordPressRelease('6.6')\n * // becomes https://wordpress.org/wordpress-6.6.2.zip and '6.6.2'\n * ```\n *\n * @param versionQuery - The WordPress version query string to resolve.\n * @returns The resolved WordPress release URL and version string.\n */\nexport async function resolveWordPressRelease(versionQuery = 'latest') {\n\tif (\n\t\tversionQuery.startsWith('https://') ||\n\t\tversionQuery.startsWith('http://')\n\t) {\n\t\tconst shasum = await crypto.subtle.digest(\n\t\t\t'SHA-1',\n\t\t\tnew TextEncoder().encode(versionQuery)\n\t\t);\n\t\tconst sha1 = Array.from(new Uint8Array(shasum))\n\t\t\t.map((b) => b.toString(16).padStart(2, '0'))\n\t\t\t.join('');\n\t\treturn {\n\t\t\treleaseUrl: versionQuery,\n\t\t\tversion: 'custom-' + sha1.substring(0, 8),\n\t\t\tsource: 'inferred',\n\t\t};\n\t} else if (versionQuery === 'trunk' || versionQuery === 'nightly') {\n\t\treturn {\n\t\t\treleaseUrl:\n\t\t\t\t'https://wordpress.org/nightly-builds/wordpress-latest.zip',\n\t\t\tversion: 'nightly-' + new Date().toISOString().split('T')[0],\n\t\t\tsource: 'inferred',\n\t\t};\n\t}\n\n\tconst response = await memoizedFetch(\n\t\t'https://api.wordpress.org/core/version-check/1.7/?channel=beta'\n\t);\n\tlet latestVersions = await response.json();\n\n\tlatestVersions = latestVersions.offers.filter(\n\t\t(v: any) => v.response === 'autoupdate'\n\t);\n\n\tfor (const apiVersion of latestVersions) {\n\t\tif (versionQuery === 'beta' && apiVersion.version.includes('beta')) {\n\t\t\treturn {\n\t\t\t\treleaseUrl: apiVersion.download,\n\t\t\t\tversion: apiVersion.version,\n\t\t\t\tsource: 'api',\n\t\t\t};\n\t\t} else if (\n\t\t\tversionQuery === 'latest' &&\n\t\t\t!apiVersion.version.includes('beta')\n\t\t) {\n\t\t\t// The first non-beta item in the list is the latest version.\n\t\t\treturn {\n\t\t\t\treleaseUrl: apiVersion.download,\n\t\t\t\tversion: apiVersion.version,\n\t\t\t\tsource: 'api',\n\t\t\t};\n\t\t} else if (\n\t\t\tapiVersion.version.substring(0, versionQuery.length) ===\n\t\t\tversionQuery\n\t\t) {\n\t\t\treturn {\n\t\t\t\treleaseUrl: apiVersion.download,\n\t\t\t\tversion: apiVersion.version,\n\t\t\t\tsource: 'api',\n\t\t\t};\n\t\t}\n\t}\n\n\treturn {\n\t\treleaseUrl: `https://wordpress.org/wordpress-${versionQuery}.zip`,\n\t\tversion: versionQuery,\n\t\tsource: 'inferred',\n\t};\n}\n","import { wpVersionToStaticAssetsDirectory } from '@wp-playground/wordpress-builds';\nimport { PHPResponse, PHPProcessManager, PHP } from '@php-wasm/universal';\nimport { createSpawnHandler, joinPaths, phpVar } from '@php-wasm/util';\nimport { logger } from '@php-wasm/logger';\nimport { unzipFile } from '@wp-playground/common';\nimport { hasCachedResponse } from './offline-mode-cache';\nimport { getLoadedWordPressVersion } from '@wp-playground/wordpress';\n\nexport function spawnHandlerFactory(processManager: PHPProcessManager) {\n\treturn createSpawnHandler(async function (args, processApi, options) {\n\t\tif (args[0] === 'exec') {\n\t\t\targs.shift();\n\t\t}\n\n\t\t// Mock programs required by wp-cli:\n\t\tif (\n\t\t\targs[0] === '/usr/bin/env' &&\n\t\t\targs[1] === 'stty' &&\n\t\t\targs[2] === 'size'\n\t\t) {\n\t\t\t// These numbers are hardcoded because this\n\t\t\t// spawnHandler is transmitted as a string to\n\t\t\t// the PHP backend and has no access to local\n\t\t\t// scope. It would be nice to find a way to\n\t\t\t// transfer / proxy a live object instead.\n\t\t\t// @TODO: Do not hardcode this\n\t\t\tprocessApi.stdout(`18 140`);\n\t\t\tprocessApi.exit(0);\n\t\t} else if (args[0] === 'less') {\n\t\t\tprocessApi.on('stdin', (data: Uint8Array) => {\n\t\t\t\tprocessApi.stdout(data);\n\t\t\t});\n\t\t\tprocessApi.flushStdin();\n\t\t\tprocessApi.exit(0);\n\t\t} else if (args[0] === 'fetch') {\n\t\t\tprocessApi.flushStdin();\n\t\t\tfetch(args[1]).then(async (res) => {\n\t\t\t\tconst reader = res.body?.getReader();\n\t\t\t\tif (!reader) {\n\t\t\t\t\tprocessApi.exit(1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst { done, value } = await reader.read();\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tprocessApi.exit(0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprocessApi.stdout(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t} else if (args[0] === 'php') {\n\t\t\tconst { php, reap } = await processManager.acquirePHPInstance();\n\n\t\t\tlet result: PHPResponse | undefined = undefined;\n\t\t\ttry {\n\t\t\t\t// @TODO: Run the actual PHP CLI SAPI instead of\n\t\t\t\t//        interpreting the arguments and emulating\n\t\t\t\t//        the CLI constants and globals.\n\t\t\t\tconst cliBootstrapScript = `<?php\n                // Set the argv global.\n                $GLOBALS['argv'] = array_merge([\n                    \"/wordpress/wp-cli.phar\",\n                    \"--path=/wordpress\"\n                ], ${phpVar(args.slice(2))});\n\n                // Provide stdin, stdout, stderr streams outside of\n                // the CLI SAPI.\n                define('STDIN', fopen('php://stdin', 'rb'));\n                define('STDOUT', fopen('php://stdout', 'wb'));\n                define('STDERR', fopen('/tmp/stderr', 'wb'));\n\n                ${options.cwd ? 'chdir(getenv(\"DOCROOT\")); ' : ''}\n                `;\n\n\t\t\t\tif (args.includes('-r')) {\n\t\t\t\t\tresult = await php.run({\n\t\t\t\t\t\tcode: `${cliBootstrapScript} ${\n\t\t\t\t\t\t\targs[args.indexOf('-r') + 1]\n\t\t\t\t\t\t}`,\n\t\t\t\t\t\tenv: options.env,\n\t\t\t\t\t});\n\t\t\t\t} else if (args[1] === 'wp-cli.phar') {\n\t\t\t\t\tresult = await php.run({\n\t\t\t\t\t\tcode: `${cliBootstrapScript} require( \"/wordpress/wp-cli.phar\" );`,\n\t\t\t\t\t\tenv: {\n\t\t\t\t\t\t\t...options.env,\n\t\t\t\t\t\t\t// Set SHELL_PIPE to 0 to ensure WP-CLI formats\n\t\t\t\t\t\t\t// the output as ASCII tables.\n\t\t\t\t\t\t\t// @see https://github.com/wp-cli/wp-cli/issues/1102\n\t\t\t\t\t\t\tSHELL_PIPE: '0',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresult = await php.run({\n\t\t\t\t\t\tscriptPath: args[1],\n\t\t\t\t\t\tenv: options.env,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tprocessApi.stdout(result.bytes);\n\t\t\t\tprocessApi.stderr(result.errors);\n\t\t\t\tprocessApi.exit(result.exitCode);\n\t\t\t} catch (e) {\n\t\t\t\tlogger.error('Error in childPHP:', e);\n\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\tprocessApi.stderr(e.message);\n\t\t\t\t}\n\t\t\t\tprocessApi.exit(1);\n\t\t\t} finally {\n\t\t\t\treap();\n\t\t\t}\n\t\t} else {\n\t\t\tprocessApi.exit(1);\n\t\t}\n\t});\n}\n\n/**\n * Downloads and unzips a ZIP bundle of all the static assets removed from\n * the currently loaded minified WordPress build. Doesn't do anything if the\n * assets are already downloaded or if a non-minified WordPress build is loaded.\n *\n * ## Asset Loading\n *\n * To load Playground faster, we default to minified WordPress builds shipped\n * without most CSS files, JS files, and other static assets.\n *\n * When Playground requests a static asset that is not in the minified build, the service\n * worker consults the list of the assets removed during the minification process. Such\n * a list is shipped with every minified build in a file called `wordpress-remote-asset-paths`.\n *\n * For example, when `/wp-includes/css/dist/block-library/common.min.css` isn't found\n * in the Playground filesystem, the service worker looks for it in\n * `/wordpress/wordpress-remote-asset-paths`and finds it there. This means it's available on the\n * remote server, so the service worker fetches it from an URL like:\n *\n * https://playground.wordpress.net/wp-6.5/wp-includes/css/dist/block-library/common.min.css\n *\n * ## Assets backfilling\n *\n * Running Playground offline isn't possible without shipping all the static assets into the\n * browser. Downloading every CSS and JS file one request at a time would be slow to run and\n * tedious to maintain. This is where this function comes in!\n *\n * It downloads a zip archive containing all the static files removed from the currently running\n * minified build, and unzips them in the Playground filesystem. Once it finishes, the WordPress\n * installation running in the browser is complete and the service worker will no longer have\n * to backfill any static assets again.\n *\n * This process is started after the Playground boots (see `bootPlaygroundRemote`) and the first\n * page is rendered. This way we're not delaying the initial Playground paint with a large download.\n *\n * ## Prevent backfilling if assets are already available\n *\n * Running this function twice, or running it on a non-minified build will have no effect.\n *\n * The backfilling only runs when a non-empty `wordpress-remote-asset-paths` file\n * exists. When one is missing, we're not running a minified build. When one is empty,\n * it means the backfilling process was already done – this function empties the file\n * after the backfilling is done.\n *\n * ### Downloading assets during backfill\n *\n * Each WordPress release has a corresponding static assets directory on the\n * Playground.WordPress.net server. The file is downloaded from the server and unzipped into the\n * WordPress document root.\n *\n * ### Skipping existing files during unzipping\n *\n * If any of the files already exist, they are skipped and not overwritten.\n * By skipping existing files, we ensure that the backfill process doesn't overwrite any user\n * changes.\n */\nexport async function backfillStaticFilesRemovedFromMinifiedBuild(php: PHP) {\n\tif (!php.requestHandler) {\n\t\tlogger.warn('No PHP request handler available');\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst remoteAssetListPath = joinPaths(\n\t\t\tphp.requestHandler.documentRoot,\n\t\t\t'wordpress-remote-asset-paths'\n\t\t);\n\n\t\tif (\n\t\t\t!php.fileExists(remoteAssetListPath) ||\n\t\t\tphp.readFileAsText(remoteAssetListPath) === ''\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst staticAssetsUrl = await getWordPressStaticZipUrl(php);\n\t\tif (!staticAssetsUrl) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't have the WordPress assets cached yet. Let's fetch them and cache them without\n\t\t// awaiting the response. We're awaiting the backfillStaticFilesRemovedFromMinifiedBuild()\n\t\t// call in the web app and we don't want to block the initial load on this download.\n\t\tconst response = await fetch(staticAssetsUrl);\n\n\t\t// We have the WordPress assets already cached, let's unzip them and finish.\n\t\tif (!response?.ok) {\n\t\t\tthrow new Error(\n\t\t\t\t`Failed to fetch WordPress static assets: ${response.status} ${response.statusText}`\n\t\t\t);\n\t\t}\n\t\tawait unzipFile(\n\t\t\tphp,\n\t\t\tnew File([await response!.blob()], 'wordpress-static.zip'),\n\t\t\tphp.requestHandler!.documentRoot,\n\t\t\tfalse\n\t\t);\n\t\t// Clear the remote asset list to indicate that the assets are downloaded.\n\t\tphp.writeFile(remoteAssetListPath, '');\n\t} catch (e) {\n\t\tlogger.warn('Failed to download WordPress assets', e);\n\t}\n}\n\nexport async function hasCachedStaticFilesRemovedFromMinifiedBuild(php: PHP) {\n\tconst staticAssetsUrl = await getWordPressStaticZipUrl(php);\n\tif (!staticAssetsUrl) {\n\t\treturn false;\n\t}\n\treturn await hasCachedResponse(staticAssetsUrl);\n}\n\n/**\n * Returns the URL of the wordpress-static.zip file containing all the\n * static assets missing from the currently load minified build.\n *\n * Note: This function will produce a URL even if we're running a full\n *       production WordPress build.\n *\n * See backfillStaticFilesRemovedFromMinifiedBuild for more details.\n */\nexport async function getWordPressStaticZipUrl(php: PHP) {\n\tconst wpVersion = await getLoadedWordPressVersion(php.requestHandler!);\n\tconst staticAssetsDirectory = wpVersionToStaticAssetsDirectory(wpVersion);\n\tif (!staticAssetsDirectory) {\n\t\treturn false;\n\t}\n\treturn joinPaths('/', staticAssetsDirectory, 'wordpress-static.zip');\n}\n","import { logger } from '@php-wasm/logger';\n/*\n * An approximate total file size to use when the actual\n * total number of bytes is missing.\n *\n * This may happen when the files are compressed before transmission\n * and no content-length header is being sent.\n *\n * The approximation isn't accurate, but it's better than nothing.\n * It's not about being exact but about giving the user a rough sense\n * of #progress.\n */\nconst FALLBACK_FILE_SIZE = 5 * 1024 * 1024;\n\n/**\n * Monitors the download #progress of Emscripten modules\n *\n * Usage:\n *\n * ```js\n *   const downloadMonitor = new EmscriptenDownloadMonitor();\n * \t const php = await startPHP(\n *       phpLoaderModule,\n *       'web',\n *       downloadMonitor.phpArgs\n *   );\n *   downloadMonitor.addEventListener('#progress', (e) => {\n *     console.log( e.detail.#progress);\n *   })\n * ```\n */\nexport class EmscriptenDownloadMonitor extends EventTarget {\n\t#assetsSizes: Record<string, number> = {};\n\t#progress: Record<string, number> = {};\n\n\texpectAssets(assets: Record<string, number>) {\n\t\tfor (const [urlLike, size] of Object.entries(assets)) {\n\t\t\tconst dummyBaseUrl = 'http://example.com/';\n\t\t\tconst pathname = new URL(urlLike, dummyBaseUrl).pathname;\n\t\t\tconst filename = pathname.split('/').pop()!;\n\t\t\tif (!(filename in this.#assetsSizes)) {\n\t\t\t\tthis.#assetsSizes[filename] = size;\n\t\t\t}\n\t\t\tif (!(filename in this.#progress)) {\n\t\t\t\tthis.#progress[filename] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync monitorFetch(fetchPromise: Promise<Response>): Promise<Response> {\n\t\tconst response = await fetchPromise;\n\t\tconst onProgress = (event: CustomEvent<DownloadProgress>) => {\n\t\t\tthis.#notify(response.url, event.detail.loaded, event.detail.total);\n\t\t};\n\t\treturn cloneResponseMonitorProgress(response, onProgress);\n\t}\n\n\t/**\n\t * Notifies about the download #progress of a file.\n\t *\n\t * @param  file   The file name.\n\t * @param  loaded The number of bytes of that file loaded so far.\n\t * @param  fileSize  The total number of bytes in the loaded file.\n\t */\n\t#notify(file: string, loaded: number, fileSize: number) {\n\t\tconst fileName = new URL(file, 'http://example.com').pathname\n\t\t\t.split('/')\n\t\t\t.pop()!;\n\t\tif (!fileSize) {\n\t\t\tfileSize = this.#assetsSizes[fileName];\n\t\t} else if (!(fileName in this.#assetsSizes)) {\n\t\t\tthis.#assetsSizes[fileName] = fileSize;\n\t\t\tthis.#progress[fileName] = loaded;\n\t\t}\n\t\tif (!(fileName in this.#progress)) {\n\t\t\tlogger.warn(\n\t\t\t\t`Registered a download #progress of an unregistered file \"${fileName}\". ` +\n\t\t\t\t\t`This may cause a sudden **decrease** in the #progress percentage as the ` +\n\t\t\t\t\t`total number of bytes increases during the download.`\n\t\t\t);\n\t\t}\n\n\t\tthis.#progress[fileName] = loaded;\n\t\tthis.dispatchEvent(\n\t\t\tnew CustomEvent('progress', {\n\t\t\t\tdetail: {\n\t\t\t\t\tloaded: sumValues(this.#progress),\n\t\t\t\t\ttotal: sumValues(this.#assetsSizes),\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t}\n}\n\nfunction sumValues(obj: Record<string, number>) {\n\treturn Object.values(obj).reduce((total, value) => total + value, 0);\n}\n\nexport default EmscriptenDownloadMonitor;\n\nexport interface DownloadProgress {\n\t/**\n\t * The number of bytes loaded so far.\n\t */\n\tloaded: number;\n\t/**\n\t * The total number of bytes to load.\n\t */\n\ttotal: number;\n}\n\n/**\n * Clones a fetch Response object and returns a version\n * that calls the `onProgress` callback as the #progress\n * changes.\n *\n * @param  response   The fetch Response object to clone.\n * @param  onProgress The callback to call when the download #progress changes.\n * @returns The cloned response\n */\nexport function cloneResponseMonitorProgress(\n\tresponse: Response,\n\tonProgress: (event: CustomEvent<DownloadProgress>) => void\n): Response {\n\tconst contentLength = response.headers.get('content-length') || '';\n\tconst total = parseInt(contentLength, 10) || FALLBACK_FILE_SIZE;\n\n\tfunction notify(loaded: number, total: number) {\n\t\tonProgress(\n\t\t\tnew CustomEvent('progress', {\n\t\t\t\tdetail: {\n\t\t\t\t\tloaded,\n\t\t\t\t\ttotal,\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t}\n\n\treturn new Response(\n\t\tnew ReadableStream({\n\t\t\tasync start(controller) {\n\t\t\t\tif (!response.body) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\tlet loaded = 0;\n\t\t\t\tfor (;;) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst { done, value } = await reader.read();\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tloaded += value.byteLength;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tnotify(loaded, loaded);\n\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnotify(loaded, total);\n\t\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlogger.error({ e });\n\t\t\t\t\t\tcontroller.error(e);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t}),\n\t\t{\n\t\t\tstatus: response.status,\n\t\t\tstatusText: response.statusText,\n\t\t\theaders: response.headers,\n\t\t}\n\t);\n}\n\nexport type DownloadProgressCallback = (progress: DownloadProgress) => void;\n","export default \"<?php\\n\\n/**\\n * This transport delegates PHP HTTP requests to JavaScript synchronous XHR.\\n *\\n * This file isn't actually used. It's just here for reference and development. The actual\\n * PHP code used in WordPress is hardcoded copy residing in wordpress.mjs in the _patchWordPressCode\\n * function.\\n *\\n * The reason for calling it Wp_Http_Fetch and not something more natural like\\n * Requests_Transport_Fetch is the _get_first_available_transport(). It checks for\\n * a class named \\\"Wp_Http_\\\" . $transport_name – which means we must adhere to this\\n * hardcoded pattern.\\n */\\nclass Wp_Http_Fetch_Base\\n{\\n\\tpublic $headers = '';\\n\\n\\tpublic function __construct()\\n\\t{\\n\\t}\\n\\n\\tpublic function __destruct()\\n\\t{\\n\\t}\\n\\n\\t/**\\n\\t * Delegates PHP HTTP requests to JavaScript synchronous XHR.\\n\\t *\\n\\t * @TODO Implement handling for more $options such as cookies, filename, auth, etc.\\n\\t *\\n\\t * @param $url\\n\\t * @param $headers\\n\\t * @param $data\\n\\t * @param $options\\n\\t *\\n\\t * @return false|string\\n\\t */\\n\\tpublic function request($url, $headers = array(), $data = array(), $options = array())\\n\\t{\\n\\t\\tif (!empty($data)) {\\n\\t\\t\\t$data_format = $options['data_format'];\\n\\t\\t\\tif ($data_format === 'query') {\\n\\t\\t\\t\\t$url = self::format_get($url, $data);\\n\\t\\t\\t\\t$data = '';\\n\\t\\t\\t} elseif (!is_string($data)) {\\n\\t\\t\\t\\t$data = http_build_query($data, '', '&');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t$request = json_encode(\\n\\t\\t\\tarray(\\n\\t\\t\\t\\t'type' => 'request',\\n\\t\\t\\t\\t'data' => [\\n\\t\\t\\t\\t\\t'headers' => $headers,\\n\\t\\t\\t\\t\\t'data' => $data,\\n\\t\\t\\t\\t\\t'url' => $url,\\n\\t\\t\\t\\t\\t'method' => $options['type'],\\n\\t\\t\\t\\t]\\n\\t\\t\\t)\\n\\t\\t);\\n\\n\\t\\t$this->headers = post_message_to_js($request);\\n\\n\\t\\t// Store a file if the request specifies it.\\n\\t\\t// Are we sure that `$this->headers` includes the body of the response?\\n\\t\\t$before_response_body = strpos($this->headers, \\\"\\\\r\\\\n\\\\r\\\\n\\\");\\n\\t\\tif (isset($options['filename']) && $options['filename'] && false !== $before_response_body) {\\n\\t\\t\\t$response_body = substr($this->headers, $before_response_body + 4);\\n\\t\\t\\t$this->headers = substr($this->headers, 0, $before_response_body);\\n\\t\\t\\tfile_put_contents($options['filename'], $response_body);\\n\\t\\t}\\n\\n\\t\\treturn $this->headers;\\n\\t}\\n\\n\\tpublic function request_multiple($requests, $options)\\n\\t{\\n\\t\\t$responses = array();\\n\\t\\t$class = get_class($this);\\n\\t\\tforeach ($requests as $id => $request) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\t$handler = new $class();\\n\\t\\t\\t\\t$responses[$id] = $handler->request($request['url'], $request['headers'], $request['data'], $request['options']);\\n\\t\\t\\t\\t$request['options']['hooks']->dispatch('transport.internal.parse_response', array(&$responses[$id], $request));\\n\\t\\t\\t} catch (Requests_Exception $e) {\\n\\t\\t\\t\\t$responses[$id] = $e;\\n\\t\\t\\t}\\n\\t\\t\\tif (!is_string($responses[$id])) {\\n\\t\\t\\t\\t$request['options']['hooks']->dispatch('multiple.request.complete', array(&$responses[$id], $id));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn $responses;\\n\\t}\\n\\n\\tprotected static function format_get($url, $data)\\n\\t{\\n\\t\\tif (!empty($data)) {\\n\\t\\t\\t$query = '';\\n\\t\\t\\t$url_parts = parse_url($url);\\n\\t\\t\\tif (empty($url_parts['query'])) {\\n\\t\\t\\t\\t$url_parts['query'] = '';\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$query = $url_parts['query'];\\n\\t\\t\\t}\\n\\t\\t\\t$query .= '&' . http_build_query($data, '', '&');\\n\\t\\t\\t$query = trim($query, '&');\\n\\t\\t\\tif (empty($url_parts['query'])) {\\n\\t\\t\\t\\t$url .= '?' . $query;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$url = str_replace($url_parts['query'], $query, $url);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn $url;\\n\\t}\\n\\n\\tpublic static function test($capabilities = array())\\n\\t{\\n\\t\\tif (!function_exists('post_message_to_js')) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n}\\n\\nif (class_exists('\\\\WpOrg\\\\Requests\\\\Requests')) {\\n\\tclass Wp_Http_Fetch extends Wp_Http_Fetch_Base implements \\\\WpOrg\\\\Requests\\\\Transport\\n\\t{\\n\\n\\t}\\n} else {\\n\\tclass Wp_Http_Fetch extends Wp_Http_Fetch_Base implements Requests_Transport\\n\\t{\\n\\n\\t}\\n}\\n\"","export default \"<?php\\n\\n/**\\n * This transport does not perform any HTTP requests and only exists\\n * to prevent the Requests class from complaining about not having any\\n * transports.\\n * \\n * The reason for calling it Wp_Http_Dummy and not something more natural like\\n * Requests_Transport_Dummy is the _get_first_available_transport(). It checks for\\n * a class named \\\"Wp_Http_\\\" . $transport_name – which means we must adhere to this\\n * hardcoded pattern.\\n */\\nclass Wp_Http_Dummy_Base\\n{\\n\\tpublic $headers = '';\\n\\n\\tpublic function __construct()\\n\\t{\\n\\t}\\n\\n\\tpublic function __destruct()\\n\\t{\\n\\t}\\n\\n\\tpublic function request($url, $headers = array(), $data = array(), $options = array())\\n\\t{\\n\\t\\treturn false;\\n\\t}\\n\\n\\tpublic function request_multiple($requests, $options)\\n\\t{\\n\\t\\t$responses = array();\\n\\t\\tforeach ($requests as $id => $request) {\\n\\t\\t\\t$responses[] = false;\\n\\t\\t}\\n\\t\\treturn $responses;\\n\\t}\\n\\n\\tprotected static function format_get($url, $data)\\n\\t{\\n\\t\\treturn $url;\\n\\t}\\n\\n\\tpublic static function test($capabilities = array())\\n\\t{\\n\\t\\treturn true;\\n\\t}\\n}\\n\\nif (class_exists('\\\\WpOrg\\\\Requests\\\\Requests')) {\\n\\tclass Wp_Http_Dummy extends Wp_Http_Dummy_Base implements \\\\WpOrg\\\\Requests\\\\Transport\\n\\t{\\n\\n\\t}\\n} else {\\n\\tclass Wp_Http_Dummy extends Wp_Http_Dummy_Base implements Requests_Transport\\n\\t{\\n\\n\\t}\\n}\\n\"","export default \"<?php\\n\\n/**\\n * Add a notice to wp-login.php offering the username and password.\\n */\\nadd_filter(\\n\\t'login_message',\\n\\tfunction ( $message ) {\\n\\t\\treturn $message . <<<EOT\\n<div class=\\\"message info\\\">\\n\\t<strong>username:</strong> <code>admin</code><br><strong>password</strong>: <code>password</code>\\n</div>\\nEOT;\\n\\t}\\n);\\n\\n/**\\n * Because the in-browser Playground doesn't have access to the internet,\\n * network-dependent features like directories don't work. Normally, you'll\\n * see a confusing message like \\\"An unexpected error occurred.\\\" This mu-plugin\\n * makes it more clear that the feature is not yet supported.\\n *\\n * https://github.com/WordPress/wordpress-playground/issues/498\\n *\\n * Added styling to hide the Popular tags section of the Plugins page\\n * and the nonfunctional Try Again button (both Plugins and Themes) that's\\n * appended when the message is displayed.\\n *\\n * https://github.com/WordPress/wordpress-playground/issues/927\\n *\\n */\\nadd_action('admin_head', function () {\\n\\techo '<style>\\n\\t\\t\\t\\t:is(.plugins-popular-tags-wrapper:has(div.networking_err_msg),\\n\\t\\t\\t\\tbutton.button.try-again) {\\n\\t\\t\\t\\t\\t\\tdisplay: none;\\n\\t\\t\\t\\t}\\n\\t\\t</style>';\\n});\\n\\nadd_action('init', 'networking_disabled');\\nfunction networking_disabled() {\\n\\t$networking_err_msg = '<div class=\\\"networking_err_msg\\\">Network access is an <a href=\\\"https://github.com/WordPress/wordpress-playground/issues/85\\\" target=\\\"_blank\\\">experimental, opt-in feature</a>, which means you need to enable it to allow Playground to access the Plugins/Themes directories.\\n\\t<p>There are two alternative methods to enable global networking support:</p>\\n\\t<ol>\\n\\t<li>Using the <a href=\\\"https://wordpress.github.io/wordpress-playground/developers/apis/query-api/\\\">Query API</a>: for example, https://playground.wordpress.net/<em>?networking=yes</em> <strong>or</strong>\\n\\t<li> Using the <a href=\\\"https://wordpress.github.io/wordpress-playground/blueprints/data-format/#features\\\">Blueprint API</a>: add <code>\\\"features\\\": { \\\"networking\\\": true }</code> to the JSON file.\\n\\t</li></ol>\\n\\t<p>\\n\\tWhen browsing Playground as a standalone instance, you can enable networking via the settings panel: select the option \\\"Network access (e.g. for browsing plugins)\\\" and hit the \\\"Apply changes\\\" button.<p>\\n\\t<strong>Please note:</strong> This option is hidden when browsing Playground as an embedded iframe.</p></div>';\\n\\treturn $networking_err_msg;\\n}\\n\\nadd_filter('plugins_api_result', function ($res) {\\n\\tif ($res instanceof WP_Error) {\\n\\t\\t$res = new WP_Error(\\n\\t\\t\\t'plugins_api_failed',\\n\\t\\t\\tnetworking_disabled()\\n\\t\\t);\\n\\t}\\n\\treturn $res;\\n});\\n\\nadd_filter('gettext', function ($translation) {\\n\\tif( $GLOBALS['pagenow'] === 'theme-install.php') {\\n\\t\\tif ($translation === 'An unexpected error occurred. Something may be wrong with WordPress.org or this server&#8217;s configuration. If you continue to have problems, please try the <a href=\\\"%s\\\">support forums</a>.') {\\n\\t\\t\\treturn networking_disabled();\\n\\t\\t}\\n\\t}\\n\\treturn $translation;\\n});\\n\\n/**\\n * Links with target=\\\"top\\\" don't work in the playground iframe because of\\n * the sandbox attribute. What they really should be targeting is the\\n * playground iframe itself (name=\\\"playground\\\"). This mu-plugin rewrites\\n * all target=\\\"_top\\\" links to target=\\\"playground\\\" instead.\\n *\\n * https://github.com/WordPress/wordpress-playground/issues/266\\n */\\nadd_action('admin_print_scripts', function () {\\n\\t?>\\n\\t<script>\\n\\t\\tdocument.addEventListener('click', function (event) {\\n\\t\\t\\tif (event.target.tagName === 'A' && ['_parent', '_top'].includes(event.target.target)) {\\n\\t\\t\\t\\tevent.target.target = 'wordpress-playground';\\n\\t\\t\\t}\\n\\t\\t});\\n\\t</script>\\n\\t<?php\\n});\\n\\n/**\\n * The default WordPress requests transports have been disabled\\n * at this point. However, the Requests class requires at least\\n * one working transport or else it throws warnings and acts up.\\n *\\n * This mu-plugin provides that transport. It's one of the two:\\n *\\n * * WP_Http_Fetch – Sends requests using browser's fetch() function.\\n * * WP_Http_Dummy – Does not send any requests and only exists to keep\\n * \\t\\t\\t\\t\\t\\t\\t\\tthe Requests class happy.\\n */\\n$__requests_class = class_exists( '\\\\WpOrg\\\\Requests\\\\Requests' ) ? '\\\\WpOrg\\\\Requests\\\\Requests' : 'Requests';\\nif (defined('USE_FETCH_FOR_REQUESTS') && USE_FETCH_FOR_REQUESTS) {\\n\\trequire(__DIR__ . '/playground-includes/wp_http_fetch.php');\\n\\t/**\\n\\t * Force the Fetch transport to be used in Requests.\\n\\t */\\n\\tadd_action( 'requests-requests.before_request', function( $url, $headers, $data, $type, &$options ) {\\n\\t\\t$options['transport'] = 'Wp_Http_Fetch';\\n\\t}, 10, 5 );\\n\\n\\t/**\\n\\t * Force wp_http_supports() to work, which uses deprecated WP_HTTP methods.\\n\\t * This filter is deprecated, and no longer actively used, but is needed for wp_http_supports().\\n\\t * @see https://core.trac.wordpress.org/ticket/37708\\n\\t */\\n\\tadd_filter('http_api_transports', function() {\\n\\t\\treturn [ 'Fetch' ];\\n\\t});\\n\\n\\t/**\\n\\t * Disable signature verification as it doesn't seem to work with\\n\\t * fetch requests:\\n\\t *\\n\\t * https://downloads.wordpress.org/plugin/classic-editor.zip returns no signature header.\\n\\t * https://downloads.wordpress.org/plugin/classic-editor.zip.sig returns 404.\\n\\t *\\n\\t * @TODO Investigate why.\\n\\t */\\n\\tadd_filter('wp_signature_hosts', function ($hosts) {\\n\\t\\treturn [];\\n\\t});\\n\\n\\t// add_filter('http_request_host_is_external', function ($arg) {\\n\\t// \\treturn true;\\n\\t// });\\n\\tadd_filter('http_request_host_is_external', '__return_true');\\n} else {\\n\\trequire(__DIR__ . '/playground-includes/wp_http_dummy.php');\\n\\t$__requests_class::add_transport('Wp_Http_Dummy');\\n\\n\\tadd_action( 'requests-requests.before_request', function( $url, $headers, $data, $type, &$options ) {\\n\\t\\t$options['transport'] = 'Wp_Http_Dummy';\\n\\t}, 10, 5 );\\n\\n\\tadd_filter('http_api_transports', function() {\\n\\t\\treturn [ 'Dummy' ];\\n\\t});\\n}\\n\\n?>\\n\"","import {\n\tGeneratedCertificate,\n\tTCPOverFetchOptions,\n\tMountDevice,\n\tSyncProgressCallback,\n\tcreateDirectoryHandleMountHandler,\n\texposeAPI,\n\tloadWebRuntime,\n} from '@php-wasm/web';\nimport { setURLScope } from '@php-wasm/scopes';\nimport { joinPaths } from '@php-wasm/util';\nimport { wordPressSiteUrl } from './config';\nimport {\n\tgetWordPressModuleDetails,\n\tLatestMinifiedWordPressVersion,\n\tMinifiedWordPressVersions,\n\tsqliteDatabaseIntegrationModuleDetails,\n\tMinifiedWordPressVersionsList,\n} from '@wp-playground/wordpress-builds';\nimport { directoryHandleFromMountDevice } from '@wp-playground/storage';\nimport { randomString } from '@php-wasm/util';\nimport {\n\tspawnHandlerFactory,\n\tbackfillStaticFilesRemovedFromMinifiedBuild,\n\thasCachedStaticFilesRemovedFromMinifiedBuild,\n} from './worker-utils';\nimport { EmscriptenDownloadMonitor } from '@php-wasm/progress';\nimport { createMemoizedFetch } from '@wp-playground/common';\nimport {\n\tFilesystemOperation,\n\tjournalFSEvents,\n\treplayFSJournal,\n} from '@php-wasm/fs-journal';\n/* @ts-ignore */\nimport transportFetch from './playground-mu-plugin/playground-includes/wp_http_fetch.php?raw';\n/* @ts-ignore */\nimport transportDummy from './playground-mu-plugin/playground-includes/wp_http_dummy.php?raw';\n/* @ts-ignore */\nimport playgroundWebMuPlugin from './playground-mu-plugin/0-playground.php?raw';\nimport {\n\tPHPResponse,\n\tPHPWorker,\n\tSupportedPHPVersion,\n\tSupportedPHPVersionsList,\n} from '@php-wasm/universal';\nimport {\n\tbootWordPress,\n\tgetFileNotFoundActionForWordPress,\n\tgetLoadedWordPressVersion,\n} from '@wp-playground/wordpress';\nimport { wpVersionToStaticAssetsDirectory } from '@wp-playground/wordpress-builds';\nimport { logger } from '@php-wasm/logger';\nimport { generateCertificate, certificateToPEM } from '@php-wasm/web';\n\n// post message to parent\nself.postMessage('worker-script-started');\n\nconst downloadMonitor = new EmscriptenDownloadMonitor();\n\nconst monitoredFetch = (input: RequestInfo | URL, init?: RequestInit) =>\n\tdownloadMonitor.monitorFetch(fetch(input, init));\nconst memoizedFetch = createMemoizedFetch(monitoredFetch);\n\nexport interface MountDescriptor {\n\tmountpoint: string;\n\tdevice: MountDevice;\n\tinitialSyncDirection: 'opfs-to-memfs' | 'memfs-to-opfs';\n}\n\nexport type WorkerBootOptions = {\n\twpVersion?: string;\n\tphpVersion?: SupportedPHPVersion;\n\tsapiName?: string;\n\tscope: string;\n\twithNetworking: boolean;\n\tmounts?: Array<MountDescriptor>;\n\tshouldInstallWordPress?: boolean;\n\tcorsProxyUrl?: string;\n};\n\n/** @inheritDoc PHPClient */\nexport class PlaygroundWorkerEndpoint extends PHPWorker {\n\tbooted = false;\n\n\t/**\n\t * A string representing the scope of the Playground instance.\n\t */\n\tscope: string | undefined;\n\n\t/**\n\t * A string representing the requested version of WordPress.\n\t */\n\trequestedWordPressVersion: string | undefined;\n\n\t/**\n\t * A string representing the version of WordPress that was loaded.\n\t */\n\tloadedWordPressVersion: string | undefined;\n\n\tunmounts: Record<string, () => any> = {};\n\n\tconstructor(monitor: EmscriptenDownloadMonitor) {\n\t\tsuper(undefined, monitor);\n\t}\n\n\t/**\n\t * @returns WordPress module details, including the static assets directory and default theme.\n\t */\n\tasync getWordPressModuleDetails() {\n\t\treturn {\n\t\t\tmajorVersion:\n\t\t\t\tthis.loadedWordPressVersion || this.requestedWordPressVersion,\n\t\t\tstaticAssetsDirectory: this.loadedWordPressVersion\n\t\t\t\t? wpVersionToStaticAssetsDirectory(this.loadedWordPressVersion)\n\t\t\t\t: undefined,\n\t\t};\n\t}\n\n\tasync getMinifiedWordPressVersions() {\n\t\treturn {\n\t\t\tall: MinifiedWordPressVersions,\n\t\t\tlatest: LatestMinifiedWordPressVersion,\n\t\t};\n\t}\n\n\tasync hasOpfsMount(mountpoint: string) {\n\t\treturn mountpoint in this.unmounts;\n\t}\n\n\tasync mountOpfs(\n\t\toptions: MountDescriptor,\n\t\tonProgress?: SyncProgressCallback\n\t) {\n\t\tconst handle = await directoryHandleFromMountDevice(options.device);\n\t\tconst php = this.__internal_getPHP()!;\n\t\tthis.unmounts[options.mountpoint] = await php.mount(\n\t\t\toptions.mountpoint,\n\t\t\tcreateDirectoryHandleMountHandler(handle, {\n\t\t\t\tinitialSync: {\n\t\t\t\t\tonProgress,\n\t\t\t\t\tdirection: options.initialSyncDirection,\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t}\n\n\tasync unmountOpfs(mountpoint: string) {\n\t\tthis.unmounts[mountpoint]();\n\t\tdelete this.unmounts[mountpoint];\n\t}\n\n\tasync backfillStaticFilesRemovedFromMinifiedBuild() {\n\t\tawait backfillStaticFilesRemovedFromMinifiedBuild(\n\t\t\tthis.__internal_getPHP()!\n\t\t);\n\t}\n\n\tasync hasCachedStaticFilesRemovedFromMinifiedBuild() {\n\t\treturn await hasCachedStaticFilesRemovedFromMinifiedBuild(\n\t\t\tthis.__internal_getPHP()!\n\t\t);\n\t}\n\n\tasync boot({\n\t\tscope,\n\t\tmounts = [],\n\t\twpVersion = LatestMinifiedWordPressVersion,\n\t\tphpVersion = '8.0',\n\t\tsapiName = 'cli',\n\t\twithNetworking = false,\n\t\tshouldInstallWordPress = true,\n\t\tcorsProxyUrl,\n\t}: WorkerBootOptions) {\n\t\tif (this.booted) {\n\t\t\tthrow new Error('Playground already booted');\n\t\t}\n\n\t\tthis.booted = true;\n\t\tthis.scope = scope;\n\t\tthis.requestedWordPressVersion = wpVersion;\n\n\t\twpVersion = MinifiedWordPressVersionsList.includes(wpVersion)\n\t\t\t? wpVersion\n\t\t\t: LatestMinifiedWordPressVersion;\n\n\t\tif (!SupportedPHPVersionsList.includes(phpVersion)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Unsupported PHP version: ${phpVersion}. Supported versions: ${SupportedPHPVersionsList.join(\n\t\t\t\t\t', '\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\n\t\ttry {\n\t\t\t// Start downloading WordPress if needed\n\t\t\tlet wordPressRequest = null;\n\t\t\tif (shouldInstallWordPress) {\n\t\t\t\t// @TODO: Accept a WordPress ZIP file or a URL, do not\n\t\t\t\t//        reason about the `requestedWPVersion` here.\n\t\t\t\tif (this.requestedWordPressVersion.startsWith('http')) {\n\t\t\t\t\t// We don't know the size upfront, but we can still monitor the download.\n\t\t\t\t\t// monitorFetch will read the content-length response header when available.\n\t\t\t\t\twordPressRequest = monitoredFetch(\n\t\t\t\t\t\tthis.requestedWordPressVersion\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst wpDetails = getWordPressModuleDetails(wpVersion);\n\t\t\t\t\tdownloadMonitor.expectAssets({\n\t\t\t\t\t\t[wpDetails.url]: wpDetails.size,\n\t\t\t\t\t});\n\t\t\t\t\twordPressRequest = monitoredFetch(wpDetails.url);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdownloadMonitor.expectAssets({\n\t\t\t\t[sqliteDatabaseIntegrationModuleDetails.url]:\n\t\t\t\t\tsqliteDatabaseIntegrationModuleDetails.size,\n\t\t\t});\n\t\t\tconst sqliteIntegrationRequest = downloadMonitor.monitorFetch(\n\t\t\t\tfetch(sqliteDatabaseIntegrationModuleDetails.url)\n\t\t\t);\n\n\t\t\tconst constants: Record<string, any> = shouldInstallWordPress\n\t\t\t\t? {\n\t\t\t\t\t\tWP_DEBUG: true,\n\t\t\t\t\t\tWP_DEBUG_LOG: true,\n\t\t\t\t\t\tWP_DEBUG_DISPLAY: false,\n\t\t\t\t\t\tAUTH_KEY: randomString(40),\n\t\t\t\t\t\tSECURE_AUTH_KEY: randomString(40),\n\t\t\t\t\t\tLOGGED_IN_KEY: randomString(40),\n\t\t\t\t\t\tNONCE_KEY: randomString(40),\n\t\t\t\t\t\tAUTH_SALT: randomString(40),\n\t\t\t\t\t\tSECURE_AUTH_SALT: randomString(40),\n\t\t\t\t\t\tLOGGED_IN_SALT: randomString(40),\n\t\t\t\t\t\tNONCE_SALT: randomString(40),\n\t\t\t\t  }\n\t\t\t\t: {};\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\t\tconst endpoint = this;\n\t\t\tconst knownRemoteAssetPaths = new Set<string>();\n\t\t\tconst phpIniEntries: Record<string, string> = {\n\t\t\t\t'openssl.cafile': '/internal/ca-bundle.crt',\n\t\t\t};\n\t\t\tlet CAroot: false | GeneratedCertificate = false;\n\t\t\tlet tcpOverFetch: TCPOverFetchOptions | undefined = undefined;\n\t\t\tif (withNetworking) {\n\t\t\t\t/**\n\t\t\t\t * Generate a self-signed CA certificate and tell PHP to trust it.\n\t\t\t\t * This enables rewriting raw encrypted bytes emitted by PHP\n\t\t\t\t * during HTTPS connections into fetch() calls.\n\t\t\t\t *\n\t\t\t\t * See https://github.com/WordPress/wordpress-playground/pull/1926.\n\t\t\t\t */\n\t\t\t\tCAroot = await generateCertificate({\n\t\t\t\t\tsubject: {\n\t\t\t\t\t\tcommonName: 'WordPressPlaygroundCA',\n\t\t\t\t\t\torganizationName: 'WordPressPlaygroundCA',\n\t\t\t\t\t\tcountryName: 'US',\n\t\t\t\t\t},\n\t\t\t\t\tbasicConstraints: {\n\t\t\t\t\t\tca: true,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\ttcpOverFetch = {\n\t\t\t\t\tCAroot,\n\t\t\t\t\tcorsProxyUrl,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tphpIniEntries['allow_url_fopen'] = '0';\n\t\t\t\t// Calling curl_exec() with networking disabled causes PHP to\n\t\t\t\t// enter an infinite loop. Let's disable it completely to\n\t\t\t\t// throw a fatal error instead.\n\t\t\t\tphpIniEntries['disable_functions'] =\n\t\t\t\t\t'curl_exec,curl_multi_exec';\n\t\t\t}\n\t\t\tconst requestHandler = await bootWordPress({\n\t\t\t\tsiteUrl: setURLScope(wordPressSiteUrl, scope).toString(),\n\t\t\t\tcreatePhpRuntime: async () => {\n\t\t\t\t\tlet wasmUrl = '';\n\t\t\t\t\treturn await loadWebRuntime(phpVersion, {\n\t\t\t\t\t\ttcpOverFetch,\n\t\t\t\t\t\temscriptenOptions: {\n\t\t\t\t\t\t\tinstantiateWasm(imports, receiveInstance) {\n\t\t\t\t\t\t\t\t// Using .then because Emscripten typically returns an empty\n\t\t\t\t\t\t\t\t// object here and not a promise.\n\t\t\t\t\t\t\t\tmemoizedFetch(wasmUrl, {\n\t\t\t\t\t\t\t\t\tcredentials: 'same-origin',\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then((response) =>\n\t\t\t\t\t\t\t\t\t\tWebAssembly.instantiateStreaming(\n\t\t\t\t\t\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t\t\t\t\t\timports\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.then((wasm) => {\n\t\t\t\t\t\t\t\t\t\treceiveInstance(\n\t\t\t\t\t\t\t\t\t\t\twasm.instance,\n\t\t\t\t\t\t\t\t\t\t\twasm.module\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn {};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonPhpLoaderModuleLoaded: (phpLoaderModule) => {\n\t\t\t\t\t\t\twasmUrl = phpLoaderModule.dependencyFilename;\n\t\t\t\t\t\t\tdownloadMonitor.expectAssets({\n\t\t\t\t\t\t\t\t[wasmUrl]:\n\t\t\t\t\t\t\t\t\tphpLoaderModule.dependenciesTotalSize,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t// Do not await the WordPress download or the sqlite integration download.\n\t\t\t\t// Let bootWordPress start the PHP runtime download first, and then await\n\t\t\t\t// all the ZIP files right before they're used.\n\t\t\t\twordPressZip: shouldInstallWordPress\n\t\t\t\t\t? wordPressRequest!\n\t\t\t\t\t\t\t.then((r) => r.blob())\n\t\t\t\t\t\t\t.then((b) => new File([b], 'wp.zip'))\n\t\t\t\t\t: undefined,\n\t\t\t\tsqliteIntegrationPluginZip: sqliteIntegrationRequest\n\t\t\t\t\t.then((r) => r.blob())\n\t\t\t\t\t.then((b) => new File([b], 'sqlite.zip')),\n\t\t\t\tspawnHandler: spawnHandlerFactory,\n\t\t\t\tsapiName,\n\t\t\t\tconstants,\n\t\t\t\thooks: {\n\t\t\t\t\tasync beforeWordPressFiles(php) {\n\t\t\t\t\t\tfor (const mount of mounts) {\n\t\t\t\t\t\t\tconst handle = await directoryHandleFromMountDevice(\n\t\t\t\t\t\t\t\tmount.device\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst unmount = await php.mount(\n\t\t\t\t\t\t\t\tmount.mountpoint,\n\t\t\t\t\t\t\t\tcreateDirectoryHandleMountHandler(handle, {\n\t\t\t\t\t\t\t\t\tinitialSync: {\n\t\t\t\t\t\t\t\t\t\tdirection: mount.initialSyncDirection,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tendpoint.unmounts[mount.mountpoint] = unmount;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tphpIniEntries,\n\t\t\t\tcreateFiles: {\n\t\t\t\t\t'/internal/ca-bundle.crt': CAroot\n\t\t\t\t\t\t? certificateToPEM(CAroot.certificate)\n\t\t\t\t\t\t: '',\n\t\t\t\t\t'/internal/shared/mu-plugins': {\n\t\t\t\t\t\t'1-playground-web.php': playgroundWebMuPlugin,\n\t\t\t\t\t\t'playground-includes': {\n\t\t\t\t\t\t\t'wp_http_dummy.php': transportDummy,\n\t\t\t\t\t\t\t'wp_http_fetch.php': transportFetch,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tgetFileNotFoundAction(relativeUri: string) {\n\t\t\t\t\tif (!knownRemoteAssetPaths.has(relativeUri)) {\n\t\t\t\t\t\treturn getFileNotFoundActionForWordPress(relativeUri);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This path is listed as a remote asset. Mark it as a static file\n\t\t\t\t\t// so the service worker knows it can issue a real fetch() to the server.\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'response',\n\t\t\t\t\t\tresponse: new PHPResponse(\n\t\t\t\t\t\t\t404,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'x-backfill-from': ['remote-host'],\n\t\t\t\t\t\t\t\t// Include x-file-type header so remote asset\n\t\t\t\t\t\t\t\t// retrieval continues to work for clients\n\t\t\t\t\t\t\t\t// running a prior service worker version.\n\t\t\t\t\t\t\t\t'x-file-type': ['static'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnew TextEncoder().encode('404 File not found')\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.__internal_setRequestHandler(requestHandler);\n\n\t\t\tconst primaryPhp = await requestHandler.getPrimaryPhp();\n\t\t\tawait this.setPrimaryPHP(primaryPhp);\n\n\t\t\t// NOTE: We need to derive the loaded WP version or we might assume WP loaded\n\t\t\t// from browser storage is the default version when it is actually something else.\n\t\t\t// Assuming an incorrect WP version would break remote asset retrieval for minified\n\t\t\t// WP builds – we would download the wrong assets pack.\n\t\t\tthis.loadedWordPressVersion = await getLoadedWordPressVersion(\n\t\t\t\trequestHandler\n\t\t\t);\n\t\t\tif (\n\t\t\t\tthis.requestedWordPressVersion !== this.loadedWordPressVersion\n\t\t\t) {\n\t\t\t\tlogger.warn(\n\t\t\t\t\t`Loaded WordPress version (${this.loadedWordPressVersion}) differs ` +\n\t\t\t\t\t\t`from requested version (${this.requestedWordPressVersion}).`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst wpStaticAssetsDir = wpVersionToStaticAssetsDirectory(\n\t\t\t\tthis.loadedWordPressVersion\n\t\t\t);\n\t\t\tconst remoteAssetListPath = joinPaths(\n\t\t\t\trequestHandler.documentRoot,\n\t\t\t\t'wordpress-remote-asset-paths'\n\t\t\t);\n\t\t\tif (\n\t\t\t\twpStaticAssetsDir !== undefined &&\n\t\t\t\t!primaryPhp.fileExists(remoteAssetListPath)\n\t\t\t) {\n\t\t\t\t// The loaded WP release has a remote static assets dir\n\t\t\t\t// but no remote asset listing, so we need to backfill the listing.\n\t\t\t\tconst listUrl = new URL(\n\t\t\t\t\tjoinPaths(\n\t\t\t\t\t\twpStaticAssetsDir,\n\t\t\t\t\t\t'wordpress-remote-asset-paths'\n\t\t\t\t\t),\n\t\t\t\t\twordPressSiteUrl\n\t\t\t\t);\n\t\t\t\ttry {\n\t\t\t\t\tconst remoteAssetPaths = await fetch(listUrl).then((res) =>\n\t\t\t\t\t\tres.text()\n\t\t\t\t\t);\n\t\t\t\t\tprimaryPhp.writeFile(remoteAssetListPath, remoteAssetPaths);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`Failed to fetch remote asset paths from ${listUrl}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (primaryPhp.isFile(remoteAssetListPath)) {\n\t\t\t\tconst remoteAssetPaths = primaryPhp\n\t\t\t\t\t.readFileAsText(remoteAssetListPath)\n\t\t\t\t\t.split('\\n');\n\t\t\t\tremoteAssetPaths.forEach((wpRelativePath) =>\n\t\t\t\t\tknownRemoteAssetPaths.add(joinPaths('/', wpRelativePath))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tsetApiReady();\n\t\t} catch (e) {\n\t\t\tsetAPIError(e as Error);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t// These methods are only here for the time traveling Playground demo.\n\t// Let's consider removing them in the future.\n\n\tasync journalFSEvents(\n\t\troot: string,\n\t\tcallback: (op: FilesystemOperation) => void\n\t) {\n\t\treturn journalFSEvents(this.__internal_getPHP()!, root, callback);\n\t}\n\n\tasync replayFSJournal(events: FilesystemOperation[]) {\n\t\treturn replayFSJournal(this.__internal_getPHP()!, events);\n\t}\n}\n\nconst [setApiReady, setAPIError] = exposeAPI(\n\tnew PlaygroundWorkerEndpoint(downloadMonitor)\n);\n"],"names":["currentJsRuntime","asPromise","obj","resolve","reject","event","isByobSupported","inputBytes","stream","File","sources","fileName","options","date","reader","position","blob","controller","view","buffer","uint8array","bytesRead","CustomEvent","name","url","e","errno","messagePrefix","target","methodName","descriptor","method","args","errmsg","path","formattedPrefix","log","prepareLogMessage","logMessage","message","handlers","handler","severity","prefix","formattedDate","formattedTime","now","ms","concurrency","timeout","acquired","value","released","fn","release","paths","hasTrailingSlash","p","isAbsolute","trailingSlash","normalizePath","lastSlash","parts","allowAboveRoot","up","i","last","command","mode","quote","currentPart","char","program","argsArray","childProcess","processApi","commandArray","eventName","data","listener","code","pid","self","length","specialChars","chars","result","vars","key","str","bytes","binString","_FSHelpers","FS","fromPath","toPath","fromMount","toMount","file","filePath","files","prepend","link","fromNode","filenames","filename","requestHandler","monitor","php","internalUrl","callback","request","reap","newName","eventType","httpStatusCode","headers","body","errors","exitCode","text","phpLoaderModule","phpModuleArgs","phpReady","resolvePHP","rejectPHP","PHPRuntime","reason","id","methods","promise","type","runtime","original","clearMessage","crypticError","asyncifyStack","betterMessage","line","stack","names","isWasm","response","source","PHPRuntimeId","listeners","l","runtimeId","returnData","heapBodyPointer","host","port","$_SERVER","env","error","defaults","HTTP_prefix","headersFilePath","headersData","colonIndex","headerName","headerValue","uri","queryString","protocol","size","contentLength","consts","errorListener","rethrown","err","cwd","oldFS","virtualFSPath","mountHandler","argv","arg","shouldSkip","normalized","oldNode","opt","eol","separator","children","keys","padToChars","k","a","b","out","arraySuffix","val","item","nk","section","child","lastMatchIndex","lastSeparatorIndex","nextIndex","sections","re","lines","duplicates","match","keyRaw","isArray","valueRaw","remove","nl","part","del","esc","unesc","c","entries","ini","parse","stringify","phpIniValues","iniBefore","setCookie","equalsIndex","cookiesArray","done","limit","spawned","spawnedPhp","factoryArgs","pop","instance","rejection","boundary","contentType","textEncoder","acc","offset","#DOCROOT","#PROTOCOL","#HOSTNAME","#PORT","#HOST","#PATHNAME","#ABSOLUTE_URL","#cookieStore","config","documentRoot","absoluteUrl","rewriteRules","getFileNotFoundAction","info","isNonStandardPort","requestedUrl","normalizedRequestedPath","primaryPhp","fsPath","possibleIndexFile","possibleIndexPath","fileNotFoundAction","effectiveRequest","#spawnPHPAndDispatchRequest","#serveStaticFile","arrayBuffer","scriptPath","spawnedPHP","#dispatchToPHP","preferredMethod","executionError","extension","rules","rule","recreateRuntime","maxRequests","runtimeRequestCount","rotateRuntime","rotateRuntimeAfterMaxRequests","rotateRuntimeForPhpWasmError","root","newFiles","rmRoot","relativePath","content","sourceOfTruth","replica","__private__symbol","port1","port2","serialized","allowedOrigins","origin","allowedOrigin","ep","ev","argumentList","returnValue","parent","prop","rawValue","wireValue","transferables","endpoint","isReleased","newCount","proxy","isProxyReleased","_target","r","_thisArg","rawArgumentList","arr","processed","v","transfers","w","context","targetOrigin","msg","serializedValue","apiMethods","pipedApi","connected","setReady","setFailed","ready","exposedApi","Comlink.expose","Comlink.windowEndpoint","Comlink.transferHandlers","Comlink.wrap","responseData","throwHandler","originalSerialize","object","Comlink.proxy","version","arrays","totalLength","buffers","listLength","serverNameList","nameType","valueLength","serverNames","writer","groups","group","formats","format","parsedAlgorithms","hash","algorithm","parsed","initialOffset","extensionType","extensionTypeName","extensionLength","extensionBytes","secret","label","seed","outputLength","seedBytes","hmacKey","A","resultBuffers","hmacInput","fragment","CompressionMethod","HandshakeType","tlsConnection","chunk","certificatePrivateKey","certificatesDER","clientHelloRecord","serverRandom","ecdheKeyPair","clientRandom","serverKeyExchange","clientKeyExchangeRecord","serverPrivateKey","clientPublicKey","preMasterSecret","masterSecret","keyBlock","clientWriteKey","serverWriteKey","clientIV","serverIV","messageType","requestedType","record","accumulatedPayload","header","description","requestedBytes","appData","payload","implicitIV","explicitIV","iv","decrypted","additionalData","ciphertextWithTag","cipherSuites","suite","msg_type","bodyBytes","buff","sessionIdLength","cipherSuitesLength","compressionMethodsLength","extensionsLength","chunkSize","certsBodies","cert","certsBody","rsaPrivateKey","publicKey","params","signedParams","signatureBytes","signatureAlgorithm","clientHello","compressionAlgorithm","extensionsParts","x","extensions","handshakeMessages","handshakeHash","verifyData","issuerKeyPair","certificate","tbsDescription","subjectKeyPair","tbsCertificate","privateKey","signature","subjectPublicKey","serialNumber","nameInfo","values","oidName","entry","validity","ca","pathLenConstraint","sequence","keyUsage","keyUsageBits","extKeyUsage","nsCertType","bits","altNames","generalNames","dnsName","ipAddresses","ip","ipAddress","sanExtensionValue","requestedName","oid","tempLength","lengthBytesArray","numLengthBytes","tag","lengthBytes","number","extendedNumber","unusedBits","combined","oidParts","encodedParts","j","utf8Bytes","items","tagNumber","constructed","pemString","year","month","day","hours","minutes","seconds","num","years","newDate","scope","newUrl","suffix","overrides","input","init","corsProxyUrl","directFetch","newInput","tcpOptions","_","wsOptions","CAroot","outputType","wsUrl","wrapper","siteCert","decodedFirstLine","encoder","status","headersObject","string","requestBytesStream","inputBuffer","requestDataExhausted","headersEndIndex","requestBytesReader","headersBuffer","parsedHeaders","outboundBodyStream","hostname","httpRequestBytes","httpRequest","statusLineMaybe","bufferLength","sequenceLength","lastPossibleIndex","found","WebSocketConstructor","phpVersion","websocketExtension","fsRoot","onEntry","bindToCurrentRuntime","FSHooks","op","originalFunctions","bind","hook","unbind","unbindFromOldRuntime","recordEntry","node","old_path","new_path","oldLookup","newParentPath","handle","vfsMountPoint","opfsRoot","memfsRoot","semaphore","ops","opfsParent","memfsParentPath","opfsHandle","memfsEntryPath","byteArray","onProgress","filesToCreate","mirrorMemfsDirectoryinOpfs","memfsParent","opfsDir","entryName","memfsPath","numFilesCompleted","throttledProgressCallback","maxConcurrentWrites","concurrentWrites","opfsFile","journal","unbindJournal","rewriter","flushJournal","opfs","opfsPath","opfsTargetPath","opfsTargetParent","targetName","normalizedPath","segments","segment","debounceMs","lastCallTime","timeoutId","pendingArgs","timeSinceLastCall","delay","wpVersion","device","json","factory","exports","CRC32","signed_crc_table","table","n","T0","slice_by_16_tables","T","TT","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","crc32_bstr","bstr","C","L","crc32_buf","B","crc32_str","d","b64","len","validLen","placeHoldersLen","lens","tmp","curByte","uint8","start","end","output","extraBytes","maxChunkLength","len2","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","s","rt","base64","require$$0","ieee754","require$$1","customInspectSymbol","Buffer","SlowBuffer","K_MAX_LENGTH","typedArraySupport","proto","createBuffer","buf","encodingOrOffset","allocUnsafe","from","fromString","fromArrayView","isInstance","fromArrayBuffer","valueOf","fromObject","assertSize","alloc","fill","encoding","checked","byteLength","actual","fromArrayLike","array","arrayView","copy","byteOffset","numberIsNaN","y","list","pos","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","max","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","read","foundIndex","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","hexSliceLookupTable","newBuf","checkOffset","ext","noAssert","mul","defineBigIntMethod","validateNumber","first","boundsError","lo","hi","checkInt","min","maxBytes","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","sub","checkIEEE754","writeFloat","littleEndian","writeDouble","targetStart","E","sym","getMessage","Base","range","received","addNumericalSeparator","checkBounds","INVALID_BASE64_RE","base64clean","units","leadSurrogate","src","dst","alphabet","i16","BufferBigIntNotDefined","expected","filepath","originalFetch","cache","responseInit","left","right","zipPath","extractToPath","overwriteFiles","zipFile","js","queryOptions","createPhp","isPrimary","relativeUri","versionString","wpVersionString","majorMinorMatch","requestPath","sqliteZip","SQLITE_PLUGIN_FOLDER","temporarySqlitePluginFolder","dbPhp","dbPhpPath","stopIfDbPhpExists","SQLITE_MUPLUGIN_PATH","wpZip","wpPath","firstDir","sourcePath","targetPath","processManager","cliBootstrapScript","remoteAssetListPath","staticAssetsUrl","staticAssetsDirectory","#assetsSizes","#progress","assets","urlLike","dummyBaseUrl","fetchPromise","#notify","loaded","fileSize","total","notify","mountpoint","mounts","sapiName","withNetworking","shouldInstallWordPress","wordPressRequest","wpDetails","sqliteDatabaseIntegrationModuleDetails.url","sqliteDatabaseIntegrationModuleDetails.size","sqliteIntegrationRequest","constants","knownRemoteAssetPaths","phpIniEntries","tcpOverFetch","wasmUrl","imports","receiveInstance","wasm","mount","unmount","wpStaticAssetsDir","listUrl","remoteAssetPaths","wpRelativePath","events"],"mappings":"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","x_google_ignoreList":[24,36,38,73,74,75,76]}